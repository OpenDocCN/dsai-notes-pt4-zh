- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2025-01-11 12:38:54'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2025-01-11 12:38:54
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Demo Paper: A Game Agents Battle Driven by Free-Form Text Commands Using Code-Generation
    LLM'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示论文：通过代码生成LLM驱动的自由文本命令的游戏代理战斗
- en: 来源：[https://arxiv.org/html/2405.11835/](https://arxiv.org/html/2405.11835/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://arxiv.org/html/2405.11835/](https://arxiv.org/html/2405.11835/)
- en: Ray Ito Faculty of Engineering,
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 伊藤雷，工程学院，
- en: The University of Tokyo Tokyo, Japan
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 东京大学，日本东京
- en: ray51ito@g.ecc.u-tokyo.ac.jp    Junichiro Takahashi Faculty of Engineering,
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ray51ito@g.ecc.u-tokyo.ac.jp    高桥纯一郎，工程学院，
- en: The University of Tokyo Tokyo, Japan
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 东京大学，日本东京
- en: takahashi-junichiro509@g.ecc.u-tokyo.ac.jp
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: takahashi-junichiro509@g.ecc.u-tokyo.ac.jp
- en: Abstract
  id: totrans-11
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: This paper presents a demonstration of our monster battle game, in which the
    game agents fight in accordance with their player’s language commands. The commands
    were translated into the knowledge expression called behavior branches by a code-generation
    large language model. This work facilitated the design of the commanding system
    more easily, enabling the game agent to comprehend more various and continuous
    commands than rule-based methods. The results of the commanding and translation
    process were stored in a database on an Amazon Web Services server for more comprehensive
    validation. This implementation would provide a sufficient evaluation of this
    ongoing work, and give insights to the industry that they could use this to develop
    their interactive game agents.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了我们怪物战斗游戏的演示，游戏代理根据玩家的语言命令进行战斗。这些命令被转换为一种名为行为分支的知识表达，由代码生成的大型语言模型（LLM）处理。该工作使得指令系统的设计更加简便，能够让游戏代理理解比基于规则的方法更为多样和连续的命令。指令和翻译过程的结果被存储在亚马逊Web服务（AWS）服务器上的数据库中，以便进行更全面的验证。这一实现将为正在进行的工作提供充分的评估，并为行业提供洞察，使他们可以利用这一技术开发互动游戏代理。
- en: 'Index Terms:'
  id: totrans-13
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 关键词：
- en: Game AI, Character AI, LLM, Game Agent, Knowledge Expression, Human-Computer
    Interaction, Entertainment Computing
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏AI，角色AI，大型语言模型（LLM），游戏代理，知识表达，人机交互，娱乐计算
- en: I Introduction
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: I 引言
- en: Game players’ desire to control their trained monsters has led to the success
    of games such as Pokémon, Digimon, and Monster Rancher. Still, players were only
    able to choose from a limited set of options to command their monsters in these
    games. This led to attempts, including [[1](https://arxiv.org/html/2405.11835v1#bib.bib1),
    [2](https://arxiv.org/html/2405.11835v1#bib.bib2), [3](https://arxiv.org/html/2405.11835v1#bib.bib3),
    [4](https://arxiv.org/html/2405.11835v1#bib.bib4)], to make game monsters understand
    and react to language commands, but these implementations were rule-based, which
    was not easy for developers to hard-code a sufficient interaction. Therefore,
    [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)] proposed a method to translate
    player language commands without limitations into the game agent’s action. The
    language command was passed to the code-generation large language model (LLM)
    model, which generated the knowledge expression called behavior branches. This
    method enabled the game agent to comprehend a wider range of content and expressions
    of the player’s commands. The concept of using code-generation LLM was originated
    from [[6](https://arxiv.org/html/2405.11835v1#bib.bib6)]. While [[6](https://arxiv.org/html/2405.11835v1#bib.bib6)]
    intended to handle independent tasks for robotics, [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]
    extended this to the game agents, allowing for the execution of more continuous
    and rapidly changing commands.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏玩家希望控制他们训练的怪物，这一需求催生了如《宝可梦》、《数码宝贝》和《怪物农场》等游戏的成功。然而，在这些游戏中，玩家只能从有限的选项中选择来指挥他们的怪物。这引发了许多尝试，包括[[1](https://arxiv.org/html/2405.11835v1#bib.bib1)，[2](https://arxiv.org/html/2405.11835v1#bib.bib2)，[3](https://arxiv.org/html/2405.11835v1#bib.bib3)，[4](https://arxiv.org/html/2405.11835v1#bib.bib4)]，旨在使游戏中的怪物理解并响应语言命令，但这些实现是基于规则的，开发者很难通过硬编码实现足够的互动。因此，[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]提出了一种方法，将玩家的语言命令不受限制地转换为游戏代理的行动。这些语言命令被传递给代码生成的大型语言模型（LLM），该模型生成名为行为分支的知识表达。这一方法使得游戏代理能够理解玩家命令中更广泛的内容和表达。使用代码生成LLM的概念源自[[6](https://arxiv.org/html/2405.11835v1#bib.bib6)]。虽然[[6](https://arxiv.org/html/2405.11835v1#bib.bib6)]的初衷是处理机器人独立任务，但[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]将这一方法扩展到游戏代理，从而实现更连续和快速变化命令的执行。
- en: 'To examine if this method worked, [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]
    only implemented a single controllable game agent against a single unmoving agent.
    However, the effectiveness of this approach in the context of actual player battles
    remained unexamined. In this paper, we demonstrate a system that enables two players
    to fight each other at a distance under this commanding system, and the command
    and translation results are stored in the database on our backend server. Therefore,
    we aimed to contribute to the advancement of knowledge and entertainment technology
    in the following ways:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了检查此方法是否有效，[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]仅实现了一个可控制的游戏代理与一个静止的代理对战。然而，在实际玩家对战的背景下，这种方法的有效性尚未得到验证。在本文中，我们展示了一个系统，使两个玩家能够在该指令系统下远程对战，并且指令和翻译结果被存储在我们后端服务器的数据库中。因此，我们旨在通过以下方式为知识和娱乐技术的进步做出贡献：
- en: •
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: To give practical validation to this ongoing work.
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了对这项正在进行的工作进行实际验证。
- en: •
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: To demonstrate to the industry and researchers that they could use or extend
    our method to develop their interactive game systems.
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 向行业和研究人员展示他们可以使用或扩展我们的方法来开发他们的互动游戏系统。
- en: II System Overview
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: II 系统概览
- en: II-A The Entire System
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: II-A 整个系统
- en: '![Refer to caption](img/9d25c9ec8b9cece20fed89d1faa2b68b.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/9d25c9ec8b9cece20fed89d1faa2b68b.png)'
- en: 'Figure 1: Overview of the entire system.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：整个系统的概览。
- en: 'The system consists of the following components as shown in Fig. [1](https://arxiv.org/html/2405.11835v1#S2.F1
    "Figure 1 ‣ II-A The Entire System ‣ II System Overview ‣ Demo Paper: A Game Agents
    Battle Driven by Free-Form Text Commands Using Code-Generation LLM"). Each description
    is as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 该系统由以下组件组成，如图[1](https://arxiv.org/html/2405.11835v1#S2.F1 "图1 ‣ II-A 整个系统 ‣
    II 系统概览 ‣ 演示论文：通过代码生成的LLM使用自由形式文本指令驱动的游戏代理对战")所示。每个组件的描述如下：
- en: •
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Unity (2022.3.15f1): Unity computed the game environment and provided the game
    environment to the players.'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unity (2022.3.15f1)：Unity计算游戏环境并将其提供给玩家。
- en: •
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Photon PUN2 (2.45): PUN2 was used for the real-time network synchronization
    between both Unity clients.'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Photon PUN2 (2.45)：PUN2用于Unity客户端之间的实时网络同步。
- en: •
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'AWS Server: The server was used to generate the behavior branches from the
    player’s commands and to store the translation logs. Each players were identified
    using Cognito, and the logs were stored in DynamoDB. Lambda did the API control
    including accessing the LLM model. The latency was all together 1.8 seconds on
    average.'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: AWS服务器：该服务器用于根据玩家的指令生成行为分支并存储翻译日志。每个玩家通过Cognito进行身份验证，日志存储在DynamoDB中。Lambda负责API控制，包括访问LLM模型。整体延迟平均为1.8秒。
- en: •
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Fireworks AI: The API of Fireworks AI was used for utilizing the default ‘llama-v2-34b-code’
    model. Fireworks AI was chosen for its rapid latency. The latency was 0.9 seconds
    on average.'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Fireworks AI：Fireworks AI的API用于利用默认的‘llama-v2-34b-code’模型。Fireworks AI因其快速的延迟被选择，平均延迟为0.9秒。
- en: II-B Game Environment
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: II-B 游戏环境
- en: 'In the game environment, two game agents were placed in the plain 3D space.
    The game agents could move in the 3D space, and use the following attacks¹¹1These
    were inspired by Creatures Inc. “Poképark Wii: Pikachu’s Adventure.”:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏环境中，两个游戏代理被放置在平面的3D空间中。游戏代理可以在3D空间中移动，并使用以下攻击¹¹1这些灵感来自于Creatures Inc.的《Poképark
    Wii：皮卡丘的冒险》：
- en: •
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Thunderbolt: The game agent shoots a thunderbolt (implemented as a sphere)
    to the opponent.'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 雷霆攻击：游戏代理向对手发射雷霆（实现为一个球体）。
- en: •
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Iron Tail: The game agent swings its tail to the opponent.'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 铁尾：游戏代理挥动尾巴攻击对手。
- en: •
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Tackle: The game agent rushes and hit the opponent.'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 猛扑：游戏代理冲向并击打对手。
- en: '![Refer to caption](img/7db0be900f8a675990f1d8994348fc46.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/7db0be900f8a675990f1d8994348fc46.png)'
- en: 'Figure 2: The visual interface of the game.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：游戏的视觉界面。
- en: 'The interface of the game is shown in Fig. [2](https://arxiv.org/html/2405.11835v1#S2.F2
    "Figure 2 ‣ II-B Game Environment ‣ II System Overview ‣ Demo Paper: A Game Agents
    Battle Driven by Free-Form Text Commands Using Code-Generation LLM"). The players
    could command their game agent by typing the command in the text box. The translation
    when the enter key was pressed. The game would be paused while the players were
    typing.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏的界面如图[2](https://arxiv.org/html/2405.11835v1#S2.F2 "图2 ‣ II-B 游戏环境 ‣ II 系统概览
    ‣ 演示论文：通过代码生成的LLM使用自由形式文本指令驱动的游戏代理对战")所示。玩家可以通过在文本框中输入指令来指挥他们的游戏代理。当按下回车键时，指令会被翻译。玩家输入时，游戏会暂停。
- en: II-C Command-Action Translation
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: II-C 指令-行动翻译
- en: 'Language commands were translated into the actionable knowledge expression
    called behavior branches proposed by [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)].
    Behavior branches were tree structures consisting of the following nodes:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 语言命令被翻译成可执行的知识表达形式，称为行为分支，由[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]提出。行为分支是由以下节点组成的树结构：
- en: •
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Action node: Specified the action to be executed.'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 动作节点：指定要执行的动作。
- en: •
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Condition node: This connected to two nodes, and the satisfaction of this node
    determined which node to be executed next.'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 条件节点：与两个节点相连，节点的满足情况决定下一个要执行的节点。
- en: •
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Control node: Specified the controling of the execution flow.'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 控制节点：指定执行流程的控制。
- en: This followed the concept of structural programming, and appending different
    behavior branches could dynamically edit the action flow. As the game agent followed
    these nodes, [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)] has shown that
    the game agent could understand and follow the commands freely written under the
    static experiment²²2Static experiment refers that only one game agent was playable
    and the other stayed still. Thus, the performance under the actual battle, which
    was the aim of this paper, remained unknown. For more details of the behavior
    branches, refer to [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)].
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这遵循了结构化编程的概念，附加不同的行为分支可以动态编辑执行流程。正如[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]所示，游戏代理能够理解并执行自由编写的命令，在静态实验中²²2静态实验指的是只有一个游戏代理可操作，其他保持静止。因此，本文的目标是探讨在实际战斗中的表现，而这一点尚未得到验证。有关行为分支的更多细节，请参阅[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]。
- en: As similar to [[6](https://arxiv.org/html/2405.11835v1#bib.bib6)], the prompt
    for the LLM presented the intended format and the examples of the translations
    in Python. The inference code was streamed back from the LLM API³³3It started
    to process it as soon as the closing bracket in the generated Python code referring
    to the behavior branch was detected. This early stopping made the translation
    1.1 seconds faster than [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]..
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与[[6](https://arxiv.org/html/2405.11835v1#bib.bib6)]类似，给LLM的提示提供了预期的格式和Python中翻译的示例。推理代码通过LLM
    API返回并开始处理，一旦检测到生成的Python代码中的闭合括号，指向行为分支，就开始处理。这个提前停止使得翻译比[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]快了1.1秒。
- en: II-D Logs in the Database
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: II-D 数据库中的日志
- en: '![Refer to caption](img/3981859cc9d73bd513c15545d648b7de.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题说明](img/3981859cc9d73bd513c15545d648b7de.png)'
- en: 'Figure 3: The screenshot of the table in DynamoDB. Note that any personal information
    is not shown.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：DynamoDB中表格的截图。请注意，任何个人信息均未显示。
- en: 'Fig. [3](https://arxiv.org/html/2405.11835v1#S2.F3 "Figure 3 ‣ II-D Logs in
    the Database ‣ II System Overview ‣ Demo Paper: A Game Agents Battle Driven by
    Free-Form Text Commands Using Code-Generation LLM") shows a clip of recorded data.
    There was one row for each command, including the ID of the battle session, the
    timestamp of the command in Unix time, the player’s Cognito ID, the original command
    text, and the translated behavior branch in JSON format.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图[3](https://arxiv.org/html/2405.11835v1#S2.F3 "图3 ‣ II-D 数据库中的日志 ‣ II 系统概述
    ‣ 演示论文：基于自由文本命令的游戏代理对战，使用代码生成LLM")显示了一段录制的数据。每个命令对应一行数据，包含战斗会话的ID、命令的Unix时间戳、玩家的Cognito
    ID、原始命令文本以及以JSON格式翻译的行为分支。
- en: III Demonstration
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: III 演示
- en: During the demonstration, two attendees will play the game with two laptops
    prepared. The demonstrator will explain the game rules and what moves the game
    agent able to do. The attendees will play the game by typing the command in the
    text box, and try to defeat the opponent’s game agent. The game will take approximately
    3 minutes. In short, the required facilities for this demo include a table to
    put the laptops and keyboards, and the internet connection.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在演示过程中，两个与会者将使用准备好的两台笔记本电脑玩游戏。演示者将解释游戏规则以及游戏代理能够执行的动作。与会者将通过在文本框中输入命令来玩游戏，并试图击败对方的游戏代理。整个游戏大约需要3分钟。简而言之，演示所需的设施包括一张可以放置笔记本电脑和键盘的桌子，以及网络连接。
- en: IV Conclusions and Future Works
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IV 结论与未来工作
- en: In this paper, we demonstrated a battle game system where the game characters
    flexibly follow the player’s directions. The method proposed by [[5](https://arxiv.org/html/2405.11835v1#bib.bib5)],
    translating player’s commands into Behavior Branches using code-generation LLM,
    has become available for actual battle gaming. For future work, we plan to conduct
    a quantitative and qualitative experiment to evaluate using the record and improve
    our suggested method so as to make it more practical and useful for the game industry.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了一种战斗游戏系统，其中游戏角色能灵活地跟随玩家的指令。由[[5](https://arxiv.org/html/2405.11835v1#bib.bib5)]提出的方法，通过代码生成的大型语言模型（LLM）将玩家指令转化为行为分支，已经能够应用于实际的战斗游戏中。未来的工作计划进行定量和定性实验，以评估和改进我们提出的方法，使其更加实用并对游戏行业更具价值。
- en: References
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Hobonichi Co. Ltd., “Pikachu decides that the mushroom in front of him
    is more important,” Hobo Niccan Itoi Shinbun, Feb. 1999\. https://www.1101.com/nintendo/nin3/nin3-2.htm
    (accessed Apr. 25, 2024).'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[1] Hobonichi Co. Ltd., “皮卡丘决定面前的蘑菇更为重要,” 《Hobo Niccan Itoi Shinbun》, 1999年2月。
    https://www.1101.com/nintendo/nin3/nin3-2.htm（访问日期：2024年4月25日）。'
- en: '[2] M. Yoshida, H. Bizen, M. Kambe, and Y. Kawai, “Voice Manipulation System
    on Virtual Space Using Synonyms,” Proc. of the Inf. Process. Soc. of Jpn. Annu.
    Conv., Mar. 2021, pp. 137–138.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[2] M. Yoshida, H. Bizen, M. Kambe, 和 Y. Kawai, “虚拟空间中的语音操控系统利用同义词,” 日本信息处理学会年会会议论文集,
    2021年3月, 第137-138页。'
- en: '[3] Q. Mehdi, X. Zeng, and N. Gough, “An interactive speech interface for virtual
    characters in dynamic environments,” in Proc. ISAS 04, 10th Int. Conf. on Inf.
    Syst. Anal. and Systhesis, Jul. 2004, pp. 243-248.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3] Q. Mehdi, X. Zeng, 和 N. Gough, “动态环境中虚拟角色的互动语音界面,” 在ISAS 04会议论文集, 第10届信息系统分析与综合国际会议,
    2004年7月, 第243-248页。'
- en: '[4] D. M. Waqar, T. S. Gunawan, M. Kartiwi and R. Ahmad, “Real-Time Voice-Controlled
    Game Interaction using Convolutional Neural Networks,” in 2021 IEEE 7th Int. Conf.
    on Smart Instrum., Meas. and Appl., 2021, pp. 76-81'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[4] D. M. Waqar, T. S. Gunawan, M. Kartiwi 和 R. Ahmad, “使用卷积神经网络的实时语音控制游戏互动,”
    2021年IEEE第七届智能仪器、测量与应用国际会议, 2021年, 第76-81页。'
- en: '[5] R. Ito and J. Takahashi, “Game Agent Driven by Free-Form Text Command:
    Using LLM-based Code Generation and Behavior Branch (in press),” The 38th Annu.
    Conf. of the Jpn. Soc. for Artif. Intell., May 2024, Available: https://arxiv.org/abs/2402.07442.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[5] R. Ito 和 J. Takahashi, “由自由形式文本命令驱动的游戏代理：利用基于LLM的代码生成和行为分支（待出版）,” 日本人工智能学会第38届年会,
    2024年5月, 可用: https://arxiv.org/abs/2402.07442。'
- en: '[6] J. Liang et al., “Code as Policies: Language Model Programs for Embodied
    Control,” in 2023 IEEE Int. Conf. on Robot. and Automat., May 2023, pp. 9493-9500.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[6] J. Liang 等, “作为策略的代码：语言模型程序在具身控制中的应用,” 2023年IEEE机器人与自动化国际会议, 2023年5月, 第9493-9500页。'
