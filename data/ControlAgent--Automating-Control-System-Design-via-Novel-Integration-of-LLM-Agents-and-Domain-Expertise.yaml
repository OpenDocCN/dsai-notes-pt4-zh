- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 'category: 未分类'
- en: 'date: 2025-01-11 12:02:10'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 'date: 2025-01-11 12:02:10'
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ControlAgent：通过大语言模型（LLM）代理与领域专家知识的新型集成自动化控制系统设计
- en: 来源：[https://arxiv.org/html/2410.19811/](https://arxiv.org/html/2410.19811/)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://arxiv.org/html/2410.19811/](https://arxiv.org/html/2410.19811/)
- en: Xingang Guo¹    Darioush Keivan¹    Usman Syed¹    Lianhui Qin²    Huan Zhang¹
       Geir Dullerud¹    Peter Seiler³    Bin Hu¹(¹University of Illinois at Urbana–Champaign
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Xingang Guo¹    Darioush Keivan¹    Usman Syed¹    Lianhui Qin²    Huan Zhang¹
       Geir Dullerud¹    Peter Seiler³    Bin Hu¹(¹伊利诺伊大学厄本那-香槟分校
- en: ²University of California, San Diego
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: ²加利福尼亚大学圣地亚哥分校
- en: ³University of Michigan )
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ³密歇根大学）
- en: Abstract
  id: totrans-9
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: Control system design is a crucial aspect of modern engineering with far-reaching
    applications across diverse sectors including aerospace, automotive systems, power
    grids, and robotics. Despite advances made by Large Language Models (LLMs) in
    various domains, their application in control system design remains limited due
    to the complexity and specificity of control theory. To bridge this gap, we introduce
    ControlAgent, a new paradigm that automates control system design via novel integration
    of LLM agents and control-oriented domain expertise. ControlAgent encodes expert
    control knowledge and emulates human iterative design processes by gradually tuning
    controller parameters to meet user-specified requirements for stability, performance
    (e.g. settling time), and robustness (e.g., phase margin). Specifically, ControlAgent
    integrates multiple collaborative LLM agents, including a central agent responsible
    for task distribution and task-specific agents dedicated to detailed controller
    design for various types of systems and requirements. In addition to LLM agents,
    ControlAgent employs a Python computation agent that performs complex control
    gain calculations and controller evaluations based on standard design information
    (e.g. crossover frequency, etc) provided by task-specified LLM agents. Combined
    with a history and feedback module, the task-specific LLM agents iteratively refine
    controller parameters based on real-time feedback from prior designs. Overall,
    ControlAgent mimics the design processes used by (human) practicing engineers,
    but removes all the human efforts and can be run in a fully automated way to give
    end-to-end solutions for control system design with user-specified requirements.
    To validate ControlAgent’s effectiveness, we develop ControlEval, an evaluation
    dataset that comprises 500 control tasks with various specific design goals. The
    effectiveness of ControlAgent is demonstrated via extensive comparative evaluations
    between LLM-based and traditional human-involved toolbox-based baselines. Our
    numerical experiments show that ControlAgent can effectively carry out control
    design tasks, marking a significant step towards fully automated control engineering
    solutions. Our code is available at [https://github.com/ControlAgent/ControlAgent.git](https://github.com/ControlAgent/ControlAgent.git)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 控制系统设计是现代工程学的一个关键领域，广泛应用于航空航天、汽车系统、电网和机器人等多个行业。尽管大语言模型（LLM）在多个领域取得了进展，但由于控制理论的复杂性和专业性，它们在控制系统设计中的应用仍然有限。为了解决这一问题，我们提出了ControlAgent，一个通过大语言模型（LLM）代理和控制领域知识的新型集成方法来自动化控制系统设计。ControlAgent编码了专家控制知识，并通过逐步调整控制器参数来模拟人类的迭代设计过程，以满足用户对稳定性、性能（例如，稳定时间）和鲁棒性（例如，幅值裕度）的要求。具体来说，ControlAgent集成了多个协作的LLM代理，包括负责任务分配的中央代理，以及专注于各种类型系统和需求的详细控制器设计的任务专用代理。除了LLM代理，ControlAgent还使用一个Python计算代理，基于任务指定的LLM代理提供的标准设计信息（例如，交叉频率等）执行复杂的控制增益计算和控制器评估。结合历史和反馈模块，任务专用LLM代理根据前期设计的实时反馈迭代优化控制器参数。总体而言，ControlAgent模仿了（人类）工程师的设计过程，但消除了所有人类努力，并可以完全自动化运行，为控制系统设计提供端到端的解决方案，满足用户指定的要求。为了验证ControlAgent的有效性，我们开发了ControlEval，一个包含500个控制任务的数据集，涵盖了各种具体设计目标。通过与基于LLM的对比评估和传统的人工工具箱基准对比，展示了ControlAgent的有效性。我们的数值实验表明，ControlAgent能够有效地完成控制设计任务，标志着朝着完全自动化控制工程解决方案迈出了重要的一步。我们的代码可在[https://github.com/ControlAgent/ControlAgent.git](https://github.com/ControlAgent/ControlAgent.git)获取。
- en: 1 Introduction
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: Recent advancements in large language models (LLMs) have spurred the development
    of sophisticated LLM agents, demonstrating remarkable capabilities in areas such
    as code generation, reasoning, tool use, and software development, among many
    other applications (Hong et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib28);
    Zhang et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib82); Mei et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib48); Wu et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib76);
    Liu et al., [2023b](https://arxiv.org/html/2410.19811v1#bib.bib42); Talebirad
    and Nadiri, [2023](https://arxiv.org/html/2410.19811v1#bib.bib71); Li et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib36); M. Bran et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib44);
    Liu et al., [2024b](https://arxiv.org/html/2410.19811v1#bib.bib41), [2023a](https://arxiv.org/html/2410.19811v1#bib.bib40);
    Zhuge et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib85)). Despite
    these breakthroughs, the application of LLM agents in modern engineering design
    remains relatively underexplored. Building on the exciting progress in LLM reasoning,
    it seems natural to expect great potential of LLMs as modern engineering design
    assistants. By breaking down complex engineering design processes into smaller
    specific tasks, LLM agents could potentially improve both the productivity and
    efficiency of engineering workflows via reducing human efforts from practicing engineers.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，大型语言模型（LLMs）在许多应用领域（如代码生成、推理、工具使用和软件开发等）取得了显著进展，催生了先进的LLM代理，展示了卓越的能力（Hong
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib28); Zhang et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib82);
    Mei et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib48); Wu et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib76); Liu et al., [2023b](https://arxiv.org/html/2410.19811v1#bib.bib42);
    Talebirad and Nadiri, [2023](https://arxiv.org/html/2410.19811v1#bib.bib71); Li
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib36); M. Bran et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib44); Liu et al., [2024b](https://arxiv.org/html/2410.19811v1#bib.bib41),
    [2023a](https://arxiv.org/html/2410.19811v1#bib.bib40); Zhuge et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib85))。尽管取得了这些突破，LLM代理在现代工程设计中的应用仍然相对较少。基于LLM推理方面的激动人心的进展，似乎自然可以预期LLM作为现代工程设计助手具有巨大的潜力。通过将复杂的工程设计过程拆解为更小的具体任务，LLM代理有可能通过减少工程师的工作量，提高工程工作流的生产力和效率。
- en: Control design is a cornerstone of modern engineering, underpinning a wide range
    of applications in both daily life and industrial processes, such as automobile
    cruise control systems, home thermostats, industrial robot manipulators, aircraft
    autopilots, chemical process control in refineries, and power grid frequency regulation
    (Åström and Murray, [2021](https://arxiv.org/html/2410.19811v1#bib.bib5); Ogata,
    [2009](https://arxiv.org/html/2410.19811v1#bib.bib53); Boyd and Barratt, [1991](https://arxiv.org/html/2410.19811v1#bib.bib8);
    Anderson, [1993](https://arxiv.org/html/2410.19811v1#bib.bib2); Rivera et al.,
    [1986](https://arxiv.org/html/2410.19811v1#bib.bib63)). Conventional controller
    design often requires human expertise and iterative design protocols, which may
    involve tedious repeated computation work. For instance, Proportional-Integral-Derivative
    (PID) control has been widely used in industry, but its design process involves
    iterative tuning from practicing control engineers to meet conflicting requirements¹¹1Due
    to the fundamental trade-offs between performance and robustness, control design
    is intrinsically subtle with a multi-objective nature. For example, classical
    control aims to achieve fast reference tracking and disturbance rejection while
    also being insensitive to noise and robust to model uncertainty. in terms of system
    performance and robustness (Ogata, [2009](https://arxiv.org/html/2410.19811v1#bib.bib53);
    Xu et al., [2008](https://arxiv.org/html/2410.19811v1#bib.bib79); Liu et al.,
    [2014](https://arxiv.org/html/2410.19811v1#bib.bib39)). It seems natural to ask
    whether LLMs can be leveraged to automate such tedious design processes and reduce
    the burden on human experts. In this paper, we provide an affirmative answer to
    this question via integrating LLM agents and control-oriented domain expertise
    in a novel manner.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 控制设计是现代工程的基石，支撑着日常生活和工业过程中广泛的应用，例如汽车巡航控制系统、家用恒温器、工业机器人操作臂、飞机自动驾驶仪、炼油厂的化学过程控制以及电网频率调节（Åström
    和 Murray，[2021](https://arxiv.org/html/2410.19811v1#bib.bib5)；Ogata，[2009](https://arxiv.org/html/2410.19811v1#bib.bib53)；Boyd
    和 Barratt，[1991](https://arxiv.org/html/2410.19811v1#bib.bib8)；Anderson，[1993](https://arxiv.org/html/2410.19811v1#bib.bib2)；Rivera
    等，[1986](https://arxiv.org/html/2410.19811v1#bib.bib63)）等。传统的控制器设计通常需要人类专业知识和迭代设计流程，这可能涉及繁琐的重复计算工作。例如，比例-积分-微分（PID）控制已经广泛应用于工业中，但其设计过程需要控制工程师通过迭代调节，以满足相互冲突的要求¹¹1由于性能和鲁棒性之间的基本权衡，控制设计本质上是微妙的，具有多目标特性。例如，经典控制旨在实现快速的参考追踪和干扰抑制，同时对噪声不敏感，并对模型不确定性具有鲁棒性（Ogata，[2009](https://arxiv.org/html/2410.19811v1#bib.bib53)；Xu
    等，[2008](https://arxiv.org/html/2410.19811v1#bib.bib79)；Liu 等，[2014](https://arxiv.org/html/2410.19811v1#bib.bib39)）。由此自然产生一个问题：是否可以利用大语言模型（LLM）来自动化这些繁琐的设计过程，从而减轻人类专家的负担？在本文中，我们通过以一种新颖的方式整合LLM代理和控制领域的专业知识，给出了肯定的答案。
- en: '![Refer to caption](img/cd87c864f4ac85d91fd09e1af10e36ca.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明文字](img/cd87c864f4ac85d91fd09e1af10e36ca.png)'
- en: 'Figure 1: General ControlAgent framework.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：通用控制代理框架。
- en: 'Specifically, our paper presents ControlAgent, an LLM-based framework that
    automates control system design by seamlessly integrating domain knowledge and
    tool utilization (see Figure [1](https://arxiv.org/html/2410.19811v1#S1.F1 "Figure
    1 ‣ 1 Introduction ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise")). ControlAgent encodes expert
    control knowledge and emulates human iterative design processes by gradually tuning
    controller parameters to meet user-specified requirements for stability, performance
    (e.g. settling time), and robustness (e.g., phase margin). ControlAgent integrates
    multiple collaborative LLM agents, including a central agent for task distribution
    and task-specific agents for detailed controller design across various systems
    and requirements, alongside a Python computation agent that performs complex control
    gain calculations and evaluations based on standard design information provided
    by the task-specific LLM agents. Utilizing a history and feedback module, ControlAgent
    enables task-specific LLM agents to iteratively refine controller parameters,
    mimicking the design processes of practicing engineers while eliminating human
    effort to provide fully automated, end-to-end solutions for control system design
    that meet user-specified requirements. Figure [1](https://arxiv.org/html/2410.19811v1#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise") illustrates a general overview
    of the ControlAgent framework. Users simply provide the necessary task information,
    such as the dynamic systems to be controlled and the associated performance requirements.
    ControlAgent then analyzes the task, performs iterative design processes similar
    to practicing engineers, and returns the final design solution. Our contributions
    are threefold and summarized as below.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '具体来说，我们的论文提出了ControlAgent，这是一个基于LLM的框架，通过无缝集成领域知识和工具利用，自动化控制系统设计（见图[1](https://arxiv.org/html/2410.19811v1#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise")）。ControlAgent编码了专家的控制知识，并通过逐步调整控制器参数来模拟人类的迭代设计过程，以满足用户指定的稳定性、性能（如稳定时间）和鲁棒性（如相位裕度）要求。ControlAgent集成了多个协作的LLM代理，包括一个用于任务分配的中央代理和多个任务特定的代理，用于各类系统和需求的详细控制器设计，同时还配备了一个执行复杂控制增益计算和评估的Python计算代理，基于任务特定LLM代理提供的标准设计信息。利用历史和反馈模块，ControlAgent使任务特定的LLM代理能够迭代地优化控制器参数，模仿实践工程师的设计过程，同时消除人工干预，提供完全自动化、端到端的控制系统设计解决方案，满足用户指定的要求。图[1](https://arxiv.org/html/2410.19811v1#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise")展示了ControlAgent框架的概述。用户只需提供必要的任务信息，如需控制的动态系统和相关的性能要求。然后，ControlAgent会分析任务，执行类似实践工程师的迭代设计过程，并返回最终设计方案。我们的贡献有三方面，总结如下：'
- en: '1.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: We present ControlAgent, a first fully automated LLM-based framework that emulates
    human-like iterative design processes for control engineering. By integrating
    domain-specific human expertise into LLM agents and combining external tool use,
    ControlAgent systematically refines control designs based on prior designs without
    human intervention.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们提出了ControlAgent，这是第一个完全自动化的基于LLM的框架，能够模拟人类迭代设计过程，用于控制工程。通过将领域特定的人类专业知识整合到LLM代理中，并结合外部工具的使用，ControlAgent在没有人工干预的情况下，系统地基于先前的设计优化控制设计。
- en: '2.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: We construct ControlEval, a thorough evaluation benchmark for classic control
    design, ranging from relatively simple first-order system designs to more complex
    higher-order system designs. This benchmark serves as a standard for evaluating
    LLM-based control design workflows.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们构建了ControlEval，这是一个全面的经典控制设计评估基准，涵盖从相对简单的一阶系统设计到更复杂的高阶系统设计。该基准作为评估基于LLM的控制设计工作流程的标准。
- en: '3.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: We conduct a comprehensive experimental study on ControlEval to validate the
    performance and robustness of ControlAgent, demonstrating superior performance
    of ControlAgent over both LLM-based and traditional toolbox-based baseline methods.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在ControlEval上进行了全面的实验研究，以验证ControlAgent的性能和鲁棒性，结果表明，ControlAgent在性能上优于基于LLM和传统工具箱的基准方法。
- en: Unique Novelty.
  id: totrans-23
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 独特的创新。
- en: 'Recently, there has been some work showing that LLMs have gained knowledge
    related to control engineering and can answer textbook-level control system questions
    to some extent (Kevian et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib32)).
    However, going beyond the textbook level, LLMs still cannot generate practical
    control design in a reliable manner. Beside the computation errors, LLMs may also
    make various reasoning errors for practical control design. A key gap is that
    control design is intrinsically subtle due to the performance-robustness trade-off,
    and LLMs do not know how to mitigate such subtle trade-offs in a reliable way
    even if they are exposed to many different control methods. In this paper, we
    develop ControlAgent in a way that it mimics how practicing engineers mitigate
    such design trade-offs via PID tuning and frequency-domain loop-shaping (see Figure
    [1](https://arxiv.org/html/2410.19811v1#S1.F1 "Figure 1 ‣ 1 Introduction ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")). Consequently, ControlAgent becomes reliable in designing controllers
    with satisfying performance and robustness.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，有一些研究表明LLM已经掌握了与控制工程相关的知识，并且能够在一定程度上回答教科书级别的控制系统问题（Kevian等人, [2024](https://arxiv.org/html/2410.19811v1#bib.bib32)）。然而，超越教科书级别后，LLM仍然无法以可靠的方式生成实用的控制设计。除了计算错误，LLM在实际控制设计中还可能犯下各种推理错误。一个关键问题是，控制设计本质上非常微妙，因为它涉及性能与鲁棒性之间的权衡，而LLM即使接触了许多不同的控制方法，也不知道如何可靠地缓解这种微妙的权衡。在本文中，我们开发了ControlAgent，它模拟了工程师如何通过PID调节和频域闭环整形来缓解这种设计权衡（见图[1](https://arxiv.org/html/2410.19811v1#S1.F1
    "图1 ‣ 1 引言 ‣ ControlAgent：通过LLM代理与领域专家的创新整合实现控制系统设计自动化")）。因此，ControlAgent在设计满足性能和鲁棒性要求的控制器时变得更加可靠。
- en: 2 Related Work
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 相关工作
- en: Classic Control Design.
  id: totrans-26
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 经典控制设计。
- en: Controller design is traditionally approached in a case-by-case manner, as it
    heavily depends on the specific applications at hand. Among various control strategies,
    PID control and loop-shaping remain the most widely used due to their simplicity
    and ease of implementation. Over the years, a plethora of PID/loop-shaping tuning
    methods have been developed (Åström and Hägglund, [1995](https://arxiv.org/html/2410.19811v1#bib.bib4);
    Skogestad, [2001](https://arxiv.org/html/2410.19811v1#bib.bib67); Mann et al.,
    [2001](https://arxiv.org/html/2410.19811v1#bib.bib46); Awouda and Mamat, [2010](https://arxiv.org/html/2410.19811v1#bib.bib6);
    O’dwyer, [2009](https://arxiv.org/html/2410.19811v1#bib.bib52); Padula and Visioli,
    [2011](https://arxiv.org/html/2410.19811v1#bib.bib57); Panda, [2008](https://arxiv.org/html/2410.19811v1#bib.bib58);
    Lequin et al., [2003](https://arxiv.org/html/2410.19811v1#bib.bib35); Skogestad,
    [2003](https://arxiv.org/html/2410.19811v1#bib.bib68)). Despite these advancements,
    the tuning process still heavily relies on human expertise and manual intervention
    to identify suitable controller parameters that meet design criteria. ControlAgent
    aims to fill this gap via integrating LLM agents and human expert knowledge for
    automating control system design.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 控制器设计传统上是通过逐个案例的方法进行的，因为它在很大程度上依赖于具体应用的需求。在各种控制策略中，由于其简便性和易于实现，PID控制和闭环整形仍然是最广泛使用的方法。多年来，已经开发出了大量的PID/闭环整形调节方法（Åström和Hägglund,
    [1995](https://arxiv.org/html/2410.19811v1#bib.bib4); Skogestad, [2001](https://arxiv.org/html/2410.19811v1#bib.bib67);
    Mann等人, [2001](https://arxiv.org/html/2410.19811v1#bib.bib46); Awouda和Mamat, [2010](https://arxiv.org/html/2410.19811v1#bib.bib6);
    O’dwyer, [2009](https://arxiv.org/html/2410.19811v1#bib.bib52); Padula和Visioli,
    [2011](https://arxiv.org/html/2410.19811v1#bib.bib57); Panda, [2008](https://arxiv.org/html/2410.19811v1#bib.bib58);
    Lequin等人, [2003](https://arxiv.org/html/2410.19811v1#bib.bib35); Skogestad, [2003](https://arxiv.org/html/2410.19811v1#bib.bib68))。尽管这些方法取得了进展，调节过程仍然在很大程度上依赖于人工专家的经验和手动干预，以确定符合设计标准的合适控制器参数。ControlAgent旨在通过整合LLM代理和人类专家知识来填补这一空白，从而实现控制系统设计的自动化。
- en: LLM for Engineering Design.
  id: totrans-28
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 工程设计中的LLM。
- en: Several studies have explored the potential of LLMs in addressing various engineering
    domains (Ghosh and Team, [2024](https://arxiv.org/html/2410.19811v1#bib.bib21);
    Poddar et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib61); Alsaqer
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib1); Majumder et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib45)). In addition, (Kevian et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib32); Syed et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib70);
    Xu et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib78)) introduced benchmark
    datasets to evaluate the textbook-level knowledge of LLMs in control, transportation,
    and water engineering. AnalogCoder (Lai et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib34))
    is developed for analog circuits design, while SPICED (Chaudhuri et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib12))
    focused on the bug detection in circuit netlists with the aid of LLMs. Furthermore,
    AmpAgent (Liu et al., [2024a](https://arxiv.org/html/2410.19811v1#bib.bib38))
    utilizes LLMs for multi-stage amplifier design.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一些研究探讨了LLM在解决各种工程领域问题的潜力（Ghosh 和团队, [2024](https://arxiv.org/html/2410.19811v1#bib.bib21);
    Poddar et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib61); Alsaqer
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib1); Majumder et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib45)）。此外，（Kevian et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib32);
    Syed et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib70); Xu et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib78)）介绍了用于评估LLM在控制、交通和水利工程中的教材级知识的基准数据集。AnalogCoder（Lai
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib34)）是为模拟电路设计开发的，而SPICED（Chaudhuri
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib12)）则专注于借助LLM在电路网表中的错误检测。此外，AmpAgent（Liu
    et al., [2024a](https://arxiv.org/html/2410.19811v1#bib.bib38)）利用LLM进行多阶段放大器设计。
- en: LLM-based Agents.
  id: totrans-30
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 基于LLM的代理。
- en: 'LLM-based agents take textual or visual information as input for complex task
    solving, which has attracted a lot interests in both academia and industry recently
    (Wang et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib75)). In particular,
    multi-agent systems leverage the interaction among multiple LLM agents for more
    complex tasks (Zhuge et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib85);
    Josifoski et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib31); Park
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib60); Li et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib36);
    Zhuge et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib84)). For example,
    AutoGen (Wu et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib76)) provides
    a generic multi-agent framework for various applications including coding, question
    answering, mathematics, etc. MetaGPT (Hong et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib28))
    is a multi-agent LLM framework inspired by the Standardized Operating Procedures
    developed from human protocol for efficient task decomposition and coordination.
    Overall, the field of LLM agents is very active. See Appendix [B.1](https://arxiv.org/html/2410.19811v1#A2.SS1
    "B.1 More Related Work ‣ Appendix B More Discussions on Related Work and Control
    Background ‣ ControlAgent: Automating Control System Design via Novel Integration
    of LLM Agents and Domain Expertise") for a more comprehensive literature review.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '基于LLM的代理通过将文本或视觉信息作为输入来解决复杂任务，最近在学术界和工业界引起了广泛关注（Wang et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib75)）。特别是，多代理系统利用多个LLM代理之间的互动来完成更复杂的任务（Zhuge
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib85); Josifoski et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib31); Park et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib60);
    Li et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib36); Zhuge et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib84))。例如，AutoGen（Wu et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib76)）提供了一个通用的多代理框架，用于各种应用，包括编程、问答、数学等。MetaGPT（Hong
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib28)）是一个多代理LLM框架，灵感来自人类协议中开发的标准化操作程序，用于高效的任务分解和协调。总的来说，LLM代理领域非常活跃。请参阅附录[B.1](https://arxiv.org/html/2410.19811v1#A2.SS1
    "B.1 更多相关工作 ‣ 附录B 更多关于相关工作和控制背景的讨论 ‣ ControlAgent: 通过LLM代理和领域专业知识的新颖整合自动化控制系统设计")，以获取更全面的文献综述。'
- en: 3 Preliminary
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 初步
- en: This section briefly reviews the basic background of classic control. The field
    of control engineering focuses on the design, analysis, and implementation of
    feedback mechanisms that are used to regulate and steer dynamic systems to achieve
    desired outputs or behaviors (Åström and Murray, [2021](https://arxiv.org/html/2410.19811v1#bib.bib5);
    Ogata, [2009](https://arxiv.org/html/2410.19811v1#bib.bib53)). Application examples
    includes everyday devices like the heating and air conditioning as well as more
    advanced systems such as autonomous cars and airplane autopilots. First, we will
    review the notion of dynamical systems studied in classic control.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要回顾经典控制的基本背景。控制工程领域专注于反馈机制的设计、分析和实现，这些反馈机制用于调节和引导动态系统，以实现期望的输出或行为（Åström
    和 Murray，[2021](https://arxiv.org/html/2410.19811v1#bib.bib5)；Ogata，[2009](https://arxiv.org/html/2410.19811v1#bib.bib53)）。应用示例包括日常设备，如供暖和空调系统，以及更先进的系统，如自动驾驶汽车和飞机自动驾驶仪。首先，我们将回顾经典控制中研究的动态系统的概念。
- en: Dynamical System Models.
  id: totrans-34
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 动态系统模型。
- en: 'A dynamical system can be represented in various mathematical forms to describe
    the relationship between the inputs and outputs, including differential equations,
    state-space models, and transfer functions (Goodwin et al., [2001](https://arxiv.org/html/2410.19811v1#bib.bib23);
    Boyd and Barratt, [1991](https://arxiv.org/html/2410.19811v1#bib.bib8)). The main
    objects studied in classic control design are linear time-invariant (LTI) systems,
    which can be represented in either time domain by a linear ordinary differential
    equation (ODE) or in frequency domain by an equivalent transfer function. For
    instance, the transfer function of an LTI system has the following form:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 动态系统可以通过各种数学形式来表示，以描述输入和输出之间的关系，包括微分方程、状态空间模型和传递函数（Goodwin 等，[2001](https://arxiv.org/html/2410.19811v1#bib.bib23)；Boyd
    和 Barratt，[1991](https://arxiv.org/html/2410.19811v1#bib.bib8)）。经典控制设计中研究的主要对象是线性时不变（LTI）系统，这些系统可以通过线性常微分方程（ODE）在时域中表示，或通过等效的传递函数在频域中表示。例如，LTI
    系统的传递函数具有如下形式：
- en: '|  | $G(s)=\frac{b_{m}s^{m}+b_{m-1}s^{m-1}+\cdots+b_{1}s+b_{0}}{a_{n}s^{n}+a_{n-1}s^%
    {n-1}+\cdots+a_{1}s+a_{0}},$ |  | (3.1) |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '|  | $G(s)=\frac{b_{m}s^{m}+b_{m-1}s^{m-1}+\cdots+b_{1}s+b_{0}}{a_{n}s^{n}+a_{n-1}s^{n-1}+\cdots+a_{1}s+a_{0}},$
    |  | (3.1) |'
- en: 'where $s$ is the complex frequency variable in the Laplace domain. It is common
    to assume that the system is proper ($m\leq n$) as this aligns with models for
    physical systems. Notice that the system ([3.1](https://arxiv.org/html/2410.19811v1#S3.E1
    "In Dynamical System Models. ‣ 3 Preliminary ‣ ControlAgent: Automating Control
    System Design via Novel Integration of LLM Agents and Domain Expertise")) has
    an equivalent time-domain ODE form that relates the input signal $u(t)$ to the
    output signal $y(t)$:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $s$ 是拉普拉斯域中的复频率变量。通常假设系统是适当的（$m \leq n$），因为这与物理系统的模型一致。请注意，该系统（[3.1](https://arxiv.org/html/2410.19811v1#S3.E1
    "在动态系统模型中 ‣ 3 初步 ‣ ControlAgent：通过新型集成LLM代理和领域专业知识自动化控制系统设计")）具有等效的时域 ODE 形式，该形式将输入信号
    $u(t)$ 与输出信号 $y(t)$ 联系起来：
- en: '|  | $\displaystyle a_{n}\frac{d^{n}}{dt^{n}}\,y(t)+\ldots+a_{1}\frac{d}{dt}\,y(t)+a%
    _{0}\,y(t)=b_{m}\frac{d^{m}}{dt^{m}}\,u(t)+\ldots+b_{1}\frac{d}{dt}\,u(t)+b_{0%
    }\,u(t)$ |  | (3.2) |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|  | $\displaystyle a_{n}\frac{d^{n}}{dt^{n}}\,y(t)+\ldots+a_{1}\frac{d}{dt}\,y(t)+a_{0}\,y(t)=b_{m}\frac{d^{m}}{dt^{m}}\,u(t)+\ldots+b_{1}\frac{d}{dt}\,u(t)+b_{0}\,u(t)$
    |  | (3.2) |'
- en: This form is general enough to model the dynamics of various practical systems
    such as automotive systems, robotics, and many others. Importantly, there always
    exist gaps between models and reality. Classic control design is highly successful
    in practice as control engineers use safety factors ("stability margins") that
    account for such model-reality gaps.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这种形式足够通用，能够模拟各种实际系统的动态特性，如汽车系统、机器人技术等。重要的是，模型和现实之间总是存在差距。经典控制设计在实践中非常成功，因为控制工程师使用安全因子（“稳定性裕度”）来考虑这些模型与现实之间的差距。
- en: '![Refer to caption](img/ecf8ed8bc5d34c43a100eef1366d83c5.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题说明](img/ecf8ed8bc5d34c43a100eef1366d83c5.png)'
- en: 'Figure 2: A feedback control system illustrating the reference $r$, measured
    output $y$, disturbance $d$, and noise $n$. The dynamical model $G(s)$ provides
    a mathematical approximation of the real physical system. The inherent mismatch
    between the real system and its mathematical model underscores the need for a
    robust controller $C(s)$ to ensure reliable performance despite modeling inaccuracies.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图2：一个反馈控制系统，展示了参考$r$、测量输出$y$、干扰$d$和噪声$n$。动态模型$G(s)$提供了实际物理系统的数学近似。实际系统与其数学模型之间固有的不匹配，强调了需要一个鲁棒的控制器$C(s)$来确保尽管存在建模不准确性，仍能实现可靠的性能。
- en: Classic Control Design.
  id: totrans-42
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 经典控制设计。
- en: 'Feedback control, shown in Figure [2](https://arxiv.org/html/2410.19811v1#S3.F2
    "Figure 2 ‣ Dynamical System Models. ‣ 3 Preliminary ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise"),
    can be used to steer the plant output $y(t)$ to track a reference signal $r(t)$.
    This architecture: (a) uses a sensor to measure the output $y(t)$, (b) computes
    the tracking error $e(t)=r(t)-y(t)$, and (c) uses a control algorithm $C(s)$ to
    compute the input to the plant based on the error. Figure [2](https://arxiv.org/html/2410.19811v1#S3.F2
    "Figure 2 ‣ Dynamical System Models. ‣ 3 Preliminary ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")
    depicts a standard feedback loop where the measured output $y(t)$ is used by the
    controller to compute the input to the system which then affects the output $y(t)$.
    This architecture is known as closed-loop control because feeding the measurement
    back to the controller creates a loop around the plant. A key lesson from modern
    control engineering is that the robustness to disturbance and model uncertainty
    can be typically achieved by a closed-loop design equipped with sensing, actuation,
    and feedback. Classical control focuses on designing the controller $C(s)$ (which
    is an LTI system by itself and implemented on a microprocessor). There are numerous,
    often conflicting, objectives for classic control design, and standard design
    requirements include:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '如图[2](https://arxiv.org/html/2410.19811v1#S3.F2 "Figure 2 ‣ Dynamical System
    Models. ‣ 3 Preliminary ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise")所示，反馈控制可以用来将工厂输出$y(t)$引导到跟踪参考信号$r(t)$。该架构：（a）使用传感器测量输出$y(t)$，（b）计算跟踪误差$e(t)=r(t)-y(t)$，并且（c）使用控制算法$C(s)$根据误差计算输入到工厂的信号。图[2](https://arxiv.org/html/2410.19811v1#S3.F2
    "Figure 2 ‣ Dynamical System Models. ‣ 3 Preliminary ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")展示了一个标准的反馈回路，其中测量的输出$y(t)$被控制器用于计算输入到系统的信号，从而影响输出$y(t)$。该架构被称为闭环控制，因为将测量值反馈给控制器形成了一个围绕工厂的回路。现代控制工程的一个关键教训是，通常通过配备传感、驱动和反馈的闭环设计可以实现对干扰和模型不确定性的鲁棒性。经典控制聚焦于设计控制器$C(s)$（它本身是一个线性时不变（LTI）系统，并在微处理器上实现）。经典控制设计有许多目标，且这些目标往往相互冲突，标准设计要求包括：'
- en: •
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Closed-loop stability: A poorly designed system can cause a system to go unstable,
    i.e. signals can grow unbounded. The practical consequence is that the system
    or device can be destroyed leading to financial loss or even loss of life. To
    avoid this, closed-loop stabibility is a must.'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 闭环稳定性：设计不良的系统可能导致系统不稳定，即信号可能会无限增长。实际后果是，系统或设备可能会被破坏，从而导致财务损失甚至生命损失。为了避免这种情况，闭环稳定性是必须的。
- en: •
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Fast reference tracking: The controller should be designed so that the system
    output tracks the desired reference command. This involves various performance
    metrics but mainly the system should respond quickly to changes in the reference
    command.'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 快速参考跟踪：控制器应设计成使得系统输出能够跟踪期望的参考命令。这涉及到多种性能指标，但主要是系统应能够迅速响应参考命令的变化。
- en: •
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Disturbance rejection: Disturbances $d(t)$ are external signals that affect
    the plant dynamics. For example, the a car with a cruise control system is affected
    by forces due to wind gusts and hills. The controller should be designed so that
    disturbances have small effect on tracking.'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 干扰抑制：干扰$d(t)$是影响工厂动态的外部信号。例如，一辆配有巡航控制系统的汽车会受到风速变化和坡度变化的影响。控制器应设计成使得干扰对跟踪的影响较小。
- en: •
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Actuator limits: The input signal generated by the controller should remain
    within allowable levels. For example the throttle (accelerator) on a car can only
    move by a certain amount. The command from the controller must remain within these
    allowable bounds.'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 执行器限制：控制器产生的输入信号应保持在允许的范围内。例如，汽车上的油门（加速器）只能在一定范围内移动。控制器发出的命令必须保持在这些允许的范围内。
- en: •
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Rejection of sensor noise: The feedback controller relies on sensor measurements.
    It is typically required that any measurement inaccuracies, e.g. noise, have small
    effect on tracking. Moreover, the noise should have a small effect on the control
    effort.'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 拒绝传感器噪声：反馈控制器依赖于传感器测量。通常要求任何测量不准确性，例如噪声，对跟踪的影响较小。此外，噪声对控制努力的影响应尽可能小。
- en: •
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Robustness to model-reality gap: As noted above, there exist some gaps between
    the model used for control design and the true systems that the controller is
    deployed on. The controller must be robust, i.e. insensitive, to such model-reality
    gaps that typically include errors due to parameter variations and unmodeled dynamics.'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对模型与现实之间差距的鲁棒性：如上所述，控制设计中使用的模型与实际控制器部署的系统之间存在一定的差距。控制器必须具备鲁棒性，即对这种模型与现实之间的差距不敏感，这些差距通常包括由于参数变化和未建模动态所产生的误差。
- en: This multi-objective nature necessitates the performance/robustness trade-offs,
    which lie at the core of classic control design.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这种多目标性质要求在性能和鲁棒性之间进行权衡，这也是经典控制设计的核心内容。
- en: Performance/Robustness Trade-offs.
  id: totrans-57
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 性能/鲁棒性权衡。
- en: 'The various design requirements roughly boil down to three main categories
    : i) closed-loop stability , ii) performance (e.g. tracking speed), and iii) robustness
    (see Appendix [B.2](https://arxiv.org/html/2410.19811v1#A2.SS2 "B.2 More Background
    on Classic Control ‣ Appendix B More Discussions on Related Work and Control Background
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise") for definitions). The settling time $T_{s}$ is arguably
    the most important performance metric, since it measures the time required for
    the system’s response to reach within a specified percentage (e.g., 2% or 5%)
    of the steady-state value, and small $T_{s}$ just implies fast reference tracking.
    Robustness is also crucial. As illustrated in Figure [2](https://arxiv.org/html/2410.19811v1#S3.F2
    "Figure 2 ‣ Dynamical System Models. ‣ 3 Preliminary ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise"),
    there always exist a gap between the dynamical model used for control design and
    the real physical system which the controller is deployed on. It is a must to
    make the controller robust against the model-reality gap. In this context, phase
    margin is typically recognized as the most important robustness metric (Chang
    and Han, [1990](https://arxiv.org/html/2410.19811v1#bib.bib11); Ho et al., [1996](https://arxiv.org/html/2410.19811v1#bib.bib27)),
    and on the conceptual level, large phase margin implies strong robustness. Since
    achieving small settling time (fast tracking) and large phase margin (robustness)
    are competing objectives, practicing control engineers typically use settling
    time and phase margin as tuning knobs for navigating the performance/robustness
    trade-offs in classic control design. There are many secondary metrics (e.g. gain
    margin, etc) that can be used to provide fine-grained descriptions for the six
    control design requirements mentioned above. However, it is known from control
    practice that PID and loop-shaping design with settling time and phase margin
    being tuning knobs can be sufficient in addressing the complicated performance/robustness
    trade-offs involving all six control design requirements simultaneously. One main
    goal of our study is to develop the first LLM-based framework that can automatically
    address such subtle performance/robustness trade-offs in control design.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '各种设计要求大致可以归纳为三大类：i）闭环稳定性，ii）性能（例如跟踪速度），以及iii）鲁棒性（定义见附录[B.2](https://arxiv.org/html/2410.19811v1#A2.SS2
    "B.2 更多经典控制背景 ‣ 附录B 更多相关工作与控制背景讨论 ‣ ControlAgent: 通过大语言模型代理和领域专长的创新整合自动化控制系统设计")）。稳态时间$T_{s}$无疑是最重要的性能指标，因为它衡量了系统响应达到稳态值的指定百分比（例如，2%或5%）所需的时间，较小的$T_{s}$意味着快速参考跟踪。鲁棒性同样至关重要。如图[2](https://arxiv.org/html/2410.19811v1#S3.F2
    "图2 ‣ 动态系统模型 ‣ 3 初步 ‣ ControlAgent: 通过大语言模型代理和领域专长的创新整合自动化控制系统设计")所示，控制设计中使用的动态模型与实际部署控制器的物理系统之间总是存在差距。必须确保控制器具有针对模型与现实之间差距的鲁棒性。在这种情况下，相位裕度通常被认为是最重要的鲁棒性指标（Chang和Han，[1990](https://arxiv.org/html/2410.19811v1#bib.bib11);
    Ho等人，[1996](https://arxiv.org/html/2410.19811v1#bib.bib27)），从概念上讲，较大的相位裕度意味着较强的鲁棒性。由于实现较小的稳态时间（快速跟踪）和较大的相位裕度（鲁棒性）是相互竞争的目标，实践中的控制工程师通常使用稳态时间和相位裕度作为调节旋钮，在经典控制设计中平衡性能与鲁棒性之间的权衡。还有许多次级指标（例如增益裕度等）可以用来对上述六个控制设计要求提供细致的描述。然而，控制实践中已知，使用稳态时间和相位裕度作为调节旋钮的PID和环路整形设计通常足以解决同时涉及这六个控制设计要求的复杂性能与鲁棒性权衡。我们研究的一个主要目标是开发第一个基于大语言模型（LLM）的框架，能够自动应对控制设计中这种微妙的性能与鲁棒性权衡。'
- en: '![Refer to caption](img/f784bbf90f40e60abbb60124e2cff4ff.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/f784bbf90f40e60abbb60124e2cff4ff.png)'
- en: 'Figure 3: The controller design process of ControlAgent, showcasing interactions
    between the User, Central agent, Python agent, History and Feedback module, and
    Task-Specific Agents to design a controller that meets stability, phase margin,
    and settling time requirements.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：ControlAgent的控制器设计过程，展示了用户、中央代理、Python代理、历史与反馈模块以及任务特定代理之间的交互，以设计一个符合稳定性、相位裕度和稳态时间要求的控制器。
- en: 4 ControlAgent
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 ControlAgent
- en: '![Refer to caption](img/ef0b87e871356274c9865bb0948cbb79.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/ef0b87e871356274c9865bb0948cbb79.png)'
- en: 'Figure 4: Workflow of the task-specific agent in ControlAgent. The design history
    and feedback are dynamically updated based on previous iterations. ControlAgent
    refines its designs iteratively, incorporating user instructions and feedback
    at each step. By the third iteration, ControlAgent achieves a final design that
    satisfies the user’s requirements, achieving a settling time of less than 0.3
    seconds (as shown in the time response plot) and maintaining a phase margin consistently
    greater than $70^{\circ}$ (as depicted in the Bode plot).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：ControlAgent 中任务特定代理的工作流程。设计历史和反馈会根据前几次迭代动态更新。ControlAgent 通过迭代精炼设计，在每一步都结合用户指令和反馈。在第三次迭代时，ControlAgent
    实现了一个最终设计，满足用户要求，达到了小于 0.3 秒的稳态时间（如时间响应图所示），并保持相位裕度始终大于 $70^{\circ}$（如 Bode 图所示）。
- en: 'In this section, we present ControlAgent, detailing its agent architecture,
    iterative design mechanisms, and communication protocols. An overview of ControlAgent
    has been illustrated in Figure [1](https://arxiv.org/html/2410.19811v1#S1.F1 "Figure
    1 ‣ 1 Introduction ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise"),'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '在本节中，我们介绍了 ControlAgent，详细描述了其代理架构、迭代设计机制和通信协议。ControlAgent 的概述已在图 [1](https://arxiv.org/html/2410.19811v1#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise") 中展示，'
- en: Agent Design.
  id: totrans-65
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 代理设计。
- en: 'We break down the complex controller design into smaller and more specific
    tasks, requiring the collaboration of agents with different skills and expertise.
    ControlAgent compromises three types of agents:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将复杂的控制器设计分解为更小、更具体的任务，要求具有不同技能和专长的代理进行协作。ControlAgent 包含三种类型的代理：
- en: '1.'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: Central agent $\mathcal{A}_{c}$ acts as the task distributor, processes user
    inputs and assigns specific requests to the sublevel agents based on the nature
    of the controller design task.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中央代理 $\mathcal{A}_{c}$ 作为任务分发器，处理用户输入并根据控制器设计任务的性质将特定请求分配给子级代理。
- en: '2.'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: Task-specific agent $\mathcal{A}_{\text{spec}}$ receives the user request and
    high-level task analysis from the central agent, and encodes with domain-specific
    expertise to initiate the controller design process, following the iterative methodology
    discussed below.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 任务特定代理 $\mathcal{A}_{\text{spec}}$ 接收来自中央代理的用户请求和高级任务分析，并结合领域特定的专业知识编码，启动控制器设计过程，遵循下面讨论的迭代方法。
- en: '3.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: Python computation agent $\mathcal{A}_{p}$ carries out the complex computation
    steps involved in controller design and performance evaluations, ensuring reliable
    controller synthesis and evaluations.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Python 计算代理 $\mathcal{A}_{p}$ 执行控制器设计和性能评估中涉及的复杂计算步骤，确保可靠的控制器合成和评估。
- en: 'For illustrations, Figure [3](https://arxiv.org/html/2410.19811v1#S3.F3 "Figure
    3 ‣ Performance/Robustness Trade-offs. ‣ 3 Preliminary ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")
    presents an example of the controller design workflow within ControlAgent. The
    user initially provides the system’s dynamic model (represented as a transfer
    function) along with the specified design criteria on closed-loop stability, settling
    time, and phase margin. The central agent subsequently analyzes the task and delegates
    it to a specialized task-specific agent, tailored to the task’s requirements.
    Each task-specific agent, endowed with domain-specific expertise, initiates the
    design process upon receiving the assignment. The designed controller is evaluated
    by the Python agent, while a history and feedback module archives the design process
    and generates valuable feedback to enable iterative refinement.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '作为示例，图 [3](https://arxiv.org/html/2410.19811v1#S3.F3 "Figure 3 ‣ Performance/Robustness
    Trade-offs. ‣ 3 Preliminary ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise") 展示了 ControlAgent 中控制器设计工作流的一个例子。用户最初提供系统的动态模型（以传递函数表示），以及闭环稳定性、稳态时间和相位裕度等指定的设计标准。中央代理随后分析任务并将其委派给一个专门的任务特定代理，针对任务的要求量身定制。每个任务特定代理在接收到任务后，凭借领域特定的专业知识启动设计过程。设计好的控制器由
    Python 代理进行评估，同时历史和反馈模块存档设计过程，并生成有价值的反馈，以便进行迭代优化。'
- en: 'Input: User requirements $\mathcal{R}$, Maximum iterations $N_{\text{max}}$Output:
    Designed controller $C$Initialize memory buffer: $\mathcal{M}\leftarrow\emptyset$;Initialize
    feedback: $\mathcal{F}_{0}=\{\}$;Task Assignment: $\mathcal{A}_{c}$ assigns the
    task to $\mathcal{A}_{\text{spec}}$ based on $\mathcal{R}$: $\mathcal{A}_{\text{spec}}\leftarrow\text{AssignTask}(\mathcal{A}_{c},\mathcal{%
    R})$for *$k=1$ to $N_{\text{max}}$* do       Generate input prompt: $\mathcal{P}_{k}\leftarrow\text{GenPrompt}(\mathcal{E}_{\text{spec}},\mathcal{R%
    },\mathcal{M},\mathcal{F}_{k-1})$;      LLM agent generates controller: $C_{k}\leftarrow\mathcal{A}_{\text{spec}}(\mathcal{P}_{k})$;      Update
    memory buffer: $\mathcal{M}\leftarrow\mathcal{M}\cup\{C_{k}\}$;      Python agent
    $\mathcal{A}_{p}$ evaluates $C_{k}$ and computes performance $P_{k}$;      if *$P_{k}$
    satisfies $R$* then             return Successfully designed controller $C_{k}$;      else            
    Generate feedback: $\mathcal{F}_{k}\leftarrow\text{GenFeedback}(P_{k},R)$;return
    No successful controller is found;'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 输入：用户需求 $\mathcal{R}$，最大迭代次数 $N_{\text{max}}$ 输出：设计的控制器 $C$ 初始化内存缓冲区：$\mathcal{M}\leftarrow\emptyset$；初始化反馈：$\mathcal{F}_{0}=\{\}$；任务分配：$\mathcal{A}_{c}$
    根据 $\mathcal{R}$ 将任务分配给 $\mathcal{A}_{\text{spec}}$：$\mathcal{A}_{\text{spec}}\leftarrow\text{AssignTask}(\mathcal{A}_{c},\mathcal{R})$
    对于 *$k=1$ 到 $N_{\text{max}}$* 执行：       生成输入提示：$\mathcal{P}_{k}\leftarrow\text{GenPrompt}(\mathcal{E}_{\text{spec}},\mathcal{R},\mathcal{M},\mathcal{F}_{k-1})$；      LLM
    代理生成控制器：$C_{k}\leftarrow\mathcal{A}_{\text{spec}}(\mathcal{P}_{k})$；      更新内存缓冲区：$\mathcal{M}\leftarrow\mathcal{M}\cup\{C_{k}\}$；      Python
    代理 $\mathcal{A}_{p}$ 评估 $C_{k}$ 并计算性能 $P_{k}$；      如果 *$P_{k}$ 满足 $R$* 则            
    返回成功设计的控制器 $C_{k}$；      否则             生成反馈：$\mathcal{F}_{k}\leftarrow\text{GenFeedback}(P_{k},R)$；返回未找到成功的控制器；
- en: Algorithm 1 Iterative Controller Design Process of ControlAgent
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 算法 1 控制代理的迭代控制器设计过程
- en: Iterative Design via Structured Memory Design.
  id: totrans-76
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 通过结构化内存设计的迭代设计。
- en: 'ControlAgent relies on the iterative design and feedback mechanism to mimic
    the design processes used by practicing engineers (see Figure [4](https://arxiv.org/html/2410.19811v1#S4.F4
    "Figure 4 ‣ 4 ControlAgent ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise")). Traditional controller
    design by control engineers often involves a cycle of trial and error, requiring
    fine-tuning of controller parameters based on observed feedback. Similarly, for
    LLM agents to perform control system design effectively, they must follow an iterative
    design process. This involves accessing previous designs and performance metrics,
    and using feedback to refine their outputs to improve the performance and robustness
    of the controller configuration. However, storing all past outputs of LLM agents
    and simply reusing them in the next iteration is impractical due to the context
    window limitations of LLMs. To address this, ControlAgent manages memory through
    an efficient structured memory buffer $\mathcal{M}$ that retains only essential
    information: the previously designed controller parameters and their associated
    performances, rather than complete historical outputs. This strategy allows the
    agent to recall crucial details from past iterations without exceeding memory
    capacity. In addition, ControlAgent also dynamically evaluates the current performance
    in comparison to user requirements. If the current design does not meet the requirements,
    a feedback $\mathcal{F}$ is created, encoded, and then incorporated into the input
    prompt for the LLM agent in the next iteration.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: ControlAgent 依赖于迭代设计和反馈机制，模仿实际工程师使用的设计过程（见图 [4](https://arxiv.org/html/2410.19811v1#S4.F4
    "图 4 ‣ 4 ControlAgent ‣ ControlAgent：通过LLM代理和领域专长的新颖集成自动化控制系统设计")）。传统的控制工程师设计控制器通常涉及试错循环，需要根据观察到的反馈对控制器参数进行微调。同样，LLM
    代理要有效地执行控制系统设计，它们也必须遵循迭代设计过程。这涉及访问先前的设计和性能指标，并使用反馈来细化其输出，以改善控制器配置的性能和鲁棒性。然而，由于
    LLM 的上下文窗口限制，存储所有 LLM 代理的过去输出并简单地在下一个迭代中重用它们是不可行的。为了解决这个问题，ControlAgent 通过一个高效的结构化内存缓冲区
    $\mathcal{M}$ 来管理内存，只保留必要的信息：先前设计的控制器参数及其相关的性能，而不是完整的历史输出。这一策略使得代理能够在不超出内存容量的情况下回忆起过去迭代中的关键细节。此外，ControlAgent
    还动态评估当前设计与用户需求的比较。如果当前设计未满足要求，将创建反馈 $\mathcal{F}$，对其进行编码，然后将其纳入下次迭代中 LLM 代理的输入提示中。
- en: 'We summarize the iterative design process of ControlAgent as in Algorithm [1](https://arxiv.org/html/2410.19811v1#alg1
    "In Agent Design. ‣ 4 ControlAgent ‣ ControlAgent: Automating Control System Design
    via Novel Integration of LLM Agents and Domain Expertise"), and provide some detailed
    explanations here. The input prompt to the LLM agents consists of four main components:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '我们总结了ControlAgent的迭代设计过程，如算法[1](https://arxiv.org/html/2410.19811v1#alg1 "在代理设计中。
    ‣ 4 ControlAgent ‣ ControlAgent: 通过将LLM代理与领域专业知识的创新整合自动化控制系统设计")所示，并在这里提供一些详细的解释。LLM代理的输入提示包含四个主要组件：'
- en: '1.'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1.'
- en: 'Design instruction: the design instruction $\mathcal{E}_{\text{spec}}$ is distilled
    from domain expertise for each specific task to enhance the LLM agents’ capabilities
    in controller design with particular focus on mitigating performance/robustness
    trade-offs via PID or loop-shaping with settling time and phase margin being used
    as the tuning knobs.'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 设计指令：设计指令$\mathcal{E}_{\text{spec}}$从领域专业知识中提炼出来，针对每个特定任务，增强LLM代理在控制器设计方面的能力，特别是通过PID或回路整形方法，聚焦于通过调节稳态时间和相位裕度等参数来缓解性能/稳健性权衡问题。
- en: '2.'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '2.'
- en: 'User requirements: the user requirements $\mathcal{U}$ are provided directly
    by the user.'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 用户需求：用户需求$\mathcal{U}$由用户直接提供。
- en: '3.'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3.'
- en: 'Memory and feedback: this component includes the retrieval of previous design
    parameters from the structured memory buffer $\mathcal{M}$, along with automatically
    generated feedback to highlight the deficiencies of the current design.'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 存储和反馈：此组件包括从结构化存储缓冲区$\mathcal{M}$中检索先前设计的参数，以及自动生成的反馈，用于突出当前设计的不足。
- en: '4.'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '4.'
- en: 'Response instruction: the response instruction $\mathcal{R}$ specifies the
    response format to ensure that key information can be extracted efficiently.'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 响应指令：响应指令$\mathcal{R}$指定响应格式，以确保关键信息能够高效提取。
- en: Upon receiving the task requirements from the central agent $\mathcal{A}_{c}$,
    the task-specific LLM agent $\mathcal{A}_{\text{spec}}$ iteratively designs a
    new controller based on the provided instructions, previously failed designs,
    and feedback. During each iteration, $\mathcal{A}_{\text{spec}}$ generates a new
    controller design, which is then stored in the memory buffer. Subsequently, a
    Python agent $\mathcal{A}_{p}$ retrieves the design and conducts evaluations.
    If the current design satisfies the user-defined requirements, the iteration process
    halts, and the successfully designed controller is returned. Otherwise, a feedback
    signal is generated by comparing the current performance against the user requirements,
    and the process continues to the next iteration until the maximum iteration count
    is reached.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到来自中央代理$\mathcal{A}_{c}$的任务要求后，任务特定LLM代理$\mathcal{A}_{\text{spec}}$根据提供的指令、先前失败的设计和反馈，迭代设计新的控制器。在每次迭代中，$\mathcal{A}_{\text{spec}}$生成一个新的控制器设计，并将其存储在存储缓冲区中。随后，Python代理$\mathcal{A}_{p}$检索该设计并进行评估。如果当前设计满足用户定义的需求，迭代过程终止，并返回成功设计的控制器。否则，通过将当前性能与用户需求进行比较，生成反馈信号，过程将继续进行下一次迭代，直到达到最大迭代次数为止。
- en: 5 ControlEval
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5 控制评估
- en: 'Since no suitable open-source dataset is currently available for validating
    ControlAgent, we developed a new evaluation dataset, called ControlEval, to serve
    this purpose. ControlEval consists of 10 distinct types of control tasks based
    on various systems and requirements. For each task type, we construct 50 individual
    systems, each paired with its corresponding design requirements, resulting in
    a comprehensive dataset of 500 control tasks. ControlEval includes a diverse set
    of dynamical systems such as first-order stable and unstable systems, second-order
    stable and unstable systems with varying response speed modes, first-order systems
    with time delay, and general higher-order systems. The design criteria for each
    task involve a combination of closed-loop stability, settling time (to quantify
    tracking performance), and phase margin (to assess robustness). These are three
    key metrics for classic control design. For first and second-order stable systems,
    we further differentiate between three different speeds of response defined by
    the variation in settling time: fast, moderate, and slow. The fast mode requires
    the system to converge to its steady-state value within a short period of time,
    which is typical for applications that demand quick response times, such as servo
    motor control systems (Krah and Klarenbach, [2010](https://arxiv.org/html/2410.19811v1#bib.bib33))
    and quadcopter flight control systems (Bramlette and Barrett-Gonzalez, [2017](https://arxiv.org/html/2410.19811v1#bib.bib9)).
    In contrast, the slow mode requires a more gradual convergence, which is more
    suitable in scenarios where the dynamic system model is less precise and less
    aggressive control is desired, such as wind turbine control (Ossmann et al., [2021](https://arxiv.org/html/2410.19811v1#bib.bib55)).
    Some samples from ControlEval are provided in Table [1](https://arxiv.org/html/2410.19811v1#S5.T1
    "Table 1 ‣ 5 ControlEval ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise") including the system types,
    system dynamical models, response mode, and the associated design requirements.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '由于当前没有适合验证 ControlAgent 的开源数据集，我们开发了一个新的评估数据集，名为 ControlEval，来满足这一需求。ControlEval
    包含基于不同系统和需求的 10 种不同类型的控制任务。对于每种任务类型，我们构建了 50 个独立的系统，并为每个系统配对相应的设计要求，从而形成了一个包含
    500 个控制任务的综合数据集。ControlEval 涵盖了多种动态系统，如一阶稳定与不稳定系统、二阶稳定与不稳定系统（具有不同响应速度模式）、一阶时滞系统，以及一般高阶系统。每个任务的设计标准包括闭环稳定性、稳定时间（用于量化跟踪性能）和相位裕度（用于评估鲁棒性）。这三项是经典控制设计的关键指标。对于一阶和二阶稳定系统，我们进一步通过稳定时间的变化来区分三种不同的响应速度：快速、中等和慢速。快速模式要求系统在短时间内收敛到稳态值，通常适用于需要快速响应的应用场景，例如伺服电机控制系统（Krah
    和 Klarenbach，[2010](https://arxiv.org/html/2410.19811v1#bib.bib33)）和四旋翼飞行控制系统（Bramlette
    和 Barrett-Gonzalez，[2017](https://arxiv.org/html/2410.19811v1#bib.bib9)）。相比之下，慢速模式要求系统更为平缓地收敛，适用于那些动态系统模型不够精确且希望采用较为温和控制的场景，如风力涡轮机控制（Ossmann
    等，[2021](https://arxiv.org/html/2410.19811v1#bib.bib55)）。表[1](https://arxiv.org/html/2410.19811v1#S5.T1
    "Table 1 ‣ 5 ControlEval ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise")中提供了来自 ControlEval 的一些样本，包括系统类型、系统动态模型、响应模式以及相关的设计要求。'
- en: '| System Type | 1st-order stb | 2nd-order stb | 1st-order w/ delay | Higher-order
    System |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 系统类型 | 一阶稳定 | 二阶稳定 | 一阶带有时滞 | 高阶系统 |'
- en: '| System Model | $\dfrac{2.19}{s+10.99}$ | $\dfrac{5.88}{s^{2}+1.43s+0.91}$
    | $\dfrac{8.79e^{-0.14s}}{s+4}$ | $\dfrac{225}{s^{3}+14.2s^{2}+46s+40}$ |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 系统模型 | $\dfrac{2.19}{s+10.99}$ | $\dfrac{5.88}{s^{2}+1.43s+0.91}$ | $\dfrac{8.79e^{-0.14s}}{s+4}$
    | $\dfrac{225}{s^{3}+14.2s^{2}+46s+40}$ |'
- en: '| Response Mode | Moderate | Slow | (-) | (-) |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| 响应模式 | 中等 | 慢 | (-) | (-) |'
- en: '| Stability | $\checkmark$ | $\checkmark$ | $\checkmark$ | $\checkmark$ |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 稳定性 | $\checkmark$ | $\checkmark$ | $\checkmark$ | $\checkmark$ |'
- en: '| Settling Time Range | $T_{s}\in[0.04,0.58]$ | $T_{s}\in[12.70,34.04]$ | $T_{s}\in[0.63,6.68]$
    | $T_{s}\in[1.05,8.4]$ |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 稳定时间范围 | $T_{s}\in[0.04,0.58]$ | $T_{s}\in[12.70,34.04]$ | $T_{s}\in[0.63,6.68]$
    | $T_{s}\in[1.05,8.4]$ |'
- en: '| Phase Margin | $\phi_{m}\geq 81.74^{\circ}$ | $\phi_{m}\geq 61.57^{\circ}$
    | $\phi_{m}\geq 44.06^{\circ}$ | $\phi_{m}\geq 62.54^{\circ}$ |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 相位裕度 | $\phi_{m}\geq 81.74^{\circ}$ | $\phi_{m}\geq 61.57^{\circ}$ | $\phi_{m}\geq
    44.06^{\circ}$ | $\phi_{m}\geq 62.54^{\circ}$ |'
- en: 'Table 1: System models and their corresponding control design criteria.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1：系统模型及其对应的控制设计标准。
- en: 'Due to inherent limitations in the control of unstable systems, systems with
    time delays, and higher-order systems, it is not always possible to satisfy arbitrary
    combinations of performance/robustness requirements (Stein, [2003](https://arxiv.org/html/2410.19811v1#bib.bib69);
    Seron et al., [2012](https://arxiv.org/html/2410.19811v1#bib.bib66); Freudenberg
    and Looze, [1985](https://arxiv.org/html/2410.19811v1#bib.bib17), [1987](https://arxiv.org/html/2410.19811v1#bib.bib16),
    [1988](https://arxiv.org/html/2410.19811v1#bib.bib18)). Therefore, human experts
    have carefully curated the dataset to ensure that the task requirements are feasible
    and achievable. Further information on the dataset can be found in Appendix [D](https://arxiv.org/html/2410.19811v1#A4
    "Appendix D More Details on ControlEval ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise").'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '由于在控制不稳定系统、具有时间延迟的系统以及高阶系统时存在固有的限制，无法总是满足任意组合的性能/鲁棒性要求（Stein，[2003](https://arxiv.org/html/2410.19811v1#bib.bib69);
    Seron 等人，[2012](https://arxiv.org/html/2410.19811v1#bib.bib66); Freudenberg 和
    Looze，[1985](https://arxiv.org/html/2410.19811v1#bib.bib17)，[1987](https://arxiv.org/html/2410.19811v1#bib.bib16)，[1988](https://arxiv.org/html/2410.19811v1#bib.bib18)）。因此，人工专家已经仔细挑选了数据集，以确保任务要求是可行且可实现的。有关数据集的更多信息，请参见附录[D](https://arxiv.org/html/2410.19811v1#A4
    "Appendix D More Details on ControlEval ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise")。'
- en: 6 Experimental Results
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 实验结果
- en: 'In this section, we present a comprehensive set of experiments to evaluate
    the performance of ControlAgent on the ControlEval. GPT-4o is used as the main
    underlying base LLM for both the central agent and task-specific agents, and study
    on comparing different base LLMs is also presented. The detailed prompts for ControlAgent
    can be found in Appendix [E.1](https://arxiv.org/html/2410.19811v1#A5.SS1 "E.1
    Full Prompts for ControlAgent ‣ Appendix E Prompt Design ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise").
    Additionally, we compare ControlAgent against two different baseline categories:
    LLM-based and control toolbox-based baselines.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '在本节中，我们展示了一组全面的实验，用于评估ControlAgent在ControlEval上的表现。GPT-4o被用作中央代理和任务特定代理的主要基础LLM，并且还展示了对比不同基础LLM的研究。ControlAgent的详细提示可以在附录[E.1](https://arxiv.org/html/2410.19811v1#A5.SS1
    "E.1 Full Prompts for ControlAgent ‣ Appendix E Prompt Design ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")中找到。此外，我们将ControlAgent与两种不同的基准类别进行了比较：基于LLM的基准和基于控制工具箱的基准。'
- en: 'LLM-based Baselines: We consider four LLM-based baseline approaches utilizing
    GPT-4o: zero-shot prompting, zero-shot Chain-of-Thought (CoT), few-shot, and few-shot
    CoT. In the zero-shot approach, we directly provide the user requirements and
    ask the LLM to perform the controller design without additional guidance. The
    CoT variant enhances this by prompting the LLM to explicitly conduct the design
    step-by-step. For the few-shot approach, we present the LLM with several examples
    of successful controller designs to guide its process. In the few-shot CoT setting,
    the prompt not only includes the successful designs but also details the step-by-step
    reasoning process required to create a successful controller. The detailed prompt
    for each setting can be found in Appendix [E.2](https://arxiv.org/html/2410.19811v1#A5.SS2
    "E.2 Full Prompts for Baselines ‣ Appendix E Prompt Design ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise").'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '基于LLM的基准：我们考虑了四种基于LLM的基准方法，均使用GPT-4o：零-shot提示、零-shot链式思维（CoT）、少-shot和少-shot链式思维。在零-shot方法中，我们直接提供用户需求，并要求LLM在没有额外指导的情况下进行控制器设计。CoT变体通过提示LLM明确地逐步进行设计来增强这一过程。对于少-shot方法，我们向LLM展示几个成功的控制器设计示例，以指导其设计过程。在少-shot
    CoT设置中，提示不仅包括成功的设计，还详细列出了创建成功控制器所需的逐步推理过程。每种设置的详细提示可以在附录[E.2](https://arxiv.org/html/2410.19811v1#A5.SS2
    "E.2 Full Prompts for Baselines ‣ Appendix E Prompt Design ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")中找到。'
- en: 'Control Toolbox-based Baseline: We also considered the widely used control
    toolbox for PID design: PIDtune (MathWorks, [2023](https://arxiv.org/html/2410.19811v1#bib.bib47))
    from MathWorks as a baseline. This toolbox is human-involved as the user needs
    to specify a proper value of crossover frequency as an input to optimize the controller
    gains, whereas ControlAgent tunes crossover frequency automatically without any
    human effort. Further details on how we set up PIDtune are reported in Appendix
    [C](https://arxiv.org/html/2410.19811v1#A3 "Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise").'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '基于控制工具箱的基准：我们还考虑了广泛使用的 PID 设计控制工具箱：MathWorks 的 PIDtune（MathWorks，[2023](https://arxiv.org/html/2410.19811v1#bib.bib47)）作为基准。该工具箱需要人为干预，因为用户需要指定一个适当的交叉频率值作为输入，以优化控制器增益，而
    ControlAgent 则自动调节交叉频率，无需任何人工干预。关于我们如何设置 PIDtune 的更多细节，请参见附录 [C](https://arxiv.org/html/2410.19811v1#A3
    "Appendix C More on Experimental Study ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise")。'
- en: 'Evaluation Metrics: We use two main metrics to evaluate the performance of
    ControlAgent and baseline methods. Specifically, we use Average Successful Rate
    (ASR) to measure the effectiveness of control designs across multiple independent
    trials for each method, and we use Aggregate Successful Rate (AgSR) to evaluate
    the success designs on a system-by-system basis, where one system is considered
    successfully designed if at least one of the multiple independent trials results
    in a successful controller design. The formal definition of ASR and AgSR can be
    found in Appendix [C](https://arxiv.org/html/2410.19811v1#A3 "Appendix C More
    on Experimental Study ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise").'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '评估指标：我们使用两个主要指标来评估 ControlAgent 和基准方法的性能。具体来说，我们使用平均成功率（ASR）来衡量每种方法在多个独立试验中的控制设计效果，使用汇总成功率（AgSR）来评估系统级别的成功设计，其中一个系统被认为是成功设计的，如果至少一个独立试验结果是成功的控制器设计。ASR
    和 AgSR 的正式定义可以在附录 [C](https://arxiv.org/html/2410.19811v1#A3 "Appendix C More
    on Experimental Study ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise") 中找到。'
- en: '| System Type | 1st-ord stb | 2nd-ord stb | 1st-ord ustb | 2nd-ord ustb | w/
    dly | Hgr-ord |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 系统类型 | 一阶稳定 | 二阶稳定 | 一阶不稳定 | 二阶不稳定 | 带延迟 | 高阶 |'
- en: '| Response Mode | fast | moderate | slow | fast | moderate | slow | (-) | (-)
    | (-) | (-) |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 响应模式 | 快速 | 中等 | 慢速 | 快速 | 中等 | 慢速 | (-) | (-) | (-) | (-) |'
- en: '| Zero-shot | 8.0 | 19.2 | 10.0 | 14.0 | 18.4 | 13.2 | 5.2 | 0.4 | 15.6 | 2.0
    |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| Zero-shot | 8.0 | 19.2 | 10.0 | 14.0 | 18.4 | 13.2 | 5.2 | 0.4 | 15.6 | 2.0
    |'
- en: '| Zero-shot CoT | 26.8 | 3.2 | 0.4 | 12.4 | 18.8 | 12.0 | 4.4 | 0.8 | 8.8 |
    8.0 |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| Zero-shot CoT | 26.8 | 3.2 | 0.4 | 12.4 | 18.8 | 12.0 | 4.4 | 0.8 | 8.8 |
    8.0 |'
- en: '| Few-shot | 12.4 | 19.6 | 15.6 | 12.0 | 12.4 | 15.2 | 14.0 | 29.2 | 11.6 |
    12.0 |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| 少量样本 | 12.4 | 19.6 | 15.6 | 12.0 | 12.4 | 15.2 | 14.0 | 29.2 | 11.6 | 12.0
    |'
- en: '| Few-shot CoT | 11.2 | 21.6 | 21.2 | 7.6 | 14.0 | 25.6 | 6.0 | 22.4 | 16.0
    | 16.4 |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| 少量样本 CoT | 11.2 | 21.6 | 21.2 | 7.6 | 14.0 | 25.6 | 6.0 | 22.4 | 16.0 | 16.4
    |'
- en: '| PIDtune | 56.0 | 90.4 | 86.4 | 81.6 | 98.8 | 77.6 | 30.4 | 10.8 | 100.0 |
    50.0 |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
  zh: '| PIDtune | 56.0 | 90.4 | 86.4 | 81.6 | 98.8 | 77.6 | 30.4 | 10.8 | 100.0 |
    50.0 |'
- en: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 98.8 | 90.8 | 97.2 | 96.8
    | 97.2 | 82.0 |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
  zh: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 98.8 | 90.8 | 97.2 | 96.8
    | 97.2 | 82.0 |'
- en: 'Table 2: Average Success Rate (ASR, %) of baseline methods and ControlAgent
    on ControlEval for various system types and response modes. The best result for
    each task is highlighted in bold. The results show that ControlAgent consistently
    outperforms all other LLM-based and toolbox-based baselines (except the first-order
    system with delay) across all categories, demonstrating its effectiveness and
    robustness in handling diverse control tasks.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 表格 2：在 ControlEval 上，基准方法和 ControlAgent 在不同系统类型和响应模式下的平均成功率（ASR，%）。每个任务的最佳结果以**粗体**突出显示。结果表明，ControlAgent
    在所有类别中始终优于其他所有基于 LLM 和工具箱的基准方法（除了具有延迟的一阶系统），证明了其在处理多样化控制任务中的有效性和鲁棒性。
- en: 6.1 Main Results
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.1 主要结果
- en: 'Table [2](https://arxiv.org/html/2410.19811v1#S6.T2 "Table 2 ‣ 6 Experimental
    Results ‣ ControlAgent: Automating Control System Design via Novel Integration
    of LLM Agents and Domain Expertise") shows the ASR of ControlAgent and various
    baseline methods on the ControlEval benchmark. The best results for each task
    are highlighted in bold. Our key observations are given below.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '表格 [2](https://arxiv.org/html/2410.19811v1#S6.T2 "Table 2 ‣ 6 Experimental
    Results ‣ ControlAgent: Automating Control System Design via Novel Integration
    of LLM Agents and Domain Expertise") 显示了 ControlAgent 和各种基准方法在 ControlEval 基准测试中的
    ASR。每个任务的最佳结果以**粗体**突出显示。我们的主要观察结果如下。'
- en: ControlAgent consistently outperforms all baseline methods.
  id: totrans-114
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ControlAgent始终优于所有基准方法。
- en: ControlAgent achieves significantly higher ASR across all control tasks compared
    to both LLM-based and traditional toolbox-based baselines (with the sole exception
    of the first-order system with time delay, where ControlAgent achieves the second-best
    result at 97.2%). This superior performance is evident not only for simpler first-order
    and second-order stable systems but also for more complex cases, such as unstable
    systems and higher-order systems. The ability of ControlAgent to maintain high
    success rates across diverse system types showcases the potential of integrating
    LLMs with domain expertise, making it a highly reliable tool for automated control
    system design.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 与基于LLM的基准方法和传统工具箱基准方法相比，ControlAgent在所有控制任务中都取得了显著更高的ASR（唯一的例外是带有时延的一阶系统，在此情况下ControlAgent取得了第二高的结果，97.2%）。这种卓越的表现不仅在简单的一阶和二阶稳定系统中得以体现，还在更复杂的情况中，如不稳定系统和高阶系统。ControlAgent能够在多种系统类型中保持高成功率，展示了将LLM与领域专业知识结合的潜力，使其成为自动化控制系统设计中一个高度可靠的工具。
- en: ControlAgent can solve easy tasks perfectly.
  id: totrans-116
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ControlAgent可以完美解决简单任务。
- en: For relatively simpler systems, such as first/second-order stable systems, ControlAgent
    achieves perfect scores (100% ASR) across all response modes (fast, moderate,
    and slow). This indicates that ControlAgent is capable of flawlessly handling
    straightforward control problems, meeting all user-defined performance requirements.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 对于相对简单的系统，例如一阶/二阶稳定系统，ControlAgent在所有响应模式（快速、中等和慢速）下都能取得完美的成绩（100% ASR）。这表明ControlAgent能够无误地处理简单的控制问题，满足所有用户定义的性能要求。
- en: PIDtune outperforms LLM-based baselines on most control tasks.
  id: totrans-118
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: PIDtune在大多数控制任务中优于基于LLM的基准方法。
- en: It is noteworthy that PIDtune, a control toolbox-based method, performs better
    than LLM-based baselines (e.g., Zero-shot and Few-shot) on most control tasks,
    except for second-order unstable systems. This suggests that LLMs alone or simple
    prompt engineering methods are not sufficient to solve many control tasks effectively.
    The results highlight the gap between standard LLM capabilities and traditional
    control toolboxes. ControlAgent bridges this gap by employing an iterative controller
    design procedure that integrates LLMs, control domain expertise, and tool utilization
    to mimic how practicing control engineers mitigate the performance/robustness
    trade-offs in classic control design.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，基于控制工具箱的方法PIDtune在大多数控制任务中表现优于基于LLM的基准方法（如Zero-shot和Few-shot），除了二阶不稳定系统。这表明单靠LLM或简单的提示工程方法不足以有效解决许多控制任务。结果突显了标准LLM能力与传统控制工具箱之间的差距。ControlAgent通过采用一个迭代的控制器设计过程，结合LLM、控制领域专业知识和工具使用，弥合了这一差距，模拟了实践中的控制工程师如何在经典控制设计中平衡性能和稳健性之间的权衡。
- en: Aggregating results from multiple trials significantly boosts overall performance.
  id: totrans-120
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 聚合多次试验的结果显著提高了整体性能。
- en: 'Figure [5](https://arxiv.org/html/2410.19811v1#S6.F5 "Figure 5 ‣ Aggregating
    results from multiple trials significantly boosts overall performance. ‣ 6.1 Main
    Results ‣ 6 Experimental Results ‣ ControlAgent: Automating Control System Design
    via Novel Integration of LLM Agents and Domain Expertise") illustrates the ASR
    and AgSR for ControlAgent and the baseline methods for first-order stable systems
    (averaged across fast, moderate, and slow modes) and higher-order system, respectively.
    We run each method for five independent trials. The results show that each method
    significantly improves its success rate, highlighting the advantage of aggregating
    results from multiple trials to boost overall performance. ControlAgent remains
    one of the top-performing methods, achieving high success rates across all methods.
    More AgSR results can be found in Appendix [C](https://arxiv.org/html/2410.19811v1#A3
    "Appendix C More on Experimental Study ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise").'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '图[5](https://arxiv.org/html/2410.19811v1#S6.F5 "图5 ‣ 聚合多个试验结果显著提升整体性能。 ‣ 6.1
    主要结果 ‣ 6 实验结果 ‣ ControlAgent: 通过大规模语言模型代理和领域专长的创新集成实现控制系统设计自动化")展示了ControlAgent和基准方法在一阶稳定系统（在快速、中等和慢速模式下的平均值）及高阶系统中的ASR和AgSR结果。我们对每个方法进行了五次独立试验。结果表明，每种方法都显著提高了其成功率，突出显示了聚合多个试验结果以提升整体性能的优势。ControlAgent仍然是表现最出色的方法之一，在所有方法中都取得了较高的成功率。更多的AgSR结果可以在附录[C](https://arxiv.org/html/2410.19811v1#A3
    "附录C 更多实验研究 ‣ ControlAgent: 通过大规模语言模型代理和领域专长的创新集成实现控制系统设计自动化")中找到。'
- en: '![Refer to caption](img/fe30ec6d151806a8a8b34e1255bdc2ca.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/fe30ec6d151806a8a8b34e1255bdc2ca.png)'
- en: 'Figure 5: ASR and AgSR for first-order stable systems (averaged across fast,
    moderate, and slow modes) and higher-order system.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：一阶稳定系统（在快速、中等和慢速模式下的平均值）及高阶系统的ASR和AgSR。
- en: 6.2 Ablation Study
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 6.2 消融研究
- en: In this section, we perform ablation study on the ControlAgent.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们对ControlAgent进行了消融研究。
- en: '|  | ControlAgent | w/o-iterative | w/o-instruction | w/o-python agent | w/o-feedback
    |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '|  | ControlAgent | 无迭代 | 无指令 | 无Python代理 | 无反馈 |'
- en: '|  | ASR | iteration # | ASR | iteration # | ASR | iteration # | ASR | iteration
    # | ASR | iteration # |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '|  | ASR | 迭代次数 | ASR | 迭代次数 | ASR | 迭代次数 | ASR | 迭代次数 | ASR | 迭代次数 |'
- en: '| fast | 100.0 | 2.74 | 28.4 | (-) | 70.4 | 4.84 | 76.0 | 4.34 | 85.6 | 4.45
    |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| 快速 | 100.0 | 2.74 | 28.4 | (-) | 70.4 | 4.84 | 76.0 | 4.34 | 85.6 | 4.45
    |'
- en: '| moderate | 100.0 | 1.78 | 33.2 | (-) | 60.4 | 6.38 | 85.2 | 3.71 | 92.4 |
    3.05 |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 中等 | 100.0 | 1.78 | 33.2 | (-) | 60.4 | 6.38 | 85.2 | 3.71 | 92.4 | 3.05
    |'
- en: '| slow | 100.0 | 2.19 | 4.0 | (-) | 56.4 | 6.39 | 71.2 | 5.19 | 94.0 | 2.46
    |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| 慢速 | 100.0 | 2.19 | 4.0 | (-) | 56.4 | 6.39 | 71.2 | 5.19 | 94.0 | 2.46 |'
- en: 'Table 3: Ablation study results (ASR and average iteration number) for ControlAgent
    and its various component configurations. The ablated versions exclude specific
    components, such as iterative refinement, user instructions, the Python agent,
    and feedback incorporation.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 表3：ControlAgent及其不同组件配置的消融研究结果（ASR和平均迭代次数）。被消融的版本排除了特定组件，如迭代优化、用户指令、Python代理和反馈整合。
- en: 'Effect of Key Components in ControlAgent:'
  id: totrans-132
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ControlAgent关键组件的效果：
- en: 'To investigate the impact of different components within ControlAgent on its
    overall performance, we compare the ASR and the average number of iterations required
    for successful design across three response modes for first-order stable systems.
    The results, shown in Table [3](https://arxiv.org/html/2410.19811v1#S6.T3 "Table
    3 ‣ 6.2 Ablation Study ‣ 6 Experimental Results ‣ ControlAgent: Automating Control
    System Design via Novel Integration of LLM Agents and Domain Expertise"), indicate
    that the complete version of ControlAgent achieves a perfect ASR (100%) across
    all response modes with the fewest iterations, underscoring the effectiveness
    of its integrated design. In contrast, removing the iterative design process leads
    to a drastic decline in ASR, particularly for the slow response mode, where the
    ASR drops to just 4%. Similarly, excluding design instructions or the Python agent
    significantly reduces the ASR and increases the number of iterations needed for
    success, highlighting the critical role these components play in improving design
    efficiency. Although ControlAgent performs reasonably well without feedback, the
    increased average iteration count shows that feedback is essential for faster
    convergence. Overall, these findings demonstrate that each component is vital
    to the robustness and efficiency of ControlAgent. Figure [6](https://arxiv.org/html/2410.19811v1#S6.F6
    "Figure 6 ‣ Effect of Key Components in ControlAgent: ‣ 6.2 Ablation Study ‣ 6
    Experimental Results ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise") demonstrates that increasing
    the maximum number of iterations consistently improvement in ASR across all response
    modes (fast, moderate, and slow) for first-order and second-order stable systems.
    As the number of iterations increases, ControlAgent has more opportunities to
    refine its design, which translates into higher success rates. This trend indicates
    that allowing more iterations enhances ControlAgent’s ability to meet control
    design criteria, particularly for complex scenarios that may require additional
    iterations to achieve optimal results.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 为了研究ControlAgent中不同组件对其整体性能的影响，我们比较了在三种响应模式下，一阶稳定系统中ASR和成功设计所需的平均迭代次数。结果如表[3](https://arxiv.org/html/2410.19811v1#S6.T3
    "表3 ‣ 6.2 去除实验 ‣ 6 实验结果 ‣ ControlAgent：通过LLM代理和领域专长的创新集成自动化控制系统设计")所示，表明ControlAgent的完整版本在所有响应模式下都能达到完美的ASR（100%），并且迭代次数最少，突显了其集成设计的有效性。相比之下，移除迭代设计过程会导致ASR的急剧下降，尤其是在慢响应模式下，ASR仅下降到4%。类似地，排除设计指令或Python代理会显著降低ASR并增加成功所需的迭代次数，这凸显了这些组件在提高设计效率中的关键作用。尽管没有反馈时ControlAgent表现得相对不错，但增加的平均迭代次数表明反馈对于更快的收敛至关重要。总的来说，这些发现表明每个组件对ControlAgent的稳健性和效率都至关重要。图[6](https://arxiv.org/html/2410.19811v1#S6.F6
    "图6 ‣ ControlAgent中关键组件的影响： ‣ 6.2 去除实验 ‣ 6 实验结果 ‣ ControlAgent：通过LLM代理和领域专长的创新集成自动化控制系统设计")表明，增加最大迭代次数在所有响应模式下（一阶和二阶稳定系统）对ASR的提高具有一致的效果。随着迭代次数的增加，ControlAgent有更多的机会精细化其设计，从而提高成功率。这一趋势表明，允许更多的迭代有助于提升ControlAgent满足控制设计标准的能力，尤其是在复杂场景中，这些场景可能需要额外的迭代才能达到最佳结果。
- en: '![Refer to caption](img/e7aa67a21dedc07ee79c9245d43440ec.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![参见标题](img/e7aa67a21dedc07ee79c9245d43440ec.png)'
- en: 'Figure 6: The effect of the number of iterations on ASR across different response
    modes (Fast, Moderate, and Slow). Left: first order stable systems; right: second
    order stable systems.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图6：不同响应模式（快速、中等、慢速）下迭代次数对ASR的影响。左侧：一阶稳定系统；右侧：二阶稳定系统。
- en: '| Base LLM | GPT-4o | Claude-3.5 Sonnet | GPT-4-turbo | Gemini-1.5-pro | GPT-3.5-turbo
    |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| 基础LLM | GPT-4o | Claude-3.5 Sonnet | GPT-4-turbo | Gemini-1.5-pro | GPT-3.5-turbo
    |'
- en: '|  | ASR | iteration # | ASR | iteration # | ASR | iteration # | ASR | iteration
    # | ASR | iteration # |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '|  | ASR | 迭代次数 # | ASR | 迭代次数 # | ASR | 迭代次数 # | ASR | 迭代次数 # | ASR | 迭代次数
    # |'
- en: '| fast | 100.0 | 2.74 | 98.4 | 2.66 | 94.0 | 3.82 | 86.8 | 2.96 | 49.2 | 6.84
    |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '| 快 | 100.0 | 2.74 | 98.4 | 2.66 | 94.0 | 3.82 | 86.8 | 2.96 | 49.2 | 6.84
    |'
- en: '| moderate | 100.0 | 1.78 | 99.2 | 2.05 | 98.4 | 2.55 | 86.4 | 2.41 | 97.2
    | 3.01 |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '| 中等 | 100.0 | 1.78 | 99.2 | 2.05 | 98.4 | 2.55 | 86.4 | 2.41 | 97.2 | 3.01
    |'
- en: '| slow | 100.0 | 2.19 | 97.2 | 2.18 | 99.2 | 2.14 | 85.6 | 2.67 | 77.6 | 4.18
    |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '| 慢 | 100.0 | 2.19 | 97.2 | 2.18 | 99.2 | 2.14 | 85.6 | 2.67 | 77.6 | 4.18
    |'
- en: 'Table 4: ASR (%) and average number of iterations for ControlAgent using different
    base LLMs across three response modes (fast, moderate, and slow) for first-order
    stable systems. The highest ASR and lowest iterations highlighted in bold.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 表4：在三种响应模式（快、中、慢）下，ControlAgent使用不同基础LLM对一阶稳定系统的ASR（%）和平均迭代次数。最高的ASR和最低的迭代次数以**粗体**突出显示。
- en: 'Results on Different Base LLMs:'
  id: totrans-142
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 不同基础LLM的结果：
- en: 'Table [4](https://arxiv.org/html/2410.19811v1#S6.T4 "Table 4 ‣ Effect of Key
    Components in ControlAgent: ‣ 6.2 Ablation Study ‣ 6 Experimental Results ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise") presents the performance of ControlAgent with different base LLMs,
    including GPT-4o, Claude-3.5 Sonnet, GPT-4-turbo, Gemini-1.5-pro, and GPT-3.5-turbo.
    The results indicate that all state-of-the-art LLMs achieve reasonably good performance,
    with most models attaining high ASR values across different response modes. GPT-4o
    stands out by achieving a perfect ASR (100%) in all response modes and requiring
    the fewest iterations in the moderate mode. Similarly, Claude-3.5 Sonnet and GPT-4-turbo
    perform competitively; notably, Claude-3.5 achieves near-perfect ASR and has the
    lowest iteration count for the fast and slow modes. Although there is still a
    performance gap for Gemini-1.5-pro and GPT-3.5-turbo, these findings suggest that
    the state-of-the-art LLMs perform similarly, demonstrating that ControlAgent is
    flexible and adaptable to a variety of LLM configurations.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '表[4](https://arxiv.org/html/2410.19811v1#S6.T4 "Table 4 ‣ Effect of Key Components
    in ControlAgent: ‣ 6.2 Ablation Study ‣ 6 Experimental Results ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")展示了ControlAgent在使用不同基础LLM时的表现，包括GPT-4o、Claude-3.5 Sonnet、GPT-4-turbo、Gemini-1.5-pro和GPT-3.5-turbo。结果表明，所有最先进的LLM都能取得相当好的表现，大多数模型在不同的响应模式下都达到了较高的ASR值。GPT-4o表现突出，在所有响应模式下都达到了完美的ASR（100%），并在中等模式下需要的迭代次数最少。同样，Claude-3.5
    Sonnet和GPT-4-turbo表现具有竞争力；值得注意的是，Claude-3.5在快速和慢速模式下分别实现了接近完美的ASR，并且迭代次数最低。尽管Gemini-1.5-pro和GPT-3.5-turbo的表现仍存在差距，这些发现表明，最先进的LLM的表现相似，证明了ControlAgent在各种LLM配置中都具备灵活性和适应性。'
- en: 7 Limitations and Future Work
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 7 局限性与未来工作
- en: 'In this paper, we introduced ControlAgent, an advanced LLM-powered framework
    for automated control system design. Despite the strong performance of ControlAgent
    across a range of control tasks, several limitations indicate avenues for future
    research and enhancement. One primary constraint is that the current implementation
    of ControlAgent is tailored to LTI systems and conventional control strategies,
    such as loop-shaping and PID controllers. Future work can expand ControlAgent’s
    capabilities by considering complex nonlinear systems and integrating advanced
    control strategies, such as adaptive and robust controllers. Another compelling
    direction involves utilizing different base LLMs for distinct roles, leveraging
    their unique strengths and expertise. For instance, incorporating fine-tuned,
    smaller LLMs for specialized tasks within control system design could improve
    efficiency and reduce dependence on proprietary models. Finally, the evaluation
    dataset, ControlEval, could be further extended to include more complex control
    tasks, such as real-world systems and hardware implementations, providing a more
    comprehensive assessment of ControlAgent’s practical utility. We provide more
    detailed discussions on the future research directions in Appendix [A](https://arxiv.org/html/2410.19811v1#A1
    "Appendix A ControlAgent: Future Outlook ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise").'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '在本文中，我们介绍了ControlAgent，这是一种基于先进大型语言模型（LLM）的自动化控制系统设计框架。尽管ControlAgent在一系列控制任务中表现强劲，但仍有若干局限性，指示了未来研究和改进的方向。一个主要的限制是，目前的ControlAgent实现针对线性时不变（LTI）系统和传统控制策略（如回路整形和PID控制器）进行了定制。未来的工作可以通过考虑复杂的非线性系统并整合先进的控制策略（如自适应控制和鲁棒控制）来扩展ControlAgent的能力。另一个引人注目的方向是利用不同的基础LLM来承担不同的角色，充分发挥它们独特的优势和专业知识。例如，结合经过微调的较小LLM来处理控制系统设计中的专门任务，可能提高效率并减少对专有模型的依赖。最后，评估数据集ControlEval可以进一步扩展，涵盖更复杂的控制任务，如现实世界的系统和硬件实现，从而提供对ControlAgent实际效用的更全面评估。我们在附录[A](https://arxiv.org/html/2410.19811v1#A1
    "Appendix A ControlAgent: Future Outlook ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise")中提供了关于未来研究方向的更详细讨论。'
- en: Ethics Statement
  id: totrans-146
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 伦理声明
- en: In developing ControlAgent, we carefully considered the ethical implications
    of our work and took steps to ensure responsible research practices. All experiments
    were conducted using simulation environments and synthetic datasets, with no involvement
    of human subjects, thereby avoiding any privacy, security, or legal compliance
    concerns. ControlAgent’s focus on automated control system design raises the possibility
    of its deployment in critical applications, such as industrial automation, autonomous
    vehicles, and robotics. Improper use or deployment of AI-driven control systems
    in such domains could result in unintended outcomes. To mitigate these risks,
    we emphasize the need for rigorous testing, validation, and adherence to established
    safety standards before applying ControlAgent to real-world systems.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发ControlAgent时，我们认真考虑了工作中的伦理影响，并采取了措施确保负责任的研究实践。所有实验均在模拟环境和合成数据集上进行，没有涉及人类受试者，从而避免了任何隐私、安全或法律合规问题。ControlAgent专注于自动化控制系统设计，可能会被部署在关键应用中，如工业自动化、自动驾驶车辆和机器人技术。不当使用或部署基于AI的控制系统在这些领域可能会导致意外后果。为了减少这些风险，我们强调在将ControlAgent应用于实际系统之前，必须进行严格的测试、验证，并遵守既定的安全标准。
- en: In terms of transparency and accessibility, the use of proprietary LLMs may
    limit broader access and reproducibility. To address this, future work will explore
    the use of open-source LLMs to enhance accessibility and facilitate community
    collaboration. Additionally, since ControlAgent’s performance depends on LLMs
    that could inherit biases from their training data, ongoing research will focus
    on mitigating bias and ensuring fairness in control system recommendations. The
    authors declare no conflicts of interest or external sponsorship that influenced
    the findings or interpretations in this study. Overall, we are committed to developing
    and applying ControlAgent ethically, with careful consideration of its societal
    impact and potential risks.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在透明度和可访问性方面，使用专有的LLM可能会限制更广泛的访问和可重复性。为了解决这一问题，未来的工作将探索使用开源LLM，以增强可访问性并促进社区合作。此外，由于ControlAgent的性能依赖于可能继承其训练数据偏差的LLM，正在进行的研究将专注于缓解偏见并确保控制系统建议的公平性。作者声明没有任何利益冲突或外部资助影响本研究的结果或解释。总体而言，我们致力于以伦理的方式开发和应用ControlAgent，仔细考虑其社会影响和潜在风险。
- en: Reproducibility Statement
  id: totrans-149
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 可重复性声明
- en: 'We have taken several measures to ensure the reproducibility of our results.
    Detailed descriptions of the experimental setup, hyperparameters, and configurations
    are provided in Section [6](https://arxiv.org/html/2410.19811v1#S6 "6 Experimental
    Results ‣ ControlAgent: Automating Control System Design via Novel Integration
    of LLM Agents and Domain Expertise") of the main paper and Appendix [C](https://arxiv.org/html/2410.19811v1#A3
    "Appendix C More on Experimental Study ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise"). Specifically,
    the architecture of ControlAgent and the LLM prompt structures are outlined in
    Section [4](https://arxiv.org/html/2410.19811v1#S4 "4 ControlAgent ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise") and Appendix [E](https://arxiv.org/html/2410.19811v1#A5 "Appendix
    E Prompt Design ‣ ControlAgent: Automating Control System Design via Novel Integration
    of LLM Agents and Domain Expertise"). We also provide comprehensive descriptions
    of the ablation studies and baseline comparisons in Section [6](https://arxiv.org/html/2410.19811v1#S6
    "6 Experimental Results ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise") to aid in reproducing the results.
    The dataset used in our experiments, including details on dataset generation and
    control design criteria, is thoroughly described in Appendix [D](https://arxiv.org/html/2410.19811v1#A4
    "Appendix D More Details on ControlEval ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise").'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '我们采取了多项措施以确保结果的可重复性。实验设置、超参数和配置的详细描述请参见主文中的第[6](https://arxiv.org/html/2410.19811v1#S6
    "6 Experimental Results ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise")节以及附录[C](https://arxiv.org/html/2410.19811v1#A3
    "Appendix C More on Experimental Study ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise")。具体来说，ControlAgent的架构和LLM提示结构在第[4](https://arxiv.org/html/2410.19811v1#S4
    "4 ControlAgent ‣ ControlAgent: Automating Control System Design via Novel Integration
    of LLM Agents and Domain Expertise")节和附录[E](https://arxiv.org/html/2410.19811v1#A5
    "Appendix E Prompt Design ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise")中有详细说明。我们还在第[6](https://arxiv.org/html/2410.19811v1#S6
    "6 Experimental Results ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise")节中提供了关于消融研究和基准比较的全面描述，以帮助结果的再现。我们在附录[D](https://arxiv.org/html/2410.19811v1#A4
    "Appendix D More Details on ControlEval ‣ ControlAgent: Automating Control System
    Design via Novel Integration of LLM Agents and Domain Expertise")中详细描述了实验中使用的数据集，包括数据集生成和控制设计标准的细节。'
- en: Acknowledgements
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 致谢
- en: X. Guo, D. Kevian, U. Syed, and B. Hu acknowledge the support from the OpenAI
    Researcher Access Program. Huan Zhang acknowledges the support from the AI2050
    program at Schmidt Sciences (AI 2050 Early Career Fellowship).
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: X. Guo, D. Kevian, U. Syed 和 B. Hu 感谢 OpenAI 研究员访问计划的支持。Huan Zhang 感谢 Schmidt
    科学研究院的 AI2050 项目（AI 2050 早期职业奖学金）的支持。
- en: References
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: Alsaqer et al. [2024] Shadan Alsaqer, Sarah Alajmi, Imtiaz Ahmad, and Mohammad
    Alfailakawi. The potential of llms in hardware design. *Journal of Engineering
    Research*, 2024.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Alsaqer 等人 [2024] Shadan Alsaqer, Sarah Alajmi, Imtiaz Ahmad, 和 Mohammad Alfailakawi.
    《大规模语言模型在硬件设计中的潜力》. *工程研究杂志*, 2024年。
- en: 'Anderson [1993] Brian DO Anderson. Controller design: moving from theory to
    practice. *IEEE Control Systems Magazine*, 13(4):16–25, 1993.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anderson [1993] Brian D.O. Anderson. 控制器设计：从理论到实践的转变. *IEEE 控制系统杂志*, 13(4):16–25,
    1993年。
- en: Ang et al. [2005] Kiam Heong Ang, Gregory Chong, and Yun Li. Pid control system
    analysis, design, and technology. *IEEE transactions on control systems technology*,
    13(4):559–576, 2005.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ang 等人 [2005] Kiam Heong Ang, Gregory Chong, 和 Yun Li. PID 控制系统的分析、设计与技术. *IEEE
    控制系统技术学报*, 13(4):559–576, 2005年。
- en: 'Åström and Hägglund [1995] K. Åström and T. Hägglund. *PID Controllers: Theory,
    Design, and Tuning*. The Instrumentation, Systems, and Automation Society, 2nd
    edition, 1995.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Åström 和 Hägglund [1995] K. Åström 和 T. Hägglund. *PID 控制器：理论、设计与调优*. 仪器、系统与自动化学会，第2版,
    1995年。
- en: 'Åström and Murray [2021] Karl Johan Åström and Richard Murray. *Feedback systems:
    an introduction for scientists and engineers*. Princeton university press, 2021.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Åström 和 Murray [2021] Karl Johan Åström 和 Richard Murray. *反馈系统：科学家和工程师的介绍*.
    普林斯顿大学出版社, 2021年。
- en: Awouda and Mamat [2010] Ala Eldin Abdallah Awouda and Rosbi Bin Mamat. Refine
    pid tuning rule using itae criteria. In *2010 The 2nd International conference
    on computer and automation engineering (ICCAE)*, volume 5, pages 171–176\. IEEE,
    2010.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Awouda 和 Mamat [2010] Ala Eldin Abdallah Awouda 和 Rosbi Bin Mamat. 使用 ITAE 标准优化
    PID 调节规则。在 *2010年第2届计算机与自动化工程国际会议（ICCAE）*，第5卷，第171–176页。IEEE，2010年。
- en: Blight et al. [1994] J. D. Blight, R. L. Dailey, and D. Gangsaas. Practical
    control law design for aircraft using multivariable techniques. *International
    Journal of Control*, 59(1):93–137, 1994.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Blight 等人 [1994] J. D. Blight，R. L. Dailey 和 D. Gangsaas. 使用多变量技术为飞机设计实用的控制律。*国际控制学报*，59(1)：93–137，1994年。
- en: 'Boyd and Barratt [1991] Stephen P Boyd and Craig H Barratt. *Linear controller
    design: limits of performance*, volume 78. Citeseer, 1991.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Boyd 和 Barratt [1991] Stephen P Boyd 和 Craig H Barratt. *线性控制器设计：性能极限*，第78卷。Citeseer，1991年。
- en: Bramlette and Barrett-Gonzalez [2017] Richard B Bramlette and Ronald M Barrett-Gonzalez.
    Design and flight testing of a convertible quadcopter for maximum flight speed.
    In *55th AIAA Aerospace Sciences Meeting*, page 0243, 2017.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bramlette 和 Barrett-Gonzalez [2017] Richard B Bramlette 和 Ronald M Barrett-Gonzalez.
    设计和飞行测试一种可转换四轴飞行器以实现最大飞行速度。在 *第55届AIAA航空航天科学会议*，第0243页，2017年。
- en: 'Chan et al. [2023] Chi-Min Chan, Weize Chen, Yusheng Su, Jianxuan Yu, Wei Xue,
    Shanghang Zhang, Jie Fu, and Zhiyuan Liu. Chateval: Towards better llm-based evaluators
    through multi-agent debate. *arXiv preprint arXiv:2308.07201*, 2023.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chan 等人 [2023] Chi-Min Chan，Weize Chen，Yusheng Su，Jianxuan Yu，Wei Xue，Shanghang
    Zhang，Jie Fu 和 Zhiyuan Liu. Chateval：通过多智能体辩论迈向更好的基于 LLM 的评估器。*arXiv 预印本 arXiv:2308.07201*，2023年。
- en: Chang and Han [1990] Che-Hsu Chang and Kuang-Wei Han. Gain margins and phase
    margins for control systems with adjustable parameters. *Journal of guidance,
    control, and dynamics*, 13(3):404–408, 1990.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chang 和 Han [1990] Che-Hsu Chang 和 Kuang-Wei Han. 具有可调参数的控制系统的增益裕度和相位裕度。*航天、控制与动力学学报*，13(3)：404–408，1990年。
- en: 'Chaudhuri et al. [2024] Jayeeta Chaudhuri, Dhruv Thapar, Arjun Chaudhuri, Farshad
    Firouzi, and Krishnendu Chakrabarty. Spiced: Syntactical bug and trojan pattern
    identification in a/ms circuits using llm-enhanced detection. *arXiv preprint
    arXiv:2408.16018*, 2024.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chaudhuri 等人 [2024] Jayeeta Chaudhuri，Dhruv Thapar，Arjun Chaudhuri，Farshad Firouzi
    和 Krishnendu Chakrabarty. SPICED：使用 LLM 增强检测的 A/MS 电路中的语法错误和木马模式识别。*arXiv 预印本
    arXiv:2408.16018*，2024年。
- en: 'Deng et al. [2024] Xiang Deng, Yu Gu, Boyuan Zheng, Shijie Chen, Sam Stevens,
    Boshi Wang, Huan Sun, and Yu Su. Mind2web: Towards a generalist agent for the
    web. *Advances in Neural Information Processing Systems*, 36, 2024.'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Deng 等人 [2024] Xiang Deng，Yu Gu，Boyuan Zheng，Shijie Chen，Sam Stevens，Boshi Wang，Huan
    Sun 和 Yu Su. Mind2web：迈向通用型网络智能体。*神经信息处理系统进展*，第36卷，2024年。
- en: Doyle et al. [2013] John C Doyle, Bruce A Francis, and Allen R Tannenbaum. *Feedback
    control theory*. Courier Corporation, 2013.
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Doyle 等人 [2013] John C Doyle，Bruce A Francis 和 Allen R Tannenbaum. *反馈控制理论*。Courier
    Corporation，2013年。
- en: Du et al. [2023] Yilun Du, Shuang Li, Antonio Torralba, Joshua B Tenenbaum,
    and Igor Mordatch. Improving factuality and reasoning in language models through
    multiagent debate. *arXiv preprint arXiv:2305.14325*, 2023.
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Du 等人 [2023] Yilun Du，Shuang Li，Antonio Torralba，Joshua B Tenenbaum 和 Igor Mordatch.
    通过多智能体辩论提高语言模型的事实性和推理能力。*arXiv 预印本 arXiv:2305.14325*，2023年。
- en: Freudenberg and Looze [1987] J. Freudenberg and D. Looze. A sensitivity tradeoff
    for plants with time delay. *IEEE Transactions on Automatic Control*, 32(2):99–104,
    1987.
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Freudenberg 和 Looze [1987] J. Freudenberg 和 D. Looze. 带有时延的植物的灵敏度权衡。*IEEE 自动控制学报*，32(2)：99–104，1987年。
- en: Freudenberg and Looze [1985] J. Freudenberg and D.P. Looze. Right half plane
    poles and zeros and design tradeoffs in feedback systems. *IEEE transactions on
    automatic control*, 30(6):555–565, 1985.
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Freudenberg 和 Looze [1985] J. Freudenberg 和 D.P. Looze. 右半平面极点和零点以及反馈系统中的设计权衡。*IEEE
    自动控制学报*，30(6)：555–565，1985年。
- en: Freudenberg and Looze [1988] J.S. Freudenberg and D.P. Looze. *Frequency domain
    properties of scalar and multivariable feedback systems*. Springer, 1988.
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Freudenberg 和 Looze [1988] J.S. Freudenberg 和 D.P. Looze. *标量和多变量反馈系统的频域特性*。Springer，1988年。
- en: Fu et al. [2023] Yao Fu, Hao Peng, Tushar Khot, and Mirella Lapata. Improving
    language model negotiation with self-play and in-context learning from ai feedback.
    *arXiv preprint arXiv:2305.10142*, 2023.
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fu 等人 [2023] Yao Fu，Hao Peng，Tushar Khot 和 Mirella Lapata. 通过自我对弈和基于 AI 反馈的上下文学习提高语言模型的谈判能力。*arXiv
    预印本 arXiv:2305.10142*，2023年。
- en: 'Ge et al. [2024] Yingqiang Ge, Wenyue Hua, Kai Mei, Juntao Tan, Shuyuan Xu,
    Zelong Li, Yongfeng Zhang, et al. Openagi: When llm meets domain experts. *Advances
    in Neural Information Processing Systems*, 36, 2024.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ge 等人 [2024] Yingqiang Ge, Wenyue Hua, Kai Mei, Juntao Tan, Shuyuan Xu, Zelong
    Li, Yongfeng Zhang 等人。OpenAGI：当大语言模型遇上领域专家。*神经信息处理系统进展*, 36, 2024。
- en: Ghosh and Team [2024] Debi Prasad Ghosh and Design Automation Team. Retrieval-augmented
    generation in engineering design, 2024.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ghosh 和团队 [2024] Debi Prasad Ghosh 和设计自动化团队。增强检索生成在工程设计中的应用，2024。
- en: 'Gómez-Rodríguez and Williams [2023] Carlos Gómez-Rodríguez and Paul Williams.
    A confederacy of models: A comprehensive evaluation of llms on creative writing.
    *arXiv preprint arXiv:2310.08433*, 2023.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gómez-Rodríguez 和 Williams [2023] Carlos Gómez-Rodríguez 和 Paul Williams。模型联盟：大语言模型在创意写作中的综合评估。*arXiv
    预印本 arXiv:2310.08433*, 2023。
- en: Goodwin et al. [2001] Graham Clifford Goodwin, Stefan F Graebe, Mario E Salgado,
    et al. *Control system design*, volume 240. Prentice Hall Upper Saddle River,
    2001.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Goodwin 等人 [2001] Graham Clifford Goodwin, Stefan F Graebe, Mario E Salgado
    等人。*控制系统设计*，第 240 卷。普伦蒂斯霍尔出版社，上萨德尔里弗，2001。
- en: 'Gupta et al. [2022] Tanishq Gupta, Mohd Zaki, NM Anoop Krishnan, and Mausam.
    Matscibert: A materials domain language model for text mining and information
    extraction. *npj Computational Materials*, 8(1):102, 2022.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gupta 等人 [2022] Tanishq Gupta, Mohd Zaki, NM Anoop Krishnan 和 Mausam。MatsciBERT：用于文本挖掘和信息提取的材料领域语言模型。*npj
    计算材料*, 8(1):102, 2022。
- en: Hamann et al. [2024] Hendrik F Hamann, Thomas Brunschwiler, Blazhe Gjorgiev,
    Leonardo SA Martins, Alban Puech, Anna Varbella, Jonas Weiss, Juan Bernabe-Moreno,
    Alexandre Blondin Massé, Seong Choi, et al. A perspective on foundation models
    for the electric power grid. *arXiv preprint arXiv:2407.09434*, 2024.
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hamann 等人 [2024] Hendrik F Hamann, Thomas Brunschwiler, Blazhe Gjorgiev, Leonardo
    SA Martins, Alban Puech, Anna Varbella, Jonas Weiss, Juan Bernabe-Moreno, Alexandre
    Blondin Massé, Seong Choi 等人。电力网基础模型的视角。*arXiv 预印本 arXiv:2407.09434*, 2024。
- en: Hao et al. [2023] Shibo Hao, Yi Gu, Haodi Ma, Joshua Jiahua Hong, Zhen Wang,
    Daisy Zhe Wang, and Zhiting Hu. Reasoning with language model is planning with
    world model. *arXiv preprint arXiv:2305.14992*, 2023.
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hao 等人 [2023] Shibo Hao, Yi Gu, Haodi Ma, Joshua Jiahua Hong, Zhen Wang, Daisy
    Zhe Wang 和 Zhiting Hu。用语言模型推理就是用世界模型进行规划。*arXiv 预印本 arXiv:2305.14992*, 2023。
- en: Ho et al. [1996] Weng Khuen Ho, OP Gan, Ee Beng Tay, and EL Ang. Performance
    and gain and phase margins of well-known pid tuning formulas. *IEEE Transactions
    on Control Systems Technology*, 4(4):473–477, 1996.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ho 等人 [1996] Weng Khuen Ho, OP Gan, Ee Beng Tay 和 EL Ang。著名 PID 调节公式的性能与增益相位裕度。*IEEE
    控制系统技术期刊*, 4(4):473–477, 1996。
- en: 'Hong et al. [2023] Sirui Hong, Xiawu Zheng, Jonathan Chen, Yuheng Cheng, Jinlin
    Wang, Ceyao Zhang, Zili Wang, Steven Ka Shing Yau, Zijuan Lin, Liyang Zhou, et al.
    Metagpt: Meta programming for multi-agent collaborative framework. *arXiv preprint
    arXiv:2308.00352*, 2023.'
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hong 等人 [2023] Sirui Hong, Xiawu Zheng, Jonathan Chen, Yuheng Cheng, Jinlin
    Wang, Ceyao Zhang, Zili Wang, Steven Ka Shing Yau, Zijuan Lin, Liyang Zhou 等人。MetaGPT：面向多智能体协作框架的元编程。*arXiv
    预印本 arXiv:2308.00352*, 2023。
- en: 'Hou et al. [2023] Xinyi Hou, Yanjie Zhao, Yue Liu, Zhou Yang, Kailong Wang,
    Li Li, Xiapu Luo, David Lo, John Grundy, and Haoyu Wang. Large language models
    for software engineering: A systematic literature review. *ACM Transactions on
    Software Engineering and Methodology*, 2023.'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hou 等人 [2023] Xinyi Hou, Yanjie Zhao, Yue Liu, Zhou Yang, Kailong Wang, Li Li,
    Xiapu Luo, David Lo, John Grundy, 和 Haoyu Wang。大语言模型在软件工程中的应用：系统的文献综述。*ACM 软件工程与方法学期刊*,
    2023。
- en: 'Jia et al. [2024] Mengshuo Jia, Zeyu Cui, and Gabriela Hug. Enabling large
    language models to perform power system simulations with previously unseen tools:
    A case of daline. *arXiv preprint arXiv:2406.17215*, 2024.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jia 等人 [2024] Mengshuo Jia, Zeyu Cui 和 Gabriela Hug。使大语言模型能够使用以前未见过的工具进行电力系统仿真：Daline
    的案例。*arXiv 预印本 arXiv:2406.17215*, 2024。
- en: 'Josifoski et al. [2023] Martin Josifoski, Lars Klein, Maxime Peyrard, Nicolas
    Baldwin, Yifei Li, Saibo Geng, Julian Paul Schnitzler, Yuxing Yao, Jiheng Wei,
    Debjit Paul, et al. Flows: Building blocks of reasoning and collaborating ai.
    *arXiv preprint arXiv:2308.01285*, 2023.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Josifoski 等人 [2023] Martin Josifoski, Lars Klein, Maxime Peyrard, Nicolas Baldwin,
    Yifei Li, Saibo Geng, Julian Paul Schnitzler, Yuxing Yao, Jiheng Wei, Debjit Paul
    等人。流：推理与协作 AI 的构建块。*arXiv 预印本 arXiv:2308.01285*, 2023。
- en: 'Kevian et al. [2024] Darioush Kevian, Usman Syed, Xingang Guo, Aaron Havens,
    Geir Dullerud, Peter Seiler, Lianhui Qin, and Bin Hu. Capabilities of large language
    models in control engineering: A benchmark study on gpt-4, claude 3 opus, and
    gemini 1.0 ultra. *arXiv preprint arXiv:2404.03647*, 2024.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kevian 等人 [2024] Darioush Kevian, Usman Syed, Xingang Guo, Aaron Havens, Geir
    Dullerud, Peter Seiler, Lianhui Qin, 和 Bin Hu。大语言模型在控制工程中的能力：对 GPT-4、Claude 3
    Opus 和 Gemini 1.0 Ultra 的基准研究。*arXiv 预印本 arXiv:2404.03647*, 2024。
- en: Krah and Klarenbach [2010] JO Krah and C Klarenbach. Fast and high precision
    motor control for high performance servo drives. In *PCIM Conference*, pages 326–333,
    2010.
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Krah 和 Klarenbach [2010] JO Krah 和 C Klarenbach。高速高精度电机控制用于高性能伺服驱动。*PCIM 会议*，第326–333页，2010年。
- en: 'Lai et al. [2024] Yao Lai, Sungyoung Lee, Guojin Chen, Souradip Poddar, Mengkang
    Hu, David Z Pan, and Ping Luo. Analogcoder: Analog circuit design via training-free
    code generation. *arXiv preprint arXiv:2405.14918*, 2024.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Lai 等人 [2024] Yao Lai、Sungyoung Lee、Guojin Chen、Souradip Poddar、Mengkang Hu、David
    Z Pan 和 Ping Luo。Analogcoder: 通过无训练的代码生成进行模拟电路设计。*arXiv 预印本 arXiv:2405.14918*，2024年。'
- en: 'Lequin et al. [2003] Olivier Lequin, Michel Gevers, Magnus Mossberg, Emmanuel
    Bosmans, and Lionel Triest. Iterative feedback tuning of pid parameters: comparison
    with classical tuning rules. *Control Engineering Practice*, 11(9):1023–1033,
    2003.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lequin 等人 [2003] Olivier Lequin、Michel Gevers、Magnus Mossberg、Emmanuel Bosmans
    和 Lionel Triest。PID 参数的迭代反馈调节：与经典调节规则的比较。*控制工程实践*，11(9):1023–1033，2003年。
- en: 'Li et al. [2023] Guohao Li, Hasan Hammoud, Hani Itani, Dmitrii Khizbullin,
    and Bernard Ghanem. Camel: Communicative agents for" mind" exploration of large
    language model society. *Advances in Neural Information Processing Systems*, 36:51991–52008,
    2023.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Li 等人 [2023] Guohao Li、Hasan Hammoud、Hani Itani、Dmitrii Khizbullin 和 Bernard
    Ghanem。Camel: 用于“大脑”探索大规模语言模型社会的交互代理。*神经信息处理系统进展*，36:51991–52008，2023年。'
- en: Liang et al. [2023] Tian Liang, Zhiwei He, Wenxiang Jiao, Xing Wang, Yan Wang,
    Rui Wang, Yujiu Yang, Zhaopeng Tu, and Shuming Shi. Encouraging divergent thinking
    in large language models through multi-agent debate. *arXiv preprint arXiv:2305.19118*,
    2023.
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liang 等人 [2023] Tian Liang、Zhiwei He、Wenxiang Jiao、Xing Wang、Yan Wang、Rui Wang、Yujiu
    Yang、Zhaopeng Tu 和 Shuming Shi。通过多代理辩论鼓励大规模语言模型中的发散性思维。*arXiv 预印本 arXiv:2305.19118*，2023年。
- en: 'Liu et al. [2024a] Chengjie Liu, Weiyu Chen, Anlan Peng, Yuan Du, Li Du, and
    Jun Yang. Ampagent: An llm-based multi-agent system for multi-stage amplifier
    schematic design from literature for process and performance porting. *arXiv preprint
    arXiv:2409.14739*, 2024a.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Liu 等人 [2024a] Chengjie Liu、Weiyu Chen、Anlan Peng、Yuan Du、Li Du 和 Jun Yang。Ampagent:
    基于 LLM 的多代理系统，用于从文献中进行多阶段放大器原理图设计，以便进行工艺和性能移植。*arXiv 预印本 arXiv:2409.14739*，2024a年。'
- en: Liu et al. [2014] Tao Liu, Xue Z Wang, and Junghui Chen. Robust pid based indirect-type
    iterative learning control for batch processes with time-varying uncertainties.
    *Journal of Process Control*, 24(12):95–106, 2014.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liu 等人 [2014] Tao Liu、Xue Z Wang 和 Junghui Chen。基于鲁棒 PID 的间接型迭代学习控制，用于具有时变不确定性的批处理过程。*过程控制杂志*，24(12):95–106，2014年。
- en: 'Liu et al. [2023a] Zhihan Liu, Hao Hu, Shenao Zhang, Hongyi Guo, Shuqi Ke,
    Boyi Liu, and Zhaoran Wang. Reason for future, act for now: A principled architecture
    for autonomous llm agents. In *Forty-first International Conference on Machine
    Learning*, 2023a.'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liu 等人 [2023a] Zhihan Liu、Hao Hu、Shenao Zhang、Hongyi Guo、Shuqi Ke、Boyi Liu 和
    Zhaoran Wang。为未来而思考，为现在而行动：自主 LLM 代理的原则性架构。在 *第41届国际机器学习会议*，2023a年。
- en: 'Liu et al. [2024b] Zhiwei Liu, Weiran Yao, Jianguo Zhang, Liangwei Yang, Zuxin
    Liu, Juntao Tan, Prafulla K Choubey, Tian Lan, Jason Wu, Huan Wang, et al. Agentlite:
    A lightweight library for building and advancing task-oriented llm agent system.
    *arXiv preprint arXiv:2402.15538*, 2024b.'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Liu 等人 [2024b] Zhiwei Liu、Weiran Yao、Jianguo Zhang、Liangwei Yang、Zuxin Liu、Juntao
    Tan、Prafulla K Choubey、Tian Lan、Jason Wu、Huan Wang 等人。Agentlite: 一个轻量级库，用于构建和推进面向任务的
    LLM 代理系统。*arXiv 预印本 arXiv:2402.15538*，2024b年。'
- en: 'Liu et al. [2023b] Zijun Liu, Yanzhe Zhang, Peng Li, Yang Liu, and Diyi Yang.
    Dynamic llm-agent network: An llm-agent collaboration framework with agent team
    optimization. *arXiv preprint arXiv:2310.02170*, 2023b.'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liu 等人 [2023b] Zijun Liu、Yanzhe Zhang、Peng Li、Yang Liu 和 Diyi Yang。动态 LLM-代理网络：一个具有代理团队优化的
    LLM-代理协作框架。*arXiv 预印本 arXiv:2310.02170*，2023b年。
- en: Lu et al. [2024] Jiaxing Lu, Heran Li, Fangwei Ning, Yixuan Wang, Xinze Li,
    and Yan Shi. Constructing mechanical design agent based on large language models.
    *arXiv preprint arXiv:2408.02087*, 2024.
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lu 等人 [2024] Jiaxing Lu、Heran Li、Fangwei Ning、Yixuan Wang、Xinze Li 和 Yan Shi。基于大规模语言模型构建机械设计代理。*arXiv
    预印本 arXiv:2408.02087*，2024年。
- en: M. Bran et al. [2024] Andres M. Bran, Sam Cox, Oliver Schilter, Carlo Baldassari,
    Andrew D White, and Philippe Schwaller. Augmenting large language models with
    chemistry tools. *Nature Machine Intelligence*, pages 1–11, 2024.
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: M. Bran 等人 [2024] Andres M. Bran、Sam Cox、Oliver Schilter、Carlo Baldassari、Andrew
    D White 和 Philippe Schwaller。通过化学工具增强大规模语言模型。*Nature 机器智能*，第1–11页，2024年。
- en: Majumder et al. [2024] Subir Majumder, Lin Dong, Fatemeh Doudi, Yuting Cai,
    Chao Tian, Dileep Kalathil, Kevin Ding, Anupam A Thatte, Na Li, and Le Xie. Exploring
    the capabilities and limitations of large language models in the electric energy
    sector. *Joule*, 8(6):1544–1549, 2024.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Majumder 等人 [2024] Subir Majumder, Lin Dong, Fatemeh Doudi, Yuting Cai, Chao
    Tian, Dileep Kalathil, Kevin Ding, Anupam A Thatte, Na Li 和 Le Xie. 探索大型语言模型在电力能源领域的能力与局限性.
    *Joule*, 8(6):1544–1549, 2024.
- en: Mann et al. [2001] GKI Mann, B-G Hu, and RG Gosine. Time-domain based design
    and analysis of new pid tuning rules. *IEE Proceedings-Control Theory and Applications*,
    148(3):251–261, 2001.
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mann 等人 [2001] GKI Mann, B-G Hu 和 RG Gosine. 基于时域的新 PID 调节规则的设计与分析. *IEE 控制理论与应用学报*,
    148(3):251–261, 2001.
- en: MathWorks [2023] MathWorks. *Control System Toolbox*. The MathWorks, Inc., Natick,
    Massachusetts, United States, 2023. URL [https://www.mathworks.com/products/control.html](https://www.mathworks.com/products/control.html).
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MathWorks [2023] MathWorks. *控制系统工具箱*. MathWorks公司, 美国马萨诸塞州纳提克, 2023. 网址 [https://www.mathworks.com/products/control.html](https://www.mathworks.com/products/control.html).
- en: Mei et al. [2024] Kai Mei, Zelong Li, Shuyuan Xu, Ruosong Ye, Yingqiang Ge,
    and Yongfeng Zhang. Llm agent operating system. *arXiv preprint arXiv:2403.16971*,
    2024.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mei 等人 [2024] Kai Mei, Zelong Li, Shuyuan Xu, Ruosong Ye, Yingqiang Ge 和 Yongfeng
    Zhang. LLM 代理操作系统. *arXiv 预印本 arXiv:2403.16971*, 2024.
- en: Morari and Zafiriou [1989] M. Morari and E. Zafiriou. *Robust Process Control*.
    Prentice Hall, 1989.
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Morari 和 Zafiriou [1989] M. Morari 和 E. Zafiriou. *鲁棒过程控制*. Prentice Hall, 1989.
- en: 'Nakano et al. [2021] Reiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu,
    Long Ouyang, Christina Kim, Christopher Hesse, Shantanu Jain, Vineet Kosaraju,
    William Saunders, et al. Webgpt: Browser-assisted question-answering with human
    feedback. *arXiv preprint arXiv:2112.09332*, 2021.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Nakano 等人 [2021] Reiichiro Nakano, Jacob Hilton, Suchir Balaji, Jeff Wu, Long
    Ouyang, Christina Kim, Christopher Hesse, Shantanu Jain, Vineet Kosaraju, William
    Saunders 等人. WebGPT: 浏览器辅助的基于人类反馈的问答系统. *arXiv 预印本 arXiv:2112.09332*, 2021.'
- en: Nielsen et al. [2024] David Nielsen, Stephen SB Clarke, and Krishna M Kalyanam.
    Towards an aviation large language model by fine-tuning and evaluating transformers.
    In *43rd AIAA/digital avionics systems conference (DASC)*, 2024.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nielsen 等人 [2024] David Nielsen, Stephen SB Clarke 和 Krishna M Kalyanam. 通过微调和评估变换器，朝着航空领域的大型语言模型迈进.
    见 *第43届AIAA/数字航空电子系统会议 (DASC)*, 2024.
- en: O’dwyer [2009] Aidan O’dwyer. *Handbook of PI and PID controller tuning rules*.
    World Scientific, 2009.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: O’dwyer [2009] Aidan O’dwyer. *PI 和 PID 控制器调节规则手册*. 世界科学出版社, 2009.
- en: Ogata [2009] Katsuhiko Ogata. *Modern control engineering*. Pearson, 2009.
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ogata [2009] Katsuhiko Ogata. *现代控制工程*. Pearson, 2009.
- en: Ohnishi [1996] K. Ohnishi. Robust motion control by disturbance observer. *Journal
    of Robotics and Mechatronics*, 8(3):218–226, 1996.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ohnishi [1996] K. Ohnishi. 通过扰动观测器实现鲁棒运动控制. *机器人与机电一体化学报*, 8(3):218–226, 1996.
- en: Ossmann et al. [2021] Daniel Ossmann, Peter Seiler, Christopher Milliren, and
    Alan Danker. Field testing of multi-variable individual pitch control on a utility-scale
    wind turbine. *Renewable Energy*, 170:1245–1256, 2021.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ossmann 等人 [2021] Daniel Ossmann, Peter Seiler, Christopher Milliren 和 Alan
    Danker. 多变量单独桨距控制在公用事业规模风力涡轮机上的现场测试. *可再生能源*, 170:1245–1256, 2021.
- en: Ouyang et al. [2023] Siru Ouyang, Zhuosheng Zhang, Bing Yan, Xuan Liu, Jiawei
    Han, and Lianhui Qin. Structured chemistry reasoning with large language models.
    *arXiv preprint arXiv:2311.09656*, 2023.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ouyang 等人 [2023] Siru Ouyang, Zhuosheng Zhang, Bing Yan, Xuan Liu, Jiawei Han
    和 Lianhui Qin. 使用大型语言模型进行结构化化学推理. *arXiv 预印本 arXiv:2311.09656*, 2023.
- en: Padula and Visioli [2011] Fabrizio Padula and Antonio Visioli. Tuning rules
    for optimal pid and fractional-order pid controllers. *Journal of process control*,
    21(1):69–81, 2011.
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Padula 和 Visioli [2011] Fabrizio Padula 和 Antonio Visioli. 最优 PID 和分数阶 PID 控制器的调节规则.
    *过程控制学报*, 21(1):69–81, 2011.
- en: Panda [2008] Rames C Panda. Synthesis of pid tuning rule using the desired closed-loop
    response. *Industrial & engineering chemistry research*, 47(22):8684–8692, 2008.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Panda [2008] Rames C Panda. 使用期望闭环响应合成 PID 调节规则. *工业与工程化学研究*, 47(22):8684–8692,
    2008.
- en: 'Parisi et al. [2022] Aaron Parisi, Yao Zhao, and Noah Fiedel. Talm: Tool augmented
    language models. *arXiv preprint arXiv:2205.12255*, 2022.'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Parisi 等人 [2022] Aaron Parisi, Yao Zhao 和 Noah Fiedel. Talm: 工具增强语言模型. *arXiv
    预印本 arXiv:2205.12255*, 2022.'
- en: 'Park et al. [2023] Joon Sung Park, Joseph O’Brien, Carrie Jun Cai, Meredith Ringel
    Morris, Percy Liang, and Michael S Bernstein. Generative agents: Interactive simulacra
    of human behavior. In *Proceedings of the 36th annual acm symposium on user interface
    software and technology*, pages 1–22, 2023.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Park 等人 [2023] Joon Sung Park, Joseph O’Brien, Carrie Jun Cai, Meredith Ringel
    Morris, Percy Liang 和 Michael S Bernstein. 生成代理：人类行为的交互式模拟. 见 *第36届ACM年度用户界面软件与技术研讨会论文集*,
    第1–22页, 2023.
- en: 'Poddar et al. [2024] Souradip Poddar, Youngmin Oh, Yao Lai, Hanqing Zhu, Bosun
    Hwang, and David Z Pan. Insight: Universal neural simulator for analog circuits
    harnessing autoregressive transformers. *arXiv preprint arXiv:2407.07346*, 2024.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Poddar et al. [2024] Souradip Poddar, Youngmin Oh, Yao Lai, Hanqing Zhu, Bosun
    Hwang, 和 David Z Pan. Insight: 一种用于模拟模拟电路的通用神经模拟器，利用自回归变换器。*arXiv 预印本 arXiv:2407.07346*,
    2024。'
- en: Qian et al. [2023] Chen Qian, Xin Cong, Cheng Yang, Weize Chen, Yusheng Su,
    Juyuan Xu, Zhiyuan Liu, and Maosong Sun. Communicative agents for software development.
    *arXiv preprint arXiv:2307.07924*, 6, 2023.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qian et al. [2023] 陈乾, 辛聪, 程杨, 韦泽陈, 余生苏, 巨源许, 志远刘, 和茂松孙. 软件开发中的交互式代理。*arXiv
    预印本 arXiv:2307.07924*, 6, 2023。
- en: 'Rivera et al. [1986] Daniel E Rivera, Manfred Morari, and Sigurd Skogestad.
    Internal model control: Pid controller design. *Industrial & engineering chemistry
    process design and development*, 25(1):252–265, 1986.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rivera et al. [1986] Daniel E Rivera, Manfred Morari, 和 Sigurd Skogestad. 内部模型控制：PID控制器设计。*工业与工程化学过程设计与开发*,
    25(1):252–265, 1986。
- en: 'Sastry [2013] Shankar Sastry. *Nonlinear systems: analysis, stability, and
    control*, volume 10. Springer Science & Business Media, 2013.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Sastry [2013] Shankar Sastry. *非线性系统：分析、稳定性与控制*, 第10卷。Springer Science & Business
    Media, 2013。
- en: 'Schick et al. [2024] Timo Schick, Jane Dwivedi-Yu, Roberto Dessì, Roberta Raileanu,
    Maria Lomeli, Eric Hambro, Luke Zettlemoyer, Nicola Cancedda, and Thomas Scialom.
    Toolformer: Language models can teach themselves to use tools. *Advances in Neural
    Information Processing Systems*, 36, 2024.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Schick et al. [2024] Timo Schick, Jane Dwivedi-Yu, Roberto Dessì, Roberta Raileanu,
    Maria Lomeli, Eric Hambro, Luke Zettlemoyer, Nicola Cancedda, 和 Thomas Scialom.
    Toolformer: 语言模型可以自我学习使用工具。*神经信息处理系统进展*, 36, 2024。'
- en: Seron et al. [2012] M.M. Seron, J.H. Braslavsky, and G.C. Goodwin. *Fundamental
    limitations in filtering and control*. Springer Science & Business Media, 2012.
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Seron et al. [2012] M.M. Seron, J.H. Braslavsky, 和 G.C. Goodwin. *过滤与控制中的基本限制*。Springer
    Science & Business Media, 2012。
- en: Skogestad [2001] Sigurd Skogestad. Probably the best simple pid tuning rules
    in the world. In *AIChE Annual Meeting, Reno, Nevada*, volume 77, page 276h. Citeseer,
    2001.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skogestad [2001] Sigurd Skogestad. 可能是世界上最好的简单PID调节规则。收录于 *AIChE年会, 内华达州雷诺*,
    第77卷，第276h页。Citeseer, 2001。
- en: Skogestad [2003] Sigurd Skogestad. Simple analytic rules for model reduction
    and pid controller tuning. *Journal of process control*, 13(4):291–309, 2003.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skogestad [2003] Sigurd Skogestad. 简单的解析规则用于模型简化和PID控制器调节。*过程控制杂志*, 13(4):291–309,
    2003。
- en: Stein [2003] G. Stein. Respect the unstable. *IEEE Control Systems Magazine*,
    23(4):12–25, 2003.
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stein [2003] G. Stein. 尊重不稳定性。*IEEE 控制系统杂志*, 23(4):12–25, 2003。
- en: 'Syed et al. [2024] Usman Syed, Ethan Light, Xingang Guo, Huan Zhang, Lianhui
    Qin, Yanfeng Ouyang, and Bin Hu. Benchmarking the capabilities of large language
    models in transportation system engineering: Accuracy, consistency, and reasoning
    behaviors. *arXiv preprint arXiv:2408.08302*, 2024.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Syed et al. [2024] Usman Syed, Ethan Light, Xingang Guo, Huan Zhang, Lianhui
    Qin, Yanfeng Ouyang, 和 Bin Hu. 大型语言模型在交通系统工程中的能力基准：准确性、一致性和推理行为。*arXiv 预印本 arXiv:2408.08302*,
    2024。
- en: 'Talebirad and Nadiri [2023] Yashar Talebirad and Amirhossein Nadiri. Multi-agent
    collaboration: Harnessing the power of intelligent llm agents. *arXiv preprint
    arXiv:2306.03314*, 2023.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Talebirad and Nadiri [2023] Yashar Talebirad 和 Amirhossein Nadiri. 多代理协作：利用智能LLM代理的力量。*arXiv
    预印本 arXiv:2306.03314*, 2023。
- en: 'Tang et al. [2023] Qiaoyu Tang, Ziliang Deng, Hongyu Lin, Xianpei Han, Qiao
    Liang, Boxi Cao, and Le Sun. Toolalpaca: Generalized tool learning for language
    models with 3000 simulated cases. *arXiv preprint arXiv:2306.05301*, 2023.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Tang et al. [2023] 乔宇唐, 子亮邓, 宏宇林, 先沛韩, 乔梁, 博熙曹, 和 乐孙. Toolalpaca: 基于3000个模拟案例的语言模型工具学习通用化。*arXiv
    预印本 arXiv:2306.05301*, 2023。'
- en: '[73] Yufei Tian, Abhilasha Ravichander, Lianhui Qin, Ronan Le Bras, Raja Marjieh,
    Nanyun Peng, Yejin Choi, Thomas L Griffiths, and Faeze Brahman. Thinking out-of-the-box:
    A comparative investigation of human and llms in creative problem-solving. In
    *ICML 2024 Workshop on LLMs and Cognition*.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[73] Yufei Tian, Abhilasha Ravichander, Lianhui Qin, Ronan Le Bras, Raja Marjieh,
    Nanyun Peng, Yejin Choi, Thomas L Griffiths, 和 Faeze Brahman. 跳出框框思考：人类与LLMs在创造性问题解决中的比较研究。收录于
    *ICML 2024年LLMs与认知研讨会*。'
- en: Trewartha et al. [2022] Amalie Trewartha, Nicholas Walker, Haoyan Huo, Sanghoon
    Lee, Kevin Cruse, John Dagdelen, Alexander Dunn, Kristin A Persson, Gerbrand Ceder,
    and Anubhav Jain. Quantifying the advantage of domain-specific pre-training on
    named entity recognition tasks in materials science. *Patterns*, 3(4), 2022.
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Trewartha et al. [2022] Amalie Trewartha, Nicholas Walker, Haoyan Huo, Sanghoon
    Lee, Kevin Cruse, John Dagdelen, Alexander Dunn, Kristin A Persson, Gerbrand Ceder,
    和 Anubhav Jain. 量化材料科学中领域特定预训练对命名实体识别任务的优势。*Patterns*, 3(4), 2022。
- en: Wang et al. [2024] Lei Wang, Chen Ma, Xueyang Feng, Zeyu Zhang, Hao Yang, Jingsen
    Zhang, Zhiyuan Chen, Jiakai Tang, Xu Chen, Yankai Lin, et al. A survey on large
    language model based autonomous agents. *Frontiers of Computer Science*, 18(6):186345,
    2024.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wang等人[2024] Lei Wang, Chen Ma, Xueyang Feng, Zeyu Zhang, Hao Yang, Jingsen
    Zhang, Zhiyuan Chen, Jiakai Tang, Xu Chen, Yankai Lin等。基于大型语言模型的自主智能体调研。*计算机科学前沿*，18(6)：186345，2024年。
- en: 'Wu et al. [2023] Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran Wu, Shaokun Zhang,
    Erkang Zhu, Beibin Li, Li Jiang, Xiaoyun Zhang, and Chi Wang. Autogen: Enabling
    next-gen llm applications via multi-agent conversation framework. *arXiv preprint
    arXiv:2308.08155*, 2023.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wu等人[2023] Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran Wu, Shaokun Zhang, Erkang
    Zhu, Beibin Li, Li Jiang, Xiaoyun Zhang, 和 Chi Wang。Autogen：通过多智能体对话框架使下一代LLM应用成为可能。*arXiv预印本
    arXiv:2308.08155*，2023年。
- en: 'Xiang et al. [2024] Jiannan Xiang, Tianhua Tao, Yi Gu, Tianmin Shu, Zirui Wang,
    Zichao Yang, and Zhiting Hu. Language models meet world models: Embodied experiences
    enhance language models. *Advances in neural information processing systems*,
    36, 2024.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xiang等人[2024] Jiannan Xiang, Tianhua Tao, Yi Gu, Tianmin Shu, Zirui Wang, Zichao
    Yang, 和 Zhiting Hu。语言模型遇见世界模型：具身经验增强语言模型。*神经信息处理系统进展*，36，2024年。
- en: 'Xu et al. [2024] Boyan Xu, Liang Wen, Zihao Li, Yuxing Yang, Guanlan Wu, Xiongpeng
    Tang, Yu Li, Zihao Wu, Qingxian Su, Xueqing Shi, et al. Unlocking the potential:
    Benchmarking large language models in water engineering and research. *arXiv preprint
    arXiv:2407.21045*, 2024.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xu等人[2024] Boyan Xu, Liang Wen, Zihao Li, Yuxing Yang, Guanlan Wu, Xiongpeng
    Tang, Yu Li, Zihao Wu, Qingxian Su, Xueqing Shi等。释放潜力：在水利工程与研究中基准测试大型语言模型。*arXiv预印本
    arXiv:2407.21045*，2024年。
- en: Xu et al. [2008] Jian-Xin Xu, Deqing Huang, and Srinivas Pindi. Optimal tuning
    of pid parameters using iterative learning approach. *SICE Journal of Control,
    Measurement, and System Integration*, 1(2):143–154, 2008.
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xu等人[2008] Jian-Xin Xu, Deqing Huang, 和 Srinivas Pindi。利用迭代学习方法优化PID参数。*SICE控制、测量与系统集成学报*，1(2)：143–154，2008年。
- en: 'Yao et al. [2024] Shunyu Yao, Dian Yu, Jeffrey Zhao, Izhak Shafran, Tom Griffiths,
    Yuan Cao, and Karthik Narasimhan. Tree of thoughts: Deliberate problem solving
    with large language models. *Advances in Neural Information Processing Systems*,
    36, 2024.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yao等人[2024] Shunyu Yao, Dian Yu, Jeffrey Zhao, Izhak Shafran, Tom Griffiths,
    Yuan Cao, 和 Karthik Narasimhan。思维树：使用大型语言模型进行深思熟虑的问题解决。*神经信息处理系统进展*，36，2024年。
- en: 'Yu et al. [2024] Fangxu Yu, Lai Jiang, Haoqiang Kang, Shibo Hao, and Lianhui
    Qin. Flow of reasoning: Efficient training of llm policy with divergent thinking.
    *arXiv preprint arXiv:2406.05673*, 2024.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yu等人[2024] Fangxu Yu, Lai Jiang, Haoqiang Kang, Shibo Hao, 和 Lianhui Qin。推理流：通过发散性思维有效训练LLM策略。*arXiv预印本
    arXiv:2406.05673*，2024年。
- en: 'Zhang et al. [2024] Kechi Zhang, Jia Li, Ge Li, Xianjie Shi, and Zhi Jin. Codeagent:
    Enhancing code generation with tool-integrated agent systems for real-world repo-level
    coding challenges. *arXiv preprint arXiv:2401.07339*, 2024.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhang等人[2024] Kechi Zhang, Jia Li, Ge Li, Xianjie Shi, 和 Zhi Jin。Codeagent：通过工具集成智能体系统提升代码生成，解决真实世界代码库层面的编程挑战。*arXiv预印本
    arXiv:2401.07339*，2024年。
- en: Zhou and Doyle [1998] Kemin Zhou and John Comstock Doyle. *Essentials of robust
    control*, volume 104. Prentice hall Upper Saddle River, NJ, 1998.
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhou和Doyle[1998] Kemin Zhou和John Comstock Doyle。*鲁棒控制基础*，第104卷。普伦蒂斯霍尔出版，1998年。
- en: Zhuge et al. [2023] Mingchen Zhuge, Haozhe Liu, Francesco Faccio, Dylan R Ashley,
    Róbert Csordás, Anand Gopalakrishnan, Abdullah Hamdi, Hasan Abed Al Kader Hammoud,
    Vincent Herrmann, Kazuki Irie, et al. Mindstorms in natural language-based societies
    of mind. *arXiv preprint arXiv:2305.17066*, 2023.
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhuge等人[2023] Mingchen Zhuge, Haozhe Liu, Francesco Faccio, Dylan R Ashley,
    Róbert Csordás, Anand Gopalakrishnan, Abdullah Hamdi, Hasan Abed Al Kader Hammoud,
    Vincent Herrmann, Kazuki Irie等。基于自然语言的心智社会中的思维风暴。*arXiv预印本 arXiv:2305.17066*，2023年。
- en: Zhuge et al. [2024] Mingchen Zhuge, Wenyi Wang, Louis Kirsch, Francesco Faccio,
    Dmitrii Khizbullin, and Jürgen Schmidhuber. Language agents as optimizable graphs,
    2024.
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhuge等人[2024] Mingchen Zhuge, Wenyi Wang, Louis Kirsch, Francesco Faccio, Dmitrii
    Khizbullin, 和 Jürgen Schmidhuber。语言智能体作为可优化图，2024年。
- en: Ziegler and Nichols [1942] John G Ziegler and Nathaniel B Nichols. Optimum settings
    for automatic controllers. *Transactions of the American society of mechanical
    engineers*, 64(8):759–765, 1942.
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ziegler和Nichols[1942] John G Ziegler和Nathaniel B Nichols。自动控制器的最佳设置。*美国机械工程师学会会刊*，64(8)：759–765，1942年。
- en: Appendix
  id: totrans-240
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录
- en: 'Appendix A ControlAgent: Future Outlook'
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录A ControlAgent：未来展望
- en: In this section, we explore the future prospects of ControlAgent. We believe
    that ControlAgent represents a foundational initial step toward automated control
    system design using LLMs. Further research is necessary to expand its capabilities,
    enabling it to tackle more complex and realistic control challenges.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们探讨了ControlAgent的未来前景。我们认为，ControlAgent代表了利用LLMs进行自动化控制系统设计的基础性初步步骤。为了扩展其能力，进一步的研究是必要的，这将使其能够应对更复杂和现实的控制挑战。
- en: A.1 Expansion to Nonlinear Systems and Advanced Control Strategies
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: A.1 扩展至非线性系统和高级控制策略
- en: The current scope of ControlAgent is limited to Linear Time-Invariant (LTI)
    systems and conventional control strategies, which, although widely used in many
    industrial applications, restrict its applicability to a subset of control problems.
    However, in real-world scenarios, many systems exhibit nonlinear behavior, time-varying
    dynamics, or other complexities that are not sufficiently captured by LTI models.
    Future research should aim to incorporate advanced control strategies, such as
    nonlinear control methods [Sastry, [2013](https://arxiv.org/html/2410.19811v1#bib.bib64)]
    (e.g., Lyapunov control, sliding mode control, backstepping, etc.), as well as
    adaptive and robust control frameworks [Zhou and Doyle, [1998](https://arxiv.org/html/2410.19811v1#bib.bib83)].
    Expanding ControlAgent to handle these complex dynamics would significantly broaden
    its applicability to industries requiring sophisticated control solutions, such
    as robotics, aerospace, and automotive engineering. Additionally, leveraging the
    creative potential of LLMs could lead to innovative control strategies beyond
    the scope of traditional human-designed approaches [[Tian et al.,](https://arxiv.org/html/2410.19811v1#bib.bib73)
    , Gómez-Rodríguez and Williams, [2023](https://arxiv.org/html/2410.19811v1#bib.bib22)].
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，ControlAgent的适用范围仅限于线性时不变（LTI）系统和传统的控制策略，尽管这些策略在许多工业应用中得到了广泛应用，但它的适用性仍然局限于控制问题的一个子集。然而，在实际场景中，许多系统表现出非线性行为、时变动态或其他复杂性，而这些复杂性在LTI模型中无法充分捕捉。未来的研究应着力于融入先进的控制策略，例如非线性控制方法[Sastry,
    [2013](https://arxiv.org/html/2410.19811v1#bib.bib64)]（如李雅普诺夫控制、滑模控制、反步法等），以及自适应和鲁棒控制框架[Zhou
    and Doyle, [1998](https://arxiv.org/html/2410.19811v1#bib.bib83)]。将ControlAgent扩展到能够处理这些复杂动态，将显著扩大其在需要复杂控制解决方案的行业中的适用性，如机器人技术、航空航天和汽车工程等。此外，利用LLMs的创造性潜力可能会带来超出传统人工设计方法的创新控制策略[[Tian
    et al.,](https://arxiv.org/html/2410.19811v1#bib.bib73), Gómez-Rodríguez 和 Williams,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib22)]。
- en: A.2 Modular Integration of Different LLMs
  id: totrans-245
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: A.2 不同LLM的模块化集成
- en: The architecture of ControlAgent currently relies on a single base LLM for both
    central LLM agent and task-specific LLM agent. A promising research direction
    involves the modular integration of various LLMs based on their specific expertise.
    For example, specialized LLMs fine-tuned for mathematical reasoning, optimization,
    or control theory could be assigned to different roles within the overall framework
    of ControlAgent. This modular approach could leverage smaller, more focused models
    to handle niche aspects of control design. In addition, using open-source LLMs
    for non-critical tasks would reduce the reliance on proprietary models, making
    ControlAgent more accessible and adaptable.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，ControlAgent的架构依赖于单一的基础LLM，既作为中央LLM代理，也作为任务特定LLM代理。一个有前景的研究方向是基于各自的专业领域，模块化集成各种LLM。例如，针对数学推理、优化或控制理论进行微调的专业LLM，可以在ControlAgent的整体框架中被分配到不同的角色。这种模块化方法可以利用较小、更加专注的模型来处理控制设计中的某些特定方面。此外，使用开源LLM来处理非关键任务，将减少对专有模型的依赖，从而使ControlAgent更具可访问性和适应性。
- en: A.3 Extending the ControlEval Dataset for Comprehensive Validation
  id: totrans-247
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: A.3 扩展ControlEval数据集以进行全面验证
- en: ControlEval includes various control tasks that predominantly feature LTI systems.
    Extending ControlEval to include more complex tasks, such as real-world control
    systems and hardware-in-the-loop simulations, would provide a more robust validation
    of ControlAgent’s capabilities. Additionally, including scenarios that test the
    robustness and adaptability of ControlAgent to external disturbances, model uncertainties,
    and unmodeled dynamics would further establish its practical utility and readiness
    for real-world deployment.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: ControlEval 包括各种控制任务，主要以 LTI 系统为特征。将 ControlEval 扩展到包括更复杂的任务，如现实世界控制系统和硬件在环仿真，将更好地验证
    ControlAgent 的能力。此外，增加测试 ControlAgent 对外部干扰、模型不确定性和未建模动态的鲁棒性和适应性的场景，将进一步证明其在现实世界部署中的实际效用和准备情况。
- en: Appendix B More Discussions on Related Work and Control Background
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 B 相关工作与控制背景的更多讨论
- en: B.1 More Related Work
  id: totrans-250
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.1 更多相关工作
- en: Classic Control Design
  id: totrans-251
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 经典控制设计
- en: PID controllers have been a cornerstone of control system design. The widespread
    adoption of PID controllers is attributed to their simplicity, robustness, and
    effectiveness in managing a wide range of dynamic systems. Theoretical advancements
    have focused on optimizing PID parameters to achieve a desired performance, with
    methods such as Ziegler-Nichols tuning rules [Ziegler and Nichols, [1942](https://arxiv.org/html/2410.19811v1#bib.bib86)]
    providing a heuristic-based starting point for controller tuning. Over the years,
    a range of adaptive and robust PID tuning techniques have been proposed, extending
    the PID controller’s applicability to nonlinear, time-varying, and uncertain systems
    [Ang et al., [2005](https://arxiv.org/html/2410.19811v1#bib.bib3), Åström and
    Murray, [2021](https://arxiv.org/html/2410.19811v1#bib.bib5)].
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: PID 控制器一直是控制系统设计的基石。PID 控制器的广泛应用归功于其简单性、鲁棒性以及在管理各种动态系统中的有效性。理论上的进展集中在优化 PID
    参数以实现所需的性能，方法如 Ziegler-Nichols 调整规则 [Ziegler 和 Nichols, [1942](https://arxiv.org/html/2410.19811v1#bib.bib86)]
    为控制器调整提供了基于启发式的起始点。多年来，已经提出了一系列自适应和鲁棒的 PID 调整技术，将 PID 控制器的适用范围扩展到非线性、时变和不确定系统
    [Ang 等人, [2005](https://arxiv.org/html/2410.19811v1#bib.bib3), Åström 和 Murray,
    [2021](https://arxiv.org/html/2410.19811v1#bib.bib5)]。
- en: Loop shaping is another powerful approach to control system design, rooted in
    frequency domain techniques and aimed at shaping the open-loop transfer function
    to achieve specific performance and robustness goals [Ogata, [2009](https://arxiv.org/html/2410.19811v1#bib.bib53)].
    The central idea behind loop shaping is to design controllers that provide sufficient
    bandwidth, disturbance rejection, and stability margins by directly manipulating
    the system’s frequency response. Loop shaping approaches use tools like Bode plots
    to tailor the system’s gain and phase characteristics [Doyle et al., [2013](https://arxiv.org/html/2410.19811v1#bib.bib14)].
    The importance of loop shaping is evident in its continued application across
    various industrial domains, including process control [Morari and Zafiriou, [1989](https://arxiv.org/html/2410.19811v1#bib.bib49)],
    aerospace [Blight et al., [1994](https://arxiv.org/html/2410.19811v1#bib.bib7)],
    and mechatronics [Ohnishi, [1996](https://arxiv.org/html/2410.19811v1#bib.bib54)],
    showcasing its effectiveness in addressing real-world control challenges. Nevertheless,
    all the existing control design methods still heavily rely on the domain expertise
    and human intuition. ControlAgent makes an meaningful initial step towards automating
    the control system design by integrating LLM agents and human expert knowledge.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 环路整形是另一种强大的控制系统设计方法，根植于频域技术，旨在整形开环传递函数以实现特定的性能和鲁棒性目标 [Ogata, [2009](https://arxiv.org/html/2410.19811v1#bib.bib53)]。环路整形的核心思想是设计能够提供足够带宽、抗干扰能力和稳定性裕度的控制器，通过直接操作系统的频率响应来实现这一目标。环路整形方法使用像
    Bode 图这样的工具来定制系统的增益和相位特性 [Doyle 等人, [2013](https://arxiv.org/html/2410.19811v1#bib.bib14)]。环路整形的重要性在于它在各个工业领域中的持续应用，包括过程控制
    [Morari 和 Zafiriou, [1989](https://arxiv.org/html/2410.19811v1#bib.bib49)]，航空航天
    [Blight 等人, [1994](https://arxiv.org/html/2410.19811v1#bib.bib7)] 和机电一体化 [Ohnishi,
    [1996](https://arxiv.org/html/2410.19811v1#bib.bib54)]，展示了它在应对现实世界控制挑战中的有效性。然而，所有现有的控制设计方法仍然严重依赖领域专业知识和人类直觉。ControlAgent
    在通过整合 LLM 代理和人类专家知识实现控制系统设计自动化方面迈出了重要的一步。
- en: LLMs for Engineering Design
  id: totrans-254
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 工程设计中的 LLMs
- en: LLMs are increasingly being explored across various engineering domains due
    to their versatility and capacity for solving complex tasks. In the domain of
    electric grids, for instance, GridFM [Hamann et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib25)]
    has been introduced as a foundation model capable of addressing a wide range of
    challenges, such as power flow estimation, grid expansion planning, and electricity
    price forecasting. Similarly, an agent-based framework proposed in [Jia et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib30)] leverages techniques such
    as Chain-of-Thought (CoT) and Retrieval-Augmented Generation (RAG) to enhance
    LLMs’ ability to perform power system simulations using previously unseen tools.
    In software engineering, LLM4SE [Hou et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib29)]
    provides a comprehensive survey on the application of LLMs in this domain, showcasing
    their achievements so far while also identifying open challenges and promising
    future research directions. For materials science, models like MatBERT [Trewartha
    et al., [2022](https://arxiv.org/html/2410.19811v1#bib.bib74)], a variant of the
    BERT architecture, and MatSciBERT [Gupta et al., [2022](https://arxiv.org/html/2410.19811v1#bib.bib24)],
    trained on a vast corpus of materials science literature, have set new benchmarks
    in the field. Moreover, Mechanical Design Agent (MDA) [Lu et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib43)]
    demonstrates the use of LLMs for generating CAD models directly from text commands,
    highlighting advancements in automated design processes. In aviation, the RoBERT
    model, fine-tuned for domain-specific tasks, has achieved an impressive 82.8%
    accuracy in knowledge tasks [Nielsen et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib51)],
    demonstrating the potential of LLMs in highly specialized fields.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其多功能性和解决复杂任务的能力，LLM（大型语言模型）正越来越多地在各个工程领域中得到探索。例如，在电网领域，GridFM [Hamann et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib25)]被引入作为一个基础模型，能够解决一系列挑战，如电力流估计、电网扩展规划和电价预测。同样，[Jia
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib30)]提出的基于代理的框架利用了链式思维（Chain-of-Thought,
    CoT）和检索增强生成（Retrieval-Augmented Generation, RAG）等技术，增强了LLM在使用先前未见过的工具进行电力系统仿真时的能力。在软件工程领域，LLM4SE
    [Hou et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib29)]提供了LLM在该领域应用的综合调查，展示了迄今为止的成就，同时也指出了未解决的挑战和有前景的未来研究方向。在材料科学方面，像MatBERT
    [Trewartha et al., [2022](https://arxiv.org/html/2410.19811v1#bib.bib74)]（BERT架构的一个变种）和MatSciBERT
    [Gupta et al., [2022](https://arxiv.org/html/2410.19811v1#bib.bib24)]，这些模型在大量材料科学文献的基础上进行训练，已经在该领域设定了新的基准。此外，机械设计代理（Mechanical
    Design Agent, MDA）[Lu et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib43)]展示了LLM如何直接通过文本命令生成CAD模型，突出了自动化设计过程中的进展。在航空领域，RoBERT模型通过针对特定领域任务进行微调，已经在知识任务中取得了令人印象深刻的82.8%的准确率[Nielsen
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib51)]，展示了LLM在高度专业化领域中的潜力。
- en: LLM Agents
  id: totrans-256
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: LLM代理
- en: The existing research on LLM-based agents can be categorised into single-agent
    and multi-agent systems. The single-agent systems utilize a single LLM for various
    applications such as task planning [Ge et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib20),
    Deng et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib13)], API tool
    using [Schick et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib65), Parisi
    et al., [2022](https://arxiv.org/html/2410.19811v1#bib.bib59), Tang et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib72)],
    web browsing [Nakano et al., [2021](https://arxiv.org/html/2410.19811v1#bib.bib50),
    Deng et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib13)], and reasoning
    [Yao et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib80), Hao et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib26), Xiang et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib77),
    Yu et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib81), Ouyang et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib56)]. On the other hand, multi-agent
    systems such as Generative Agents [Park et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib60)]
    simulates human behaviors by creating a town of 25 agents to study social understanding.
    CAMEL [Li et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib36)] employs
    role-play techniques to study the behaviors and capabilities of a agents society.
    Some works explore the competitive multi-agent systems that involves agents debate,
    negotiate and competition to improve its performance in negotiation skills, question-answering
    [Fu et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib19), Du et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib15), Chan et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib10),
    Liang et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib37)]. ChatDev
    [Qian et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib62)] developed
    a chat-powered software development framework in which specialized agents driven
    by LLMs.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 现有的基于大语言模型（LLM）代理的研究可以分为单代理系统和多代理系统。单代理系统利用单个LLM处理各种应用，例如任务规划[Ge et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib20),
    Deng et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib13)]、API工具使用[Schick
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib65), Parisi et al.,
    [2022](https://arxiv.org/html/2410.19811v1#bib.bib59), Tang et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib72)]、网页浏览[Nakano
    et al., [2021](https://arxiv.org/html/2410.19811v1#bib.bib50), Deng et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib13)]和推理[Yao
    et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib80), Hao et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib26),
    Xiang et al., [2024](https://arxiv.org/html/2410.19811v1#bib.bib77), Yu et al.,
    [2024](https://arxiv.org/html/2410.19811v1#bib.bib81), Ouyang et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib56)]。另一方面，多代理系统如生成代理[Park
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib60)]通过创建一个由25个代理组成的城镇来模拟人类行为，研究社会理解。CAMEL[Li
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib36)]利用角色扮演技术研究代理社会的行为和能力。一些研究探索了竞争性多代理系统，这些系统涉及代理之间的辩论、谈判和竞争，以提高其在谈判技巧、问答[Fu
    et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib19), Du et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib15),
    Chan et al., [2023](https://arxiv.org/html/2410.19811v1#bib.bib10), Liang et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib37)]中的表现。ChatDev[Qian et al.,
    [2023](https://arxiv.org/html/2410.19811v1#bib.bib62)]开发了一个基于聊天的开发框架，其中由LLM驱动的专用代理进行软件开发。
- en: B.2 More Background on Classic Control
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.2 经典控制的更多背景
- en: Here we review a few control-theoretic concepts that are crucial for classic
    control design. A fundamental requirement in most control engineering applications
    is closed-loop stability [Goodwin et al., [2001](https://arxiv.org/html/2410.19811v1#bib.bib23),
    Boyd and Barratt, [1991](https://arxiv.org/html/2410.19811v1#bib.bib8)]. For an
    LTI system with a transfer function $G(s)$, it is considered to be stable if all
    poles of the transfer function (i.e., the roots of the denominator) have negative
    real parts. The closed-loop stability means that the closed-loop transfer function
    from the reference signal $r(t)$ to the output signal $y(t)$ has to be stable.
    In the control language, the sensitivity function and the complementary sensitivity
    function are both required to be stable. Mathematically, we require all the roots
    of $1+G(s)C(s)=0$ to have strictly negative real parts.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们回顾了一些对经典控制设计至关重要的控制理论概念。大多数控制工程应用中的一个基本要求是闭环稳定性[Goodwin et al., [2001](https://arxiv.org/html/2410.19811v1#bib.bib23),
    Boyd and Barratt, [1991](https://arxiv.org/html/2410.19811v1#bib.bib8)]。对于一个具有传递函数$G(s)$的线性时不变（LTI）系统，如果所有传递函数的极点（即分母的根）具有负实部，则认为该系统是稳定的。闭环稳定性意味着从参考信号$r(t)$到输出信号$y(t)$的闭环传递函数必须是稳定的。在控制语言中，灵敏度函数和互补灵敏度函数都要求是稳定的。从数学上讲，我们要求$1+G(s)C(s)=0$的所有根的实部严格为负。
- en: For a stable LTI system, the settling time $T_{s}$ is the time for the output
    to converge within $\pm 2\%$ of the steady-state value given that the input is
    a step function. Slightly different definitions are sometimes used, e.g. 5% or
    1% settling times. Since PIDtune uses the 2% settling time as default, we also
    adopt 2% settling time in our study. The settling time is one main measure for
    the system speed of response.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 对于稳定的LTI系统，稳定时间$T_{s}$是输出在输入为阶跃函数的情况下，收敛到稳态值的$\pm 2\%$范围内所需的时间。有时也会使用稍微不同的定义，例如5%或1%的稳定时间。由于PIDtune默认使用2%的稳定时间，我们在研究中也采用了2%的稳定时间。稳定时间是衡量系统响应速度的一个主要指标。
- en: 'For a stable LTI system, the phase margin is the amount of allowable variation
    in the phase of the plant before the closed-loop becomes unstable, and the gain
    margin is the amount of allowable variation in the gain of the plant before the
    closed-loop becomes unstable. As shown in Figure [4](https://arxiv.org/html/2410.19811v1#S4.F4
    "Figure 4 ‣ 4 ControlAgent ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise"), phase margin can be determined
    from Bode plots. Phase margin is typically viewed as the most important robustness
    metric for classic control design.'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '对于稳定的LTI系统，幅度裕度是植物相位允许变化的量，直到闭环变得不稳定，而增益裕度是植物增益允许变化的量，直到闭环变得不稳定。如图[4](https://arxiv.org/html/2410.19811v1#S4.F4
    "Figure 4 ‣ 4 ControlAgent ‣ ControlAgent: Automating Control System Design via
    Novel Integration of LLM Agents and Domain Expertise")所示，幅度裕度可以从Bode图中确定。幅度裕度通常被视为经典控制设计中最重要的鲁棒性指标。'
- en: Appendix C More on Experimental Study
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录C 更多实验研究内容
- en: C.1 More on the Experimental Setup
  id: totrans-263
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C.1 实验设置的更多内容
- en: LLM-based Baselines.
  id: totrans-264
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 基于LLM的基准方法。
- en: 'We evaluate four LLM-based baseline approaches: zero-shot prompting, zero-shot
    Chain-of-Thought (CoT), few-shot, and few-shot CoT. For the few-shot baselines,
    we provide two demonstration examples tailored to the specific task type. For
    instance, in the case of first-order unstable system design, the few-shot setting
    includes two examples demonstrating successful controller designs for unstable
    first-order systems, along with the associated control design criteria. In the
    few-shot CoT setting, we further include detailed reasoning steps to illustrate
    the process of designing a successful controller for the given demonstration examples.
    A complete example of the few-shot CoT prompt is provided in Appendix [E.2](https://arxiv.org/html/2410.19811v1#A5.SS2
    "E.2 Full Prompts for Baselines ‣ Appendix E Prompt Design ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise").
    All LLM-based baselines are implemented using GPT-4o, with model hyperparameter
    settings detailed in Table [5](https://arxiv.org/html/2410.19811v1#A3.T5 "Table
    5 ‣ LLM hyperparameters. ‣ C.1 More on the Experimental Setup ‣ Appendix C More
    on Experimental Study ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise").'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '我们评估了四种基于LLM的基准方法：零-shot提示、零-shot思维链（CoT）、少-shot和少-shot CoT。在少-shot基准方法中，我们提供了针对特定任务类型的两个示范例子。例如，在一阶不稳定系统设计的情况下，少-shot设置包括两个例子，展示了成功的控制器设计，适用于不稳定的一阶系统，并附有相关的控制设计标准。在少-shot
    CoT设置中，我们进一步包含了详细的推理步骤，展示了为给定示范例子设计成功控制器的过程。少-shot CoT提示的完整示例见附录[E.2](https://arxiv.org/html/2410.19811v1#A5.SS2
    "E.2 Full Prompts for Baselines ‣ Appendix E Prompt Design ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")。所有基于LLM的基准方法均使用GPT-4o实现，模型超参数设置详见表格[5](https://arxiv.org/html/2410.19811v1#A3.T5
    "Table 5 ‣ LLM hyperparameters. ‣ C.1 More on the Experimental Setup ‣ Appendix
    C More on Experimental Study ‣ ControlAgent: Automating Control System Design
    via Novel Integration of LLM Agents and Domain Expertise")。'
- en: Control Toolbox-based Baseline.
  id: totrans-266
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 基于控制工具箱的基准方法。
- en: 'We use the widely employed control design toolbox PIDtune as a baseline, which
    provides various settings for tuning PID controllers for linear and higher-order
    systems. To ensure a fair comparison, we incorporate control domain knowledge
    to specify appropriate inputs, such as phase margin and crossover frequency, to
    PIDtune, enabling it to achieve the desired control design criteria in a single
    step. Specifically, we use two distinct configurations to establish PIDtune as
    a baseline: For first and second-order systems (both stable and unstable), PIDtune
    is configured with the desired phase margin and open-loop crossover frequency.
    The phase margin is directly derived from the task requirements, while the crossover
    frequency is determined as $C/T_{s}$, where $C\in[3,5]$ is a constant, and $T_{s}$
    is the required settling time. For each trial, $C$ and $T_{s}$ are randomly sampled
    within their specified ranges to align with the design specifications. For higher-order
    systems, the relationship between the crossover frequency and the settling time
    $T_{s}$ is not clear in general. As a result, only the phase margin requirement
    is supplied to PIDtune to optimize the PID gains.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用广泛应用的控制设计工具箱 PIDtune 作为基准，该工具箱为线性和高阶系统的 PID 控制器调优提供了多种设置。为了确保公平比较，我们结合控制领域知识，向
    PIDtune 提供适当的输入参数，如相位裕度和交叉频率，使其能够在一步内实现期望的控制设计标准。具体而言，我们使用两种不同的配置来将 PIDtune 作为基准：对于一阶和二阶系统（包括稳定和不稳定），将
    PIDtune 配置为所需的相位裕度和开环交叉频率。相位裕度直接从任务要求中得出，而交叉频率则通过公式 $C/T_{s}$ 确定，其中 $C\in[3,5]$
    为常数，$T_{s}$ 为所需的稳态时间。在每次试验中，$C$ 和 $T_{s}$ 都在各自的范围内随机采样，以符合设计规范。对于高阶系统，交叉频率与稳态时间
    $T_{s}$ 之间的关系通常不明确。因此，仅提供相位裕度要求给 PIDtune 以优化 PID 增益。
- en: Parameter Setup for ControlAgent.
  id: totrans-268
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ControlAgent 的参数设置。
- en: In ControlAgent, the maximum number of iterations is configured based on the
    difficulty of the task. For relatively straightforward tasks, such as stable first-order
    and stable second-order systems, the maximum number of iterations is set to 10\.
    For more challenging tasks, including first-order systems with delay, unstable
    first-order systems, and unstable second-order systems, the maximum iteration
    count is increased to 20\. Finally, for the most difficult tasks, such as higher-order
    systems, the maximum number of iterations is set to 30 to allow for additional
    refinement and ensure that the desired control criteria are met.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ControlAgent 中，最大迭代次数根据任务的难度进行配置。对于相对简单的任务，如稳定的一级和二级系统，最大迭代次数设置为 10。对于更具挑战性的任务，包括带延迟的一阶系统、不稳定的一阶系统和不稳定的二阶系统，最大迭代次数增加到
    20。最后，对于最难的任务，如高阶系统，最大迭代次数设置为 30，以便进行额外的优化，并确保满足期望的控制标准。
- en: LLM hyperparameters.
  id: totrans-270
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: LLM 超参数。
- en: 'Table [5](https://arxiv.org/html/2410.19811v1#A3.T5 "Table 5 ‣ LLM hyperparameters.
    ‣ C.1 More on the Experimental Setup ‣ Appendix C More on Experimental Study ‣
    ControlAgent: Automating Control System Design via Novel Integration of LLM Agents
    and Domain Expertise") presents the hyperparameter settings used for each LLM
    model in this study, including model versions, temperature settings, and maximum
    token limits.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '表 [5](https://arxiv.org/html/2410.19811v1#A3.T5 "Table 5 ‣ LLM hyperparameters.
    ‣ C.1 More on the Experimental Setup ‣ Appendix C More on Experimental Study ‣
    ControlAgent: Automating Control System Design via Novel Integration of LLM Agents
    and Domain Expertise") 展示了本研究中每个 LLM 模型的超参数设置，包括模型版本、温度设置和最大令牌限制。'
- en: '| Model | Hyperparameters |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| 模型 | 超参数 |'
- en: '| GPT-4o | model = gpt-4o-0806, temperature = 0, max_tokens = 1024 |'
  id: totrans-273
  prefs: []
  type: TYPE_TB
  zh: '| GPT-4o | model = gpt-4o-0806, temperature = 0, max_tokens = 1024 |'
- en: '| GPT-4-turbo | model = gpt-4-turbo, temperature = 0, max_tokens = 1024 |'
  id: totrans-274
  prefs: []
  type: TYPE_TB
  zh: '| GPT-4-turbo | model = gpt-4-turbo, temperature = 0, max_tokens = 1024 |'
- en: '| GPT-3.5-turbo | model = gpt-3.5-turbo-0125, temperature = 0, max_tokens =
    1024 |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| GPT-3.5-turbo | model = gpt-3.5-turbo-0125, temperature = 0, max_tokens =
    1024 |'
- en: '| Claude-3.5 | model = claude-3-5-sonnet-20240620, temperature = 1, max_tokens
    = 1024 |'
  id: totrans-276
  prefs: []
  type: TYPE_TB
  zh: '| Claude-3.5 | model = claude-3-5-sonnet-20240620, temperature = 1, max_tokens
    = 1024 |'
- en: '| Gemini Pro 1.5 | model = gemini-1.5-pro, temperature = 1, max_tokens = 8192
    |'
  id: totrans-277
  prefs: []
  type: TYPE_TB
  zh: '| Gemini Pro 1.5 | model = gemini-1.5-pro, temperature = 1, max_tokens = 8192
    |'
- en: 'Table 5: Hyperparameter configurations for each LLM model used in this study.'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 表 5：本研究中每个 LLM 模型的超参数配置。
- en: C.2 Evaluation Metric
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C.2 评估指标
- en: Average Successful Rate
  id: totrans-280
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 平均成功率
- en: Suppose for each control task, our evaluation dataset consists of $N$ sample
    systems and the associated predefined criteria, such as stability, phase margin,
    settling time. Let $S_{i,j}$ denote the outcome of the $j$-th trial for the $i$-th
    system, where $S_{i,j}=1$ if the design is successful and $S_{i,j}=0$ otherwise.
    The averaged successful rate for trial $j$ is computed as
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 假设对于每个控制任务，我们的评估数据集由$N$个样本系统及其相关的预定义标准组成，例如稳定性、相位裕度、稳定时间等。令$S_{i,j}$表示第$i$个系统的第$j$次试验结果，其中$S_{i,j}=1$表示设计成功，$S_{i,j}=0$表示设计失败。第$j$次试验的平均成功率计算为：
- en: '|  | $\text{ASR}_{j}=\frac{1}{N}\sum_{i=1}^{N}S_{i,j},$ |  |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{ASR}_{j}=\frac{1}{N}\sum_{i=1}^{N}S_{i,j},$ |  |'
- en: and the overall ASR across all $T$ trials is given by
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 所有$T$次试验的总体ASR由以下公式给出：
- en: '|  | $\text{ASR}=\frac{1}{T}\sum_{j=1}^{T}S_{j}.$ |  |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{ASR}=\frac{1}{T}\sum_{j=1}^{T}S_{j}.$ |  |'
- en: This metric provides insight into the average performance of the controller
    design over multiple trials for each system, reflecting its consistency.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 该指标提供了对每个系统多次试验中控制器设计的平均性能的洞察，反映了其一致性。
- en: Aggregate Successful Rate
  id: totrans-286
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 聚合成功率
- en: 'This metric evaluates success on a system-by-system basis, where a system is
    considered successfully designed if at least one of the $T$ independent trials
    results in a successful design. Specifically, the aggregated success for system
    $i$ is:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 该指标按系统逐一评估成功率，如果系统中至少有一次独立试验成功，则认为该系统设计成功。具体地，系统$i$的汇总成功率为：
- en: '|  | $\text{AgSR}_{i}=\begin{cases}1&\text{if }\sum_{j=1}^{T}S_{i,j}>0,\\ 0&\text{otherwise
    }.\end{cases}$ |  | (C.1) |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{AgSR}_{i}=\begin{cases}1&\text{如果}\sum_{j=1}^{T}S_{i,j}>0,\\ 0&\text{否则}.\end{cases}$
    |  | (C.1)'
- en: The overall AgSR across all systems is then computed as
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 所有系统的总体AgSR计算公式为：
- en: '|  | $\text{AgSR}=\frac{1}{N}\sum_{i=1}^{N}\text{AgSR}_{i}.$ |  |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{AgSR}=\frac{1}{N}\sum_{i=1}^{N}\text{AgSR}_{i}.$ |  |'
- en: This metric is generally higher than the ASR since it only requires one successful
    trial per system for the entire system to be considered a success. It reflects
    the best controller design for each system, providing a more lenient evaluation
    of the controller’s overall performance.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 这个指标通常高于ASR，因为它只要求每个系统有一次成功的试验，整个系统才算成功。它反映了每个系统的最佳控制器设计，提供了对控制器整体性能的更宽松评估。
- en: In the experimental study, for each control task, we have $N=50$ and we ran
    each control tasks for five trails ($T=5$) for both ControlAgent and baseline
    methods.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在实验研究中，对于每个控制任务，我们有$N=50$，并且对ControlAgent和基准方法分别进行了五次试验（$T=5$）。
- en: C.3 More Experimental Results
  id: totrans-293
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C.3 更多实验结果
- en: C.3.1 More Results on AgSR
  id: totrans-294
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: C.3.1 AgSR的更多结果
- en: 'Table [6](https://arxiv.org/html/2410.19811v1#A3.T6 "Table 6 ‣ ControlAgent
    consistently outperforms all baseline methods. ‣ C.3.1 More Results on AgSR ‣
    C.3 More Experimental Results ‣ Appendix C More on Experimental Study ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise") shows the AgSR of ControlAgent and various baseline methods on the
    ControlEval benchmark. The best results for each task are highlighted in bold.
    Our key observations are given below.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 表[6](https://arxiv.org/html/2410.19811v1#A3.T6 "表6 ‣ ControlAgent始终优于所有基准方法。
    ‣ C.3.1 AgSR的更多结果 ‣ C.3 更多实验结果 ‣ 附录C 更多实验研究 ‣ ControlAgent：通过LLM代理和领域专业知识的新颖集成自动化控制系统设计")展示了ControlAgent与各种基准方法在ControlEval基准上的AgSR。每个任务的最佳结果已用粗体标出。我们的主要观察结果如下。
- en: ControlAgent consistently outperforms all baseline methods.
  id: totrans-296
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: ControlAgent始终优于所有基准方法。
- en: ControlAgent achieves significantly higher AgSR across all control tasks compared
    to both LLM-based and traditional toolbox-based baselines. This superior performance
    is evident not only for simpler first-order and second-order stable systems but
    also for more complex cases, such as unstable and higher-order systems. While
    PIDtune performs well for first-order and second-order stable systems, as well
    as first-order systems with time delay, it struggles in more challenging scenarios
    like first-order unstable, second-order unstable, and higher-order systems. In
    these cases, ControlAgent’s effectiveness becomes more apparent, especially as
    the complexity of the problem increases.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: ControlAgent在所有控制任务中相较于基于LLM和传统工具箱的基准方法，取得了显著更高的AgSR。这一卓越表现不仅体现在简单的一级和二级稳定系统上，还体现在更复杂的情况中，如不稳定系统和高阶系统。虽然PIDtune在一级和二级稳定系统以及具有时延的一级系统中表现良好，但在更具挑战性的场景中，如一级不稳定系统、二级不稳定系统和高阶系统，它的表现较差。在这些情况下，ControlAgent的有效性变得更加显著，尤其是随着问题复杂度的增加。
- en: It is important to note that because of the inherent randomness in the answers
    generated by LLMs, individual runs of ControlAgent may yield different outcomes.
    However, when looking at aggregate results across multiple iterations, ControlAgent
    achieves 100% success across all design problems except for higher-order systems,
    where it still achieves an impressive 96%. While this falls short of 100%, it
    is a significantly better result than any other toolbox-based method and LLM-based
    baselines, and given the difficulty of higher-order system design, this accuracy
    is very promising.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，由于 LLMs 生成答案中固有的随机性，ControlAgent 的单次运行可能会产生不同的结果。然而，当我们查看多次迭代的汇总结果时，ControlAgent
    在除高阶系统外的所有设计问题上都达到了 100% 的成功率，在高阶系统中，尽管未能达到 100%，但仍取得了令人印象深刻的 96%。虽然这一结果未能达到 100%，但它比任何其他基于工具箱的方法和
    LLM 基准方法都要好得多，鉴于高阶系统设计的难度，这一准确率非常有前景。
- en: '| System Type | 1st-ord stb | 2nd-ord stb | 1st-ord ustb | 2nd-ord ustb | w/
    dly | Hgr-ord |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| System Type | 一阶稳定 | 二阶稳定 | 一阶不稳定 | 二阶不稳定 | 带滞后 | 高阶 |'
- en: '| Response Mode | fast | moderate | slow | fast | moderate | slow | (-) | (-)
    | (-) | (-) |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| Response Mode | 快速 | 中等 | 慢速 | 快速 | 中等 | 慢速 | (-) | (-) | (-) | (-) |'
- en: '| Zero-shot | 36.0 | 56.0 | 32.0 | 36.0 | 46.0 | 26.0 | 14.0 | 2.0 | 48.0 |
    6.0 |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| Zero-shot | 36.0 | 56.0 | 32.0 | 36.0 | 46.0 | 26.0 | 14.0 | 2.0 | 48.0 |
    6.0 |'
- en: '| Zero-shot CoT | 66.0 | 12.0 | 2.0 | 34.0 | 48.0 | 40.0 | 14.0 | 2.0 | 38.0
    | 24.0 |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| Zero-shot CoT | 66.0 | 12.0 | 2.0 | 34.0 | 48.0 | 40.0 | 14.0 | 2.0 | 38.0
    | 24.0 |'
- en: '| Few-shot | 32.0 | 58.0 | 50.0 | 44.0 | 38.0 | 38.0 | 28.0 | 52.0 | 36.0 |
    28.0 |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| Few-shot | 32.0 | 58.0 | 50.0 | 44.0 | 38.0 | 38.0 | 28.0 | 52.0 | 36.0 |
    28.0 |'
- en: '| Few-shot CoT | 36.0 | 66.0 | 68.0 | 26.0 | 40.0 | 60.0 | 18.0 | 62.0 | 60.0
    | 36.0 |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| Few-shot CoT | 36.0 | 66.0 | 68.0 | 26.0 | 40.0 | 60.0 | 18.0 | 62.0 | 60.0
    | 36.0 |'
- en: '| PIDtune | 94.0 | 100.0 | 100.0 | 98.0 | 100.0 | 100.0 | 68.0 | 42.0 | 100.0
    | 50.0 |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| PIDtune | 94.0 | 100.0 | 100.0 | 98.0 | 100.0 | 100.0 | 68.0 | 42.0 | 100.0
    | 50.0 |'
- en: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 100.0 | 100.0 | 100.0 | 100.0
    | 100.0 | 96.0 |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 100.0 | 100.0 | 100.0 | 100.0
    | 100.0 | 96.0 |'
- en: 'Table 6: AgSR (%) of baseline methods and ControlAgent.'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6：基准方法和 ControlAgent 的 AgSR（%）。
- en: C.3.2 ASR vs AgSR
  id: totrans-308
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: C.3.2 ASR 与 AgSR
- en: 'In Figure [7](https://arxiv.org/html/2410.19811v1#A3.F7 "Figure 7 ‣ C.3.2 ASR
    vs AgSR ‣ C.3 More Experimental Results ‣ Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise"), we present the ASR and AgSR results for ControlAgent
    and other baseline methods across first-order and second-order stable systems.
    ControlAgent consistently outperforms all other methods in both ASR and AgSR metrics.
    While PIDTune delivers results comparable to ControlAgent in these cases, all
    other methods show significantly lower ASR values. However, their AgSR is noticeably
    higher than their ASR, which can be attributed to the inherent randomness in LLM-generated
    responses. This highlights the benefit of aggregate success, where the variability
    of LLM outputs improves performance over multiple iterations.'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '在图 [7](https://arxiv.org/html/2410.19811v1#A3.F7 "Figure 7 ‣ C.3.2 ASR vs AgSR
    ‣ C.3 More Experimental Results ‣ Appendix C More on Experimental Study ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise") 中，我们展示了 ControlAgent 和其他基准方法在一阶和二阶稳定系统中的 ASR 和 AgSR 结果。ControlAgent
    在 ASR 和 AgSR 两项指标上始终优于所有其他方法。虽然 PIDTune 在这些情况下与 ControlAgent 的结果相当，但所有其他方法的 ASR
    值明显较低。然而，它们的 AgSR 值明显高于 ASR，这可以归因于 LLM 生成的答案中的固有随机性。这突出了汇总成功的优势，LLM 输出的变异性在多次迭代中提高了性能。'
- en: '![Refer to caption](img/af9ca8f6603e413410b8684289d98a44.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![参见图注](img/af9ca8f6603e413410b8684289d98a44.png)'
- en: 'Figure 7: ASR and AgSR for different methods on first-order and second-order
    stable systems (averaged successful rate for three response speed types).'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7：不同方法在一阶和二阶稳定系统上的 ASR 和 AgSR（针对三种响应速度类型的平均成功率）。
- en: 'As we shift to more challenging unstable systems, Figure [8](https://arxiv.org/html/2410.19811v1#A3.F8
    "Figure 8 ‣ C.3.2 ASR vs AgSR ‣ C.3 More Experimental Results ‣ Appendix C More
    on Experimental Study ‣ ControlAgent: Automating Control System Design via Novel
    Integration of LLM Agents and Domain Expertise") further illustrates ControlAgent’s
    increasing effectiveness. In these cases, the performance of the other methods
    declines sharply compared to their results on stable systems, as the complexity
    of the control design increases. Interestingly, this is where the limitations
    of randomness in LLMs become evident, both ASR and AgSR remain low for other methods,
    as even multiple iterations fail to improve their performance meaningfully. In
    contrast, few-shot-cot outperforms PIDTune in these harder scenarios, showcasing
    the potential of in-context learning when dealing with complex control tasks.'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '当我们转向更加具有挑战性的、不稳定的系统时，图[8](https://arxiv.org/html/2410.19811v1#A3.F8 "Figure
    8 ‣ C.3.2 ASR vs AgSR ‣ C.3 More Experimental Results ‣ Appendix C More on Experimental
    Study ‣ ControlAgent: Automating Control System Design via Novel Integration of
    LLM Agents and Domain Expertise")进一步展示了ControlAgent在这些情况下的效果提升。在这些情形下，随着控制设计复杂度的增加，其他方法的表现相较于稳定系统的结果急剧下降。有趣的是，这正是LLMs中随机性局限性的体现，尽管进行了多次迭代，但ASR和AgSR在其他方法上始终较低，且无法显著提升其性能。相比之下，few-shot-cot在这些更具挑战性的场景中超越了PIDTune，展示了在处理复杂控制任务时上下文学习的潜力。'
- en: '![Refer to caption](img/15a75385946f26c7f9f598ce78e93538.png)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明文字](img/15a75385946f26c7f9f598ce78e93538.png)'
- en: 'Figure 8: ASR and AgSR for different methods on first-order and second-order
    unstable systems (averaged successful rate for three response speed types).'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 图8：不同方法在一级和二级不稳定系统上的ASR和AgSR（针对三种响应速度类型的平均成功率）。
- en: 'In Figure [9](https://arxiv.org/html/2410.19811v1#A3.F9 "Figure 9 ‣ C.3.2 ASR
    vs AgSR ‣ C.3 More Experimental Results ‣ Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise"), we examine first-order systems with delay and higher-order
    systems. For the first-order systems with delay, the performance trends mirror
    those of stable systems, with ControlAgent and PIDtune maintaining their strong
    lead. However, for higher-order systems, the accuracy of all methods, except ControlAgent,
    drops significantly. Despite the increased complexity of higher-order systems,
    ControlAgent continues to demonstrate impressive performance, highlighting its
    ability to handle even the most difficult control design problems. This underscores
    ControlAgent’s robustness and adaptability, making it a clear leader among the
    tested methods.'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '在图[9](https://arxiv.org/html/2410.19811v1#A3.F9 "Figure 9 ‣ C.3.2 ASR vs AgSR
    ‣ C.3 More Experimental Results ‣ Appendix C More on Experimental Study ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")中，我们考察了具有延迟的一级系统和更高阶系统。对于具有延迟的一级系统，其性能趋势与稳定系统相似，ControlAgent和PIDtune保持着强大的领先优势。然而，对于更高阶的系统，除了ControlAgent之外，所有方法的准确性显著下降。尽管高阶系统的复杂度增加，ControlAgent依然展示了令人印象深刻的表现，突显其处理最复杂控制设计问题的能力。这也强调了ControlAgent的鲁棒性和适应性，使其在测试方法中处于领先地位。'
- en: '![Refer to caption](img/e01b975058202287c49178966b9742cd.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明文字](img/e01b975058202287c49178966b9742cd.png)'
- en: 'Figure 9: ASR and AgSR for different methods on first-order with delay and
    higher order systems.'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图9：不同方法在带延迟的一级系统和更高阶系统上的ASR和AgSR。
- en: '| System Type | 1st-ord stb | 2nd-ord stb | 1st-ord ustb | 2nd-ord ustb | w
    dly | Hgr-ord stb | Hgr-ord ustb |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| 系统类型 | 一阶稳定 | 二阶稳定 | 一阶不稳定 | 二阶不稳定 | 带延迟 | 高阶稳定 | 高阶不稳定 |'
- en: '| Response Mode | fast | moderate | slow | fast | moderate | slow | fast |
    moderate | slow | fast | moderate | slow | (-) | (-) |  |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| 响应模式 | 快速 | 中等 | 慢速 | 快速 | 中等 | 慢速 | 快速 | 中等 | 慢速 | 快速 | 中等 | 慢速 | (-) |
    (-) |  |'
- en: '| 0-shot | 8.0 | 19.2 | 10.0 | 14.0 | 18.4 | 13.2 | 5.2 | 5.6 | 0.8 | 0.4 |
    0.4 | 2.4 | 15.6 | 4.0 | 0.0 |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| 0-shot | 8.0 | 19.2 | 10.0 | 14.0 | 18.4 | 13.2 | 5.2 | 5.6 | 0.8 | 0.4 |
    0.4 | 2.4 | 15.6 | 4.0 | 0.0 |'
- en: '| 0-shot CoT | 26.8 | 3.2 | 0.4 | 12.4 | 18.8 | 12.0 | 4.4 | 6.4 | 2.8 | 0.8
    | 0.0 | 0.4 | 8.8 | 16.0 | 0.0 |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| 0-shot CoT | 26.8 | 3.2 | 0.4 | 12.4 | 18.8 | 12.0 | 4.4 | 6.4 | 2.8 | 0.8
    | 0.0 | 0.4 | 8.8 | 16.0 | 0.0 |'
- en: '| 2-shot | 12.4 | 19.6 | 15.6 | 12.0 | 12.4 | 15.2 | 14.0 | 26.8 | 0.4 | 29.2
    | 4.0 | 0.8 | 11.6 | 18.4 | 5.6 |'
  id: totrans-322
  prefs: []
  type: TYPE_TB
  zh: '| 2-shot | 12.4 | 19.6 | 15.6 | 12.0 | 12.4 | 15.2 | 14.0 | 26.8 | 0.4 | 29.2
    | 4.0 | 0.8 | 11.6 | 18.4 | 5.6 |'
- en: '| 2-shot CoT | 11.2 | 21.6 | 21.2 | 7.6 | 14.0 | 25.6 | 6.0 | 54.4 | 16.0 |
    22.4 | 3.6 | 1.2 | 16.0 | 22.4 | 10.4 |'
  id: totrans-323
  prefs: []
  type: TYPE_TB
  zh: '| 2-shot CoT | 11.2 | 21.6 | 21.2 | 7.6 | 14.0 | 25.6 | 6.0 | 54.4 | 16.0 |
    22.4 | 3.6 | 1.2 | 16.0 | 22.4 | 10.4 |'
- en: '| PIDtune | 58.4 | 89.6 | 84.0 | 84.4 | 98.0 | 82.0 | 32.4 | 3.2 | 0.0 | 11.2
    | 0.0 | 0.0 | 100.0 | 48.0 | 60.0 |'
  id: totrans-324
  prefs: []
  type: TYPE_TB
  zh: '| PIDtune | 58.4 | 89.6 | 84.0 | 84.4 | 98.0 | 82.0 | 32.4 | 3.2 | 0.0 | 11.2
    | 0.0 | 0.0 | 100.0 | 48.0 | 60.0 |'
- en: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 98.8 | 90.8 | 97.2 | 98.0
    | 90.8 | 96.8 | 90.8 | 94.8 | 99.6 | 72.0 | 61.6 |'
  id: totrans-325
  prefs: []
  type: TYPE_TB
  zh: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 98.8 | 90.8 | 97.2 | 98.0
    | 90.8 | 96.8 | 90.8 | 94.8 | 99.6 | 72.0 | 61.6 |'
- en: 'Table 7: ASR (%) of baseline methods and ControlAgent on ControlEval. The best
    result for each task is highlighted in bold. The results demonstrate that the
    ControlAgent outperforms all other LLM-based and toolbox-based baseline methods
    across all categories.'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 表 7：基准方法和ControlAgent在ControlEval上的ASR（%）。每个任务的最佳结果以粗体突出显示。结果表明，ControlAgent在所有类别中都优于其他所有基于LLM和工具箱的基准方法。
- en: C.4 Gain Margin Consideration
  id: totrans-327
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C.4 增益裕度考量
- en: 'It is also important to highlight that control design can be evaluated using
    various metrics, with settling time and phase margin being two of the key ones
    we used. In this section, we further explore the effectiveness of ControlAgent
    by evaluating another important robustness metric: gain margin. For this analysis,
    we focus on comparing the designs produced by ControlAgent and PIDtune, our two
    best-performing methods, both of which already satisfy the settling time and phase
    margin requirements. We then examine how well their designs perform in terms of
    gain margin.'
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要特别强调的是，控制设计可以通过各种指标进行评估，其中稳态时间和相位裕度是我们使用的两个关键指标。在本节中，我们进一步通过评估另一个重要的鲁棒性指标——增益裕度，来探索ControlAgent的有效性。为了进行这项分析，我们将重点比较ControlAgent和PIDtune这两种最佳表现方法所产生的设计，它们都已经满足了稳态时间和相位裕度的要求。接着，我们将考察它们的设计在增益裕度方面的表现。
- en: 'Typically, a good control design should have a gain margin within $\pm 6$ dB
    to ensure robustness against model uncertainty. As shown in Table [8](https://arxiv.org/html/2410.19811v1#A3.T8
    "Table 8 ‣ C.4 Gain Margin Consideration ‣ Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise"), ControlAgent consistently outperforms PIDtune across
    nearly all scenarios, with the only exception being the first-order system with
    time delay. Notably, when comparing Table [8](https://arxiv.org/html/2410.19811v1#A3.T8
    "Table 8 ‣ C.4 Gain Margin Consideration ‣ Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise") with Table [2](https://arxiv.org/html/2410.19811v1#S6.T2
    "Table 2 ‣ 6 Experimental Results ‣ ControlAgent: Automating Control System Design
    via Novel Integration of LLM Agents and Domain Expertise"), we observe an interesting
    trend: every ControlAgent design that meets the settling time and phase margin
    requirements also inherently satisfies the gain margin criterion. This is a crucial
    result, as gain margin is typically another requirement that control engineers
    strive to achieve for robust designs.'
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个好的控制设计应具有$\pm 6$ dB的增益裕度，以确保其对模型不确定性的鲁棒性。如表[8](https://arxiv.org/html/2410.19811v1#A3.T8
    "表 8 ‣ C.4 增益裕度考量 ‣ 附录 C 更多实验研究 ‣ ControlAgent：通过LLM代理与领域知识的创新集成自动化控制系统设计")所示，ControlAgent在几乎所有场景中始终优于PIDtune，唯一的例外是带时延的一阶系统。值得注意的是，通过比较表[8](https://arxiv.org/html/2410.19811v1#A3.T8
    "表 8 ‣ C.4 增益裕度考量 ‣ 附录 C 更多实验研究 ‣ ControlAgent：通过LLM代理与领域知识的创新集成自动化控制系统设计")与表[2](https://arxiv.org/html/2410.19811v1#S6.T2
    "表 2 ‣ 6 实验结果 ‣ ControlAgent：通过LLM代理与领域知识的创新集成自动化控制系统设计")，我们观察到一个有趣的趋势：每个符合稳态时间和相位裕度要求的ControlAgent设计也本质上满足了增益裕度标准。这是一个至关重要的结果，因为增益裕度通常是控制工程师力求实现的另一个鲁棒设计要求。
- en: In contrast, PIDtune’s performance drops significantly when evaluated by gain
    margin, especially in more complex systems such as unstable and higher-order systems.
    This widening performance gap underscores ControlAgent’s superior ability not
    only to meet the basic design requirements but also to inherently balance robustness,
    making its designs more resilient to model uncertainties.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，当通过增益裕度评估时，PIDtune的表现显著下降，尤其是在更复杂的系统中，如不稳定系统和高阶系统。这个性能差距的扩大突显了ControlAgent的卓越能力，不仅能满足基本的设计要求，还能本质上平衡鲁棒性，使其设计在面对模型不确定性时更加稳健。
- en: '| System Type | 1st-ord stb | 2nd-ord stb | 1st-ord ustb | 2nd-ord ustb | w/
    dly | Hgr-ord |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| 系统类型 | 一阶稳定 | 二阶稳定 | 一阶不稳定 | 二阶不稳定 | 带时延 | 高阶 |'
- en: '| Response Mode | fast | moderate | slow | fast | moderate | slow | (-) | (-)
    | (-) | (-) |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| 响应模式 | 快速 | 中等 | 慢速 | 快速 | 中等 | 慢速 | (-) | (-) | (-) | (-) |'
- en: '| PIDtune | 56.0 | 90.4 | 86.4 | 65.2 | 54.8 | 75.2 | 0.0 | 0.0 | 100.0 | 16.0
    |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| PIDtune | 56.0 | 90.4 | 86.4 | 65.2 | 54.8 | 75.2 | 0.0 | 0.0 | 100.0 | 16.0
    |'
- en: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 98.8 | 90.8 | 97.2 | 96.8
    | 97.2 | 82.0 |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| ControlAgent | 100.0 | 100.0 | 100.0 | 100.0 | 98.8 | 90.8 | 97.2 | 96.8
    | 97.2 | 82.0 |'
- en: 'Table 8: ASR of PIDtune and ControlAgent on ControlEval for various system
    types with gain margin as an extra requirement.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 表8：在ControlEval上，PIDtune和ControlAgent在具有增益裕度附加要求的不同系统类型上的ASR。
- en: C.5 Evolution of ControlAgent Design
  id: totrans-336
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: C.5 ControlAgent设计的演变
- en: 'In this subsection, we analyze how ControlAgent’s performance evolves over
    iterations to achieve the desired design. Figure [10](https://arxiv.org/html/2410.19811v1#A3.F10
    "Figure 10 ‣ C.5 Evolution of ControlAgent Design ‣ Appendix C More on Experimental
    Study ‣ ControlAgent: Automating Control System Design via Novel Integration of
    LLM Agents and Domain Expertise") illustrates the simplest case, where ControlAgent
    is tasked with controlling first-order stable systems. Initially, all three response
    modes experience substantial settling time errors. However, these errors decrease
    rapidly, particularly in the slow scenario, which is the easiest to manage. This
    is because a slower system response reduces sensitivity to phase margin violations,
    making it easier to meet performance requirements. The moderate scenario, however,
    requires a few additional iterations to reach the design objectives. As shown
    in the right plot of Figure [10](https://arxiv.org/html/2410.19811v1#A3.F10 "Figure
    10 ‣ C.5 Evolution of ControlAgent Design ‣ Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise"), the fast scenario presents the most challenge,
    with a significant phase margin error early on. However, as the iterations progress,
    ControlAgent successfully reduces both the phase margin and settling time errors,
    demonstrating its ability to optimize system performance even in scenarios where
    there is a clear trade-off between performance and robustness.'
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: '在本小节中，我们分析了ControlAgent的性能如何在迭代过程中演变，以实现预期的设计。图[10](https://arxiv.org/html/2410.19811v1#A3.F10
    "图 10 ‣ C.5 ControlAgent设计的演变 ‣ 附录C 更多实验研究 ‣ ControlAgent: 通过LLM代理与领域专家的新型集成自动化控制系统设计")展示了最简单的情况，其中ControlAgent负责控制一阶稳定系统。最初，所有三种响应模式都经历了显著的稳态时间误差。然而，这些误差迅速减小，尤其是在较慢的场景中，这是最容易管理的。因为较慢的系统响应降低了对相位裕度违反的敏感性，使得更容易满足性能要求。然而，中等速度的场景则需要更多的迭代才能达到设计目标。如图[10](https://arxiv.org/html/2410.19811v1#A3.F10
    "图 10 ‣ C.5 ControlAgent设计的演变 ‣ 附录C 更多实验研究 ‣ ControlAgent: 通过LLM代理与领域专家的新型集成自动化控制系统设计")右图所示，快速场景是最具挑战性的，在初期存在显著的相位裕度误差。然而，随着迭代的进行，ControlAgent成功地减少了相位裕度和稳态时间误差，展示了其在性能与鲁棒性之间有明显权衡的场景中优化系统性能的能力。'
- en: '![Refer to caption](img/7d74aa2554200f48bd28a6f4518b8e5f.png)'
  id: totrans-338
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/7d74aa2554200f48bd28a6f4518b8e5f.png)'
- en: 'Figure 10: The behavior of ControlAgent across iterations for first-order stable
    systems. The left figure shows the change in settling time error, while the right
    figure tracks the phase margin error, both improving over iterations.'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 图10：ControlAgent在一阶稳定系统中跨迭代的行为。左图显示了稳态时间误差的变化，而右图追踪了相位裕度误差，二者均随着迭代的进行而改善。
- en: 'For each scenario, the design requires that the settling time $T_{s}$ falls
    within a specified range, $T_{s}\in[T_{s_{\min}},T_{s_{\max}}]$, and that the
    phase margin $\phi$ meets or exceeds a minimum threshold, $\phi\geq\phi_{\min}$.
    During each iteration, if the settling time is within this range, the steady-state
    error is set to zero. Similarly, if the designed phase margin exceeds the required
    minimum, the phase margin error is set to zero. However, if the designed settling
    time $T_{s}$ exceeds $T_{s_{\max}}$, the steady-state error is computed as:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个场景，设计要求稳态时间$T_{s}$位于指定范围内，$T_{s}\in[T_{s_{\min}},T_{s_{\max}}]$，并且相位裕度$\phi$达到或超过最低阈值，$\phi\geq\phi_{\min}$。在每次迭代中，如果稳态时间位于此范围内，则稳态误差设置为零。类似地，如果设计的相位裕度超过要求的最低值，则相位裕度误差设置为零。然而，如果设计的稳态时间$T_{s}$超过$T_{s_{\max}}$，则稳态误差计算为：
- en: '|  | $\text{Settling Time Error (\%)}=\frac{T_{s}-T_{s_{\max}}}{t_{s_{\max}}-T_{s_{%
    \min}}}\times 100$ |  |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{稳态时间误差(\%)}=\frac{T_{s}-T_{s_{\max}}}{t_{s_{\max}}-T_{s_{% \min}}}\times
    100$ |  |'
- en: 'Conversely, if the settling time is below $T_{s_{\min}}$, the error is calculated
    as:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，如果稳态时间低于$T_{s_{\min}}$，则误差计算为：
- en: '|  | $\text{Settling Time Error (\%)}=\frac{T_{s_{\min}}-T_{s}}{T_{s_{\max}}-T_{s_{%
    \min}}}\times 100$ |  |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{稳态时间误差(\%)}=\frac{T_{s_{\min}}-T_{s}}{T_{s_{\max}}-T_{s_{% \min}}}\times
    100$ |  |'
- en: 'If the designed phase margin falls below $\phi_{\min}$, the phase margin error
    is determined as:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设计的相位裕度低于 $\phi_{\min}$，则相位裕度误差定义为：
- en: '|  | $\text{Phase Margin Error (\%)}=\frac{\phi-\phi_{\min}}{\phi_{\min}}\times
    100$ |  |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{相位裕度误差 (\%)}=\frac{\phi-\phi_{\min}}{\phi_{\min}}\times 100$ |  |'
- en: 'Moving on to more complex systems, Figure [11](https://arxiv.org/html/2410.19811v1#A3.F11
    "Figure 11 ‣ C.5 Evolution of ControlAgent Design ‣ Appendix C More on Experimental
    Study ‣ ControlAgent: Automating Control System Design via Novel Integration of
    LLM Agents and Domain Expertise") shows how ControlAgent’s performance evolves
    when dealing with first-order unstable systems. In this case, both steady-state
    and phase margin errors start out large but gradually decrease as the agent iterates.
    Since unstable systems are more difficult to design for, ControlAgent is given
    up to 20 iterations to find a solution. This extended process highlights the agent’s
    ability to progressively refine system performance and robustness, improving both
    settling time and phase margin simultaneously, even in more challenging environments.'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 转向更复杂的系统，图[11](https://arxiv.org/html/2410.19811v1#A3.F11 "图 11 ‣ C.5 ControlAgent
    设计的演变 ‣ 附录 C 实验研究更多内容 ‣ ControlAgent：通过大规模语言模型 (LLM) 代理和领域专业知识的新颖集成自动化控制系统设计")展示了
    ControlAgent 在处理一阶不稳定系统时，性能如何随迭代演变。在这种情况下，稳态误差和相位裕度误差一开始都很大，但随着代理的迭代，这两个误差逐渐减少。由于不稳定系统更难设计，ControlAgent
    被给予最多 20 次迭代来找到解决方案。这个延长的过程突出了代理逐步优化系统性能和鲁棒性的能力，在更具挑战性的环境中，稳态时间和相位裕度得到了同时改善。
- en: '![Refer to caption](img/e7934a73bacaf33fd9766b2127a52e71.png)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![参考图注](img/e7934a73bacaf33fd9766b2127a52e71.png)'
- en: 'Figure 11: The behavior of ControlAgent across iterations for first-order unstable
    systems. The left figure shows the change in settling time error, while the right
    figure tracks the phase margin error, both improving over iterations.'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11：在第一次迭代中，ControlAgent 对一阶不稳定系统的表现。左侧图表展示了稳定时间误差的变化，而右侧图表追踪了相位裕度误差，随着迭代的进行，两个误差均有改善。
- en: '![Refer to caption](img/7f66ef0054e841de8cb12d910ee8067e.png)'
  id: totrans-349
  prefs: []
  type: TYPE_IMG
  zh: '![参考图注](img/7f66ef0054e841de8cb12d910ee8067e.png)'
- en: 'Figure 12: The behavior of ControlAgent across iterations for second-order
    stable systems. The left figure shows the change in settling time error, while
    the right figure tracks the phase margin error, both improving over iterations.'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12：在第二次迭代中，ControlAgent 对二阶稳定系统的表现。左侧图表展示了稳定时间误差的变化，而右侧图表追踪了相位裕度误差，随着迭代的进行，两个误差均有改善。
- en: 'The complexity increases further when ControlAgent tackles second-order stable
    systems, as shown in Figure [12](https://arxiv.org/html/2410.19811v1#A3.F12 "Figure
    12 ‣ C.5 Evolution of ControlAgent Design ‣ Appendix C More on Experimental Study
    ‣ ControlAgent: Automating Control System Design via Novel Integration of LLM
    Agents and Domain Expertise"). In the fast scenario, while the agent reduces settling
    time error within the first four iterations, this comes at the cost of a temporary
    increase in phase margin error, reflecting the trade-off between performance and
    robustness. However, with additional refinement, ControlAgent manages to bring
    the phase margin back within acceptable limits while still maintaining system
    performance. A similar trend is seen in the moderate scenario. However, unlike
    with first-order stable systems, the slow scenario poses the greatest challenge
    for second-order systems.This is because slower dynamics, while generally making
    a system more stable, reduce the system’s responsiveness to control inputs. As
    a result, the system can become less robust over time, making it harder for the
    controller to maintain the required phase margin.'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 当 ControlAgent 处理二阶稳定系统时，复杂性进一步增加，如图[12](https://arxiv.org/html/2410.19811v1#A3.F12
    "图 12 ‣ C.5 ControlAgent 设计的演变 ‣ 附录 C 实验研究更多内容 ‣ ControlAgent：通过大规模语言模型 (LLM)
    代理和领域专业知识的新颖集成自动化控制系统设计")所示。在快速场景中，虽然代理在前四次迭代内减少了稳定时间误差，但这以相位裕度误差的暂时增加为代价，反映了性能与鲁棒性之间的权衡。然而，通过进一步的优化，ControlAgent
    设法将相位裕度恢复到可接受范围，同时保持系统性能。在适中场景中也观察到类似的趋势。然而，与一阶稳定系统不同，慢速场景对二阶系统构成了最大挑战。这是因为较慢的动态虽然通常使系统更加稳定，但也降低了系统对控制输入的响应能力。因此，系统可能随时间变得不那么鲁棒，导致控制器更难保持所需的相位裕度。
- en: Appendix D More Details on ControlEval
  id: totrans-352
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 D 控制评估的更多细节
- en: 'In this section, we present more details on the construction of ControlEval.
    We first discuss the dynamical models considered in ControlEval in Section [D.1](https://arxiv.org/html/2410.19811v1#A4.SS1
    "D.1 Dynamical System Models ‣ Appendix D More Details on ControlEval ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise"), then the associated performance criteria is discussed in Section
    [D.2](https://arxiv.org/html/2410.19811v1#A4.SS2 "D.2 Performance Criteria ‣ Appendix
    D More Details on ControlEval ‣ ControlAgent: Automating Control System Design
    via Novel Integration of LLM Agents and Domain Expertise"). Finally, we discuss
    the dataset construction in Section [D.3](https://arxiv.org/html/2410.19811v1#A4.SS3
    "D.3 ControlEval Generation Details ‣ Appendix D More Details on ControlEval ‣
    ControlAgent: Automating Control System Design via Novel Integration of LLM Agents
    and Domain Expertise").'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: '在本节中，我们将进一步介绍ControlEval的构建。首先，我们在[D.1](https://arxiv.org/html/2410.19811v1#A4.SS1
    "D.1 Dynamical System Models ‣ Appendix D More Details on ControlEval ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")节中讨论ControlEval中考虑的动态模型，然后在[D.2](https://arxiv.org/html/2410.19811v1#A4.SS2
    "D.2 Performance Criteria ‣ Appendix D More Details on ControlEval ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")节中讨论相关的性能标准。最后，在[D.3](https://arxiv.org/html/2410.19811v1#A4.SS3 "D.3
    ControlEval Generation Details ‣ Appendix D More Details on ControlEval ‣ ControlAgent:
    Automating Control System Design via Novel Integration of LLM Agents and Domain
    Expertise")节中讨论数据集的构建。'
- en: D.1 Dynamical System Models
  id: totrans-354
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: D.1 动态系统模型
- en: 'This section provides a detailed overview of the various types of dynamical
    system models included in ControlEval, such as stable and unstable first-order
    systems, stable and unstable second-order systems, first-order systems with time
    delay, and higher-order systems. As mentioned in the main paper, a general transfer
    function for a dynamical system can be expressed as:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了ControlEval中包含的各种类型的动态系统模型的详细概述，例如稳定和不稳定的一阶系统、稳定和不稳定的二阶系统、带有时间延迟的一阶系统以及高阶系统。如主文中所述，动态系统的通用传递函数可以表示为：
- en: '|  | $G(s)=\frac{Y(s)}{U(s)}=\frac{b_{m}s^{m}+b_{m-1}s^{m-1}+\cdots+b_{1}s+b_{0}}{a_%
    {n}s^{n}+a_{n-1}s^{n-1}+\cdots+a_{1}s+a_{0}},$ |  | (D.1) |'
  id: totrans-356
  prefs: []
  type: TYPE_TB
  zh: '|  | $G(s)=\frac{Y(s)}{U(s)}=\frac{b_{m}s^{m}+b_{m-1}s^{m-1}+\cdots+b_{1}s+b_{0}}{a_{n}s^{n}+a_{n-1}s^{n-1}+\cdots+a_{1}s+a_{0}},$
    |  | (D.1) |'
- en: 'where $Y(s)$ and $U(s)$ are output and input, $s$ is the complex frequency
    variable in Laplace domain. The system is considered stable if all roots of the
    characteristic equation $U(s)=0$ have negative real parts. Depending on the form
    of $U(s)$ and $Y(s)$, we classify the dynamical system models as follows:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 其中$Y(s)$和$U(s)$分别是输出和输入，$s$是拉普拉斯域中的复频率变量。当特征方程$U(s)=0$的所有根的实部均为负数时，系统被认为是稳定的。根据$U(s)$和$Y(s)$的形式，我们将动态系统模型分类如下：
- en: First-order systems.
  id: totrans-358
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 一阶系统。
- en: A first-order system is characterized by a first-order polynomial in $s$ for
    $U(s)$. The corresponding transfer function is $G(s)=\frac{K}{\tau s+1}$, where
    $K$ is a constant gain, and $\tau$ is the time constant of the first-order system.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 一阶系统的特点是$U(s)$为$s$的一个一阶多项式。对应的传递函数为$G(s)=\frac{K}{\tau s+1}$，其中$K$是常数增益，$\tau$是该一阶系统的时间常数。
- en: Second-order systems.
  id: totrans-360
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 二阶系统。
- en: 'Stable second-order systems can be expressed as:'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定的二阶系统可以表示为：
- en: '|  | $G(s)=\frac{a}{s^{2}+2\zeta\omega_{n}s+\omega_{n}^{2}},$ |  | (D.2) |'
  id: totrans-362
  prefs: []
  type: TYPE_TB
  zh: '|  | $G(s)=\frac{a}{s^{2}+2\zeta\omega_{n}s+\omega_{n}^{2}},$ |  | (D.2) |'
- en: where $\omega_{n}$ is the natural frequency and $\zeta$ is the damping ratio.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 其中$\omega_{n}$是固有频率，$\zeta$是阻尼比。
- en: First-order systems with time delay.
  id: totrans-364
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 带有时间延迟的一阶系统。
- en: 'First-order systems with time delay incorporate a delay parameter $\theta$
    into the transfer function:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 带有时间延迟的一阶系统在传递函数中引入了延迟参数$\theta$：
- en: '|  | $G(s)=\frac{Ke^{-\theta s}}{\tau s+1},$ |  |'
  id: totrans-366
  prefs: []
  type: TYPE_TB
  zh: '|  | $G(s)=\frac{Ke^{-\theta s}}{\tau s+1},$ |  |'
- en: where $\theta>0$ is the time delay parameter, $K$ is the system gain, and $\tau$
    is the system time constant. The presence of $e^{-\theta s}$ in the numerator
    introduces phase lag, which can significantly impact the system’s stability and
    response.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 其中$\theta>0$是时间延迟参数，$K$是系统增益，$\tau$是系统时间常数。分子中$e^{-\theta s}$的存在引入了相位滞后，这可能显著影响系统的稳定性和响应。
- en: Higher-order system.
  id: totrans-368
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 高阶系统。
- en: Higher-order systems refer to systems where the order of $U(s)$ is three or
    greater. Higher-order systems can exhibit more complex dynamics, such as multiple
    resonant peaks or oscillatory behavior, making their stability analysis and control
    design more challenging.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 高阶系统是指$U(s)$的阶数为三阶或更高的系统。高阶系统可能表现出更复杂的动态行为，如多个共振峰或振荡行为，这使得它们的稳定性分析和控制设计更加具有挑战性。
- en: D.2 Performance Criteria
  id: totrans-370
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: D.2 性能标准
- en: In linear control system design, key performance criteria include stability,
    phase margin, and settling time, which are essential for ensuring both the functionality
    and robustness of the system.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 在线性控制系统设计中，关键性能标准包括稳定性、相位裕度和稳定时间，这些对于确保系统的功能性和鲁棒性至关重要。
- en: Stability is a fundamental requirement in control systems. Formally, as discussed
    above, a LTI system is stable if all the poles of its transfer function lie in
    the left half of the complex s-plane, meaning their real parts are negative. If
    any pole has a real part greater than or equal to zero, the system is either marginally
    stable or unstable. Stability ensures that the system’s output will return to
    its equilibrium state after a disturbance, without unbounded oscillations or divergence.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定性是控制系统的基本要求。如上所述，LTI系统是稳定的，如果其传递函数的所有极点都位于复数$s$平面的左半平面，即它们的实部为负数。如果任何极点的实部大于或等于零，则系统是边际稳定或不稳定的。稳定性确保系统的输出在受到干扰后能够恢复到其平衡状态，而不会出现无限制的振荡或发散。
- en: 'Phase margin $\phi_{m}$ is a measure of how close a system is to instability.
    It is defined as the difference between the phase angle of the system’s open-loop
    transfer function $L(j\omega)=G(j\omega)C(j\omega)$ and $-180^{\circ}$ at the
    gain crossover frequency $\omega_{gc}$ , which is the frequency where the magnitude
    of the open-loop transfer function is equal to 1 (or 0 dB). Formally, the phase
    margin PM is given by:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 相位裕度$\phi_{m}$是衡量系统接近不稳定的程度。它被定义为系统开环传递函数$L(j\omega)=G(j\omega)C(j\omega)$在增益交叉频率$\omega_{gc}$处的相位角与$-180^{\circ}$之间的差值，增益交叉频率是开环传递函数幅值等于1（或0
    dB）时的频率。正式来说，相位裕度PM由以下公式给出：
- en: '|  | $\text{PM}=180^{\circ}+\arg(L(j\omega_{gc})).$ |  | (D.3) |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
  zh: '|  | $\text{PM}=180^{\circ}+\arg(L(j\omega_{gc})).$ |  | (D.3) |'
- en: A positive phase margin indicates a stable system, with typical design criteria
    recommending phase margins between $45^{\circ}$ and $90^{\circ}$ for adequate
    robustness. Phase margin provides insight into how much additional phase lag the
    system can tolerate before becoming unstable.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 正的相位裕度表示系统是稳定的，典型的设计标准推荐相位裕度在$45^{\circ}$到$90^{\circ}$之间，以确保足够的鲁棒性。相位裕度提供了关于系统在变得不稳定之前可以容忍多少额外相位滞后的信息。
- en: Settling time $T_{s}$ is a critical metric for evaluating the transient response
    of a control system. It is defined as the time required for the system’s output
    to remain within a specified percentage (typically 2% or 5%) of its final steady-state
    value following a step input. Depending on the specific dynamical system, the
    required settling time can vary significantly—ranging from fast to slow responses—based
    on factors such as system type, stability requirements, and the presence of unmodeled
    dynamics. To account for these variations, we consider three distinct response
    modes for stable first-order and second-order systems in ControlEval.
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 稳定时间$T_{s}$是评估控制系统瞬态响应的关键指标。它定义为在阶跃输入后，系统输出保持在其最终稳态值的指定百分比（通常为2%或5%）内所需的时间。根据具体的动态系统，所需的稳定时间可能会有所不同——从快速到缓慢的响应——这取决于系统类型、稳定性要求以及是否存在未建模的动态因素。为了考虑这些变化，我们在ControlEval中为稳定的一阶和二阶系统考虑了三种不同的响应模式。
- en: D.3 ControlEval Generation Details
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: D.3 ControlEval生成的详细信息
- en: In this section, we explain the details on the construction of ControlEval.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们解释了ControlEval构建的详细信息。
- en: D.3.1 Requirements for different type of dynamical models.
  id: totrans-379
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: D.3.1 不同类型动态模型的要求。
- en: 'First-order Stable Systems For first-order stable systems, we sample $K\sim\mathcal{U}(0.005,200)$,
    i.e., we uniform sample $K$ from range $[0.005,200]$, and $\tau\sim\mathcal{U}(0.05,10)$.
    In addition, we require the settling time to be within some range $T_{s}\in[t_{\min},t_{\max}]$
    for three different response modes: fast, moderate, and slow relative to the time
    constant $\tau$:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 一阶稳定系统 对于一阶稳定系统，我们对$K\sim\mathcal{U}(0.005,200)$进行采样，即我们从区间$[0.005,200]$均匀采样$K$，并且$\tau\sim\mathcal{U}(0.05,10)$。此外，我们要求在三种不同响应模式下，稳定时间$T_{s}$位于某个范围内$T_{s}\in[t_{\min},t_{\max}]$，这三种响应模式分别是相对于时间常数$\tau$的快、中、慢：
- en: •
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Fast mode: We have $t_{\min}\sim\mathcal{U}(0,0.001\tau)$ and $t_{\max}\sim\mathcal{U}(0.3\tau,0.5\tau)$.'
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 快模式：我们有 $t_{\min}\sim\mathcal{U}(0,0.001\tau)$ 和 $t_{\max}\sim\mathcal{U}(0.3\tau,0.5\tau)$。
- en: •
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Moderate mode: We have $t_{\min}\sim\mathcal{U}(0.1\tau,0.5\tau)$ and $t_{\max}\sim\mathcal{U}(\tau,5\tau)$.'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中等模式：我们有 $t_{\min}\sim\mathcal{U}(0.1\tau,0.5\tau)$ 和 $t_{\max}\sim\mathcal{U}(\tau,5\tau)$。
- en: •
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Slow mode: We have $t_{\min}\sim\mathcal{U}(5\tau,10\tau)$ and $t_{\max}\sim\mathcal{U}(20\tau,30\tau)$.'
  id: totrans-386
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 慢模式：我们有 $t_{\min}\sim\mathcal{U}(5\tau,10\tau)$ 和 $t_{\max}\sim\mathcal{U}(20\tau,30\tau)$。
- en: The minimum required phase margin is also randomly seleted by $\phi_{m}\in[45,90]$.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 最小要求的相位裕度也由 $\phi_{m}\in[45,90]$ 随机选择。
- en: 'Second-Order Stable Systems. For second-order stable systems, we sample $\zeta\sim\mathcal{U}(0.1,0.99)$
    to consider underdamped second-order system, $\omega_{n}\sim\mathcal{U}(0.1,5)$,
    and $a\sim\mathcal{U}(0.1,20)$. In addition, we require the settling time to be
    within some range $T_{s}\in[t_{\min},t_{\max}]$ for three different response modes:
    fast, moderate, and slow relative to the time constant $\tau\approx\frac{4}{\zeta\omega_{n}}$:'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 二阶稳定系统。对于二阶稳定系统，我们从 $\zeta\sim\mathcal{U}(0.1,0.99)$ 中抽取，以考虑欠阻尼二阶系统，$\omega_{n}\sim\mathcal{U}(0.1,5)$，以及
    $a\sim\mathcal{U}(0.1,20)$。此外，我们要求稳定时间 $T_{s}$ 在三个不同响应模式下的某个范围内，即相对于时间常数 $\tau\approx\frac{4}{\zeta\omega_{n}}$
    的快、中、慢模式：
- en: •
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Fast mode: We have $t_{\min}\sim\mathcal{U}(0,0.005\tau)$ and $t_{\max}\sim\mathcal{U}(\tau,1.5\tau)$.'
  id: totrans-390
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 快模式：我们有 $t_{\min}\sim\mathcal{U}(0,0.005\tau)$ 和 $t_{\max}\sim\mathcal{U}(\tau,1.5\tau)$。
- en: •
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Moderate mode: We have $t_{\min}\sim\mathcal{U}(2\tau,2.5\tau)$ and $t_{\max}\sim\mathcal{U}(3\tau,4\tau)$.'
  id: totrans-392
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 中等模式：我们有 $t_{\min}\sim\mathcal{U}(2\tau,2.5\tau)$ 和 $t_{\max}\sim\mathcal{U}(3\tau,4\tau)$。
- en: •
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Slow mode: We have $t_{\min}\sim\mathcal{U}(4\tau,5\tau)$ and $t_{\max}\sim\mathcal{U}(6\tau,10\tau)$.'
  id: totrans-394
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 慢模式：我们有 $t_{\min}\sim\mathcal{U}(4\tau,5\tau)$ 和 $t_{\max}\sim\mathcal{U}(6\tau,10\tau)$。
- en: The minimum required phase margin is also randomly seleted by $\phi_{m}\in[45,65]$.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 最小要求的相位裕度也由 $\phi_{m}\in[45,65]$ 随机选择。
- en: 'Second-Order Unstable Systems. For the second-order unstable systems, half
    of the dataset is generated using the following transfer function structure:'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 二阶不稳定系统。对于二阶不稳定系统，数据集的前半部分是使用以下传递函数结构生成的：
- en: '|  | $G(s)=\frac{a}{s^{2}-2\zeta\omega_{n}s+\omega_{n}^{2}},$ |  | (D.4) |'
  id: totrans-397
  prefs: []
  type: TYPE_TB
  zh: '|  | $G(s)=\frac{a}{s^{2}-2\zeta\omega_{n}s+\omega_{n}^{2}},$ |  | (D.4) |'
- en: where the damping ratio $\zeta$ is sampled from a uniform distribution $\zeta\sim\mathcal{U}(0.1,0.99)$,
    ensuring the system has two unstable poles. The natural frequency $\omega_{n}$
    is sampled from $\omega_{n}\sim\mathcal{U}(0.1,5)$, and the gain $a$ is drawn
    from $a\sim\mathcal{U}(0.1,20)$. Additionally, the settling time $T_{s}$ is constrained
    to lie within the range $T_{s}\in[t_{\min},t_{\max}]$, where $t_{\min}\sim\mathcal{U}(0,0.05\tau)$
    and $t_{\max}\sim\mathcal{U}(\tau,1.5\tau)$, with the time constant $\tau\approx\frac{4}{\zeta\omega_{n}}$.
    The minimum required phase margin $\phi_{m}$ is randomly selected from $\phi_{m}\sim\mathcal{U}(45,65)^{\circ}$.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 其中阻尼比 $\zeta$ 从均匀分布 $\zeta\sim\mathcal{U}(0.1,0.99)$ 中抽取，以确保系统有两个不稳定极点。自然频率
    $\omega_{n}$ 从 $\omega_{n}\sim\mathcal{U}(0.1,5)$ 中抽取，增益 $a$ 从 $a\sim\mathcal{U}(0.1,20)$
    中抽取。此外，稳定时间 $T_{s}$ 被限制在 $T_{s}\in[t_{\min},t_{\max}]$ 范围内，其中 $t_{\min}\sim\mathcal{U}(0,0.05\tau)$
    和 $t_{\max}\sim\mathcal{U}(\tau,1.5\tau)$，时间常数 $\tau\approx\frac{4}{\zeta\omega_{n}}$。最小要求的相位裕度
    $\phi_{m}$ 从 $\phi_{m}\sim\mathcal{U}(45,65)^{\circ}$ 中随机选择。
- en: 'The second half of the dataset is designed using the following transfer function
    structure:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集的后半部分是使用以下传递函数结构设计的：
- en: '|  | $G(s)=\frac{a}{(\tau_{1}s+1)(\tau_{2}s+1)},$ |  | (D.5) |'
  id: totrans-400
  prefs: []
  type: TYPE_TB
  zh: '|  | $G(s)=\frac{a}{(\tau_{1}s+1)(\tau_{2}s+1)},$ |  | (D.5) |'
- en: where the gain $a$ is sampled from $a\sim\mathcal{U}(-2000,-0.00025)$, and the
    time constants $\tau_{1}$ and $\tau_{2}$ are drawn from $\tau_{1}\sim\mathcal{U}(0.05,10)$
    and $\tau_{2}\sim\mathcal{U}(-10,-0.05)$, respectively. The time constant $\tau$
    is approximated as $\tau\approx 3\min\{\tau_{1},|\tau_{2}|\}$. As with the first
    half of the dataset, the settling time $T_{s}$ is required to be within the range
    $T_{s}\in[t_{\min},t_{\max}]$, with $t_{\min}\sim\mathcal{U}(0,0.05\tau)$ and
    $t_{\max}\sim\mathcal{U}(\tau,1.5\tau)$.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 其中增益 $a$ 从 $a\sim\mathcal{U}(-2000,-0.00025)$ 中抽取，时间常数 $\tau_{1}$ 和 $\tau_{2}$
    分别从 $\tau_{1}\sim\mathcal{U}(0.05,10)$ 和 $\tau_{2}\sim\mathcal{U}(-10,-0.05)$
    中抽取。时间常数 $\tau$ 近似为 $\tau\approx 3\min\{\tau_{1},|\tau_{2}|\}$。与数据集的前半部分一样，要求稳定时间
    $T_{s}$ 在 $T_{s}\in[t_{\min},t_{\max}]$ 范围内，其中 $t_{\min}\sim\mathcal{U}(0,0.05\tau)$
    和 $t_{\max}\sim\mathcal{U}(\tau,1.5\tau)$。
- en: The reason for using these two different structures is to ensure that half of
    the dataset consists of systems with one unstable pole, while the other half contains
    systems with two unstable poles, providing a balanced variety of unstable system
    dynamics.
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两种不同结构的原因是为了确保数据集中一半是具有一个不稳定极点的系统，另一半则是具有两个不稳定极点的系统，从而提供平衡的多样化不稳定系统动态。
- en: First-Order Systems with Time Delay. For first-order system with a time delay
    $\theta$, we choose the delay parameter randomly as $\theta\sim\mathcal{U}(\theta_{\min},\theta_{\max})$,
    where $\theta_{\min}=0.1\tau$ and $\theta_{\max}=0.2\tau$. For the settling time
    requirements, we require $T_{s}\in[t_{\min},t_{\max}]$ with $t_{\min}\sim\mathcal{U}(4\tau,5\tau)$
    and $t_{\max}\sim\mathcal{U}(40\tau,50\tau)$. The minimum required phase margin
    is also randomly selected by $\phi_{m}\in[45,65]$.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 带时延的一阶系统。对于带有时延$\theta$的一阶系统，我们将延迟参数随机选择为$\theta\sim\mathcal{U}(\theta_{\min},\theta_{\max})$，其中$\theta_{\min}=0.1\tau$，$\theta_{\max}=0.2\tau$。对于稳定时间要求，我们要求$T_{s}\in[t_{\min},t_{\max}]$，其中$t_{\min}\sim\mathcal{U}(4\tau,5\tau)$，$t_{\max}\sim\mathcal{U}(40\tau,50\tau)$。最小要求的相位裕度也通过$\phi_{m}\in[45,65]$随机选择。
- en: Higher-order Systems.
  id: totrans-404
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 高阶系统。
- en: For higher-order systems, there is no standardized method to automatically generate
    both the dynamical system and its corresponding performance requirements simultaneously.
    To address this, we have manually designed 50 higher-order systems along with
    their performance criteria, ensuring that the specified requirements are indeed
    achievable. Among these samples, 25 are stable higher-order systems, while the
    remaining 25 are unstable. Based on feedback from human experts, designing a controller
    for higher-order systems is challenging, requires multiple rounds of parameter
    tuning even for human. Nevertheless, these higher-order tasks present unique challenges
    for ControlAgent, and our results demonstrate promising performance in addressing
    these complex scenarios.
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 对于高阶系统，目前没有标准化的方法可以同时自动生成动力学系统及其对应的性能要求。为了解决这一问题，我们手动设计了50个高阶系统及其性能标准，确保指定的要求是可以实现的。在这些样本中，25个是稳定的高阶系统，剩下的25个是不稳定的。根据专家的反馈，设计高阶系统的控制器具有挑战性，即使对人类而言，也需要多轮的参数调优。然而，这些高阶任务为ControlAgent带来了独特的挑战，我们的结果展示了在解决这些复杂场景方面的良好表现。
- en: D.3.2 Sample code for generating ControlEval
  id: totrans-406
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: D.3.2 生成ControlEval的示例代码
- en: 'The following is a sample code snap for generating first-order systems:'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是生成一阶系统的示例代码：
- en: '[⬇](data:text/plain;base64,ZGVmIGdlbmVyYXRlX2ZpcnN0X29yZGVyX3N5c3RlbV9kYXRhc2V0KG51bV9zYW1wbGVzKToKICAgIGRhdGFzZXQgPSBbXQoKICAgIGZvciBpIGluIHJhbmdlKG51bV9zYW1wbGVzKToKICAgICAgICBLID0gcmFuZG9tLnVuaWZvcm0oMC4xLCAyMCkKICAgICAgICBCID0gcmFuZG9tLnVuaWZvcm0oMC4xLCAyMCkKICAgICAgICB0YXUgPSAzL0IKCgogICAgICAgIHBoYXNlX21hcmdpbl9taW4gPSByYW5kb20udW5pZm9ybSg0NSwgOTApCiAgICAgICAgc2V0dGxpbmdfdGltZV9taW5fZmFzdCA9IHJhbmRvbS51bmlmb3JtKDAsIDAuMDAxICogdGF1KQogICAgICAgIHNldHRsaW5nX3RpbWVfbWF4X2Zhc3QgPSByYW5kb20udW5pZm9ybSgwLjMqIHRhdSwgMC41ICogdGF1KQogICAgICAgIHNldHRsaW5nX3RpbWVfbWluX21vZGVyYXRlID0gcmFuZG9tLnVuaWZvcm0oMC4xKnRhdSwgMC41KnRhdSkKICAgICAgICBzZXR0bGluZ190aW1lX21heF9tb2RlcmF0ZSA9IHJhbmRvbS51bmlmb3JtKHRhdSwgNSAqIHRhdSkKICAgICAgICBzZXR0bGluZ190aW1lX21pbl9zbG93ID0gcmFuZG9tLnVuaWZvcm0oNSAqIHRhdSwgMTAgKiB0YXUpCiAgICAgICAgc2V0dGxpbmdfdGltZV9tYXhfc2xvdyA9IHJhbmRvbS51bmlmb3JtKDIwICogdGF1LCAzMCAqIHRhdSkKICAgICAgICBzdGVhZHlzdGF0ZV9lcnJvcl9tYXggPSAwLjAwMDEKICAgICAgICBtZXRhZGF0YSA9ICJGaXJzdCBvcmRlciBzeXN0ZW0gd2l0aCBkaWZmZXJlbnQgcmVzcG9uc2Ugc3BlZWQgcmVxdWlyZW1lbnRzLiIKCiAgICAgICAgc3lzdGVtX2RhdGEgPSB7CiAgICAgICAgICAgICJpZCI6IGksCiAgICAgICAgICAgICJudW0iOiBbS10sCiAgICAgICAgICAgICJkZW4iOiBbMSwgQl0sCiAgICAgICAgICAgICJwaGFzZV9tYXJnaW5fbWluIjogcGhhc2VfbWFyZ2luX21pbiwKICAgICAgICAgICAgInNldHRsaW5nX3RpbWVfbWluX2Zhc3QiOiBzZXR0bGluZ190aW1lX21pbl9mYXN0LAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tYXhfZmFzdCI6IHNldHRsaW5nX3RpbWVfbWF4X2Zhc3QsCiAgICAgICAgICAgICJzZXR0bGluZ190aW1lX21pbl9tb2RlcmF0ZSI6IHNldHRsaW5nX3RpbWVfbWluX21vZGVyYXRlLAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tYXhfbW9kZXJhdGUiOiBzZXR0bGluZ190aW1lX21heF9tb2RlcmF0ZSwKICAgICAgICAgICAgInNldHRsaW5nX3RpbWVfbWluX3Nsb3ciOiBzZXR0bGluZ190aW1lX21pbl9zbG93LAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tYXhfc2xvdyI6IHNldHRsaW5nX3RpbWVfbWF4X3Nsb3csCiAgICAgICAgICAgICJzdGVhZHlzdGF0ZV9lcnJvcl9tYXgiOiBzdGVhZHlzdGF0ZV9lcnJvcl9tYXgsCiAgICAgICAgICAgICJtZXRhZGF0YSI6IG1ldGFkYXRhCiAgICAgICAgfQoKICAgICAgICBkYXRhc2V0LmFwcGVuZChzeXN0ZW1fZGF0YSkKCiAgICByZXR1cm4gZGF0YXNldA==)1def  generate_first_order_system_dataset(num_samples):2  dataset  =  []34  for  i  in  range(num_samples):5  K  =  random.uniform(0.1,  20)6  B  =  random.uniform(0.1,  20)7  tau  =  3/B8910  phase_margin_min  =  random.uniform(45,  90)11  settling_time_min_fast  =  random.uniform(0,  0.001  *  tau)12  settling_time_max_fast  =  random.uniform(0.3*  tau,  0.5  *  tau)13  settling_time_min_moderate  =  random.uniform(0.1*tau,  0.5*tau)14  settling_time_max_moderate  =  random.uniform(tau,  5  *  tau)15  settling_time_min_slow  =  random.uniform(5  *  tau,  10  *  tau)16  settling_time_max_slow  =  random.uniform(20  *  tau,  30  *  tau)17  steadystate_error_max  =  0.000118  metadata  =  "First  order  system  with  different  response  speed  requirements."1920  system_data  =  {21  "id":  i,22  "num":  [K],23  "den":  [1,  B],24  "phase_margin_min":  phase_margin_min,25  "settling_time_min_fast":  settling_time_min_fast,26  "settling_time_max_fast":  settling_time_max_fast,27  "settling_time_min_moderate":  settling_time_min_moderate,28  "settling_time_max_moderate":  settling_time_max_moderate,29  "settling_time_min_slow":  settling_time_min_slow,30  "settling_time_max_slow":  settling_time_max_slow,31  "steadystate_error_max":  steadystate_error_max,32  "metadata":  metadata33  }3435  dataset.append(system_data)3637  return  dataset'
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: '[⬇](data:text/plain;base64,ZGVmIGdlbmVyYXRlX2ZpcnN0X29yZGVyX3N5c3RlbV9kYXRhc2V0KG51bV9zYW1wbGVzKToKICAgIGRhdGFzZXQgPSBbXQoKICAgIGZvciBpIGluIHJhbmdlKG51bV9zYW1wbGVzKToKICAgICAgICBLID0gcmFuZG9tLnVuaWZvcm0oMC4xLCAyMCkKICAgICAgICBCID0gcmFuZG9tLnVuaWZvcm0oMC4xLCAyMCkKICAgICAgICB0YXUgPSAzL0IKCgogICAgICAgIHBoYXNlX21hcmdpbl9taW4gPSByYW5kb20udW5pZm9ybSg0NSwgOTApCiAgICAgICAgc2V0dGxpbmdfdGltZV9taW5fZmFzdCA9IHJhbmRvbS51bmlmb3JtKDAsIDAuMDAxICogdGF1KQogICAgICAgIHNldHRsaW5nX3RpbWVfbWF4X2Zhc3QgPSByYW5kb20udW5pZm9ybSgwLjMqIHRhdSwgMC41ICogdGF1KQogICAgICAgIHNldHRsaW5nX3RpbWVfbWluX21vZGVyYXRlID0gcmFuZG9tLnVuaWZvcm0oMC4xKnRhdSwgMC41KnRhdSkKICAgICAgICBzZXR0bGluZ190aW1lX21heF9tb2RlcmF0ZSA9IHJhbmRvbS51bmlmb3JtKHRhdSwgNSAqIHRhdSkKICAgICAgICBzZXR0bGluZ190aW1lX21pbl9zbG93ID0gcmFuZG9tLnVuaWZvcm0oNSAqIHRhdSwgMTAgKiB0YXUpCiAgICAgICAgc2V0dGxpbmdfdGltZV9tYXhfc2xvdyA9IHJhbmRvbS51bmlmb3JtKDIwICogdGF1LCAzMCAqIHRhdSkKICAgICAgICBzdGVhZHlzdGF0ZV9lcnJvcl9tYXggPSAwLjAwMDEKICAgICAgICBtZXRhZGF0YSA9ICJGaXJzdCBvcmRlciBzeXN0ZW0gd2l0aCBkaWZmZXJlbnQgcmVzcG9uc2Ugc3BlZWQgcmVxdWlyZW1lbnRzLiIKCiAgICAgICAgc3lzdGVtX2RhdGEgPSB7CiAgICAgICAgICAgICJpZCI6IGksCiAgICAgICAgICAgICJudW0iOiBbS10sCiAgICAgICAgICAgICJkZW4iOiBbMSwgQl0sCiAgICAgICAgICAgICJwaGFzZV9tYXJnaW5fbWluIjogcGhhc2VfbWFyZ2luX21pbiwKICAgICAgICAgICAgInNldHRsaW5nX3RpbWVfbWluX2Zhc3QiOiBzZXR0bGluZ190aW1lX21pbl9mYXN0LAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tYXhfZmFzdCI6IHNldHRsaW5nX3RpbWVfbWF4X2Zhc3QsCiAgICAgICAgICAgICJzZXR0bGluZ190aW1lX21pbl9tb2RlcmF0ZSI6IHNldHRsaW5nX3RpbWVfbWluX21vZGVyYXRlLAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tb2RlcmF0ZSI6IHNldHRsaW5nX3RpbWVfbWluX21vZGVyYXRlLAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tYXhfbW9kZXJhdGUiOiBzZXR0bGluZ190aW1lX21heF9tb2RlcmF0ZSwKICAgICAgICAgICAgInNldHRsaW5nX3RpbWVfbWluX3Nsb3ciOiBzZXR0bGluZ190aW1lX21pbl9zbG93LAogICAgICAgICAgICAic2V0dGxpbmdfdGltZV9tYXhfc2xvdyI6IHNldHRsaW5nX3RpbWVfbWF4X3Nsb3csCiAgICAgICAgICAgICJzdGVhZHlzdGF0ZV9lcnJvcl9tYXgiOiBzdGVhZHlzdGF0ZV9lcnJvcl9tYXgsCiAgICAgICAgICAgICJtZXRhZGF0YSA6IG1ldGFkYXRhCiAgICAgICAgfQoKICAgICAgICBkYXRhc2V0LmFwcGVuZChzeXN0ZW1fZGF0YSkKCiAgICByZXR1cm4gZGF0YXNldA==)'
- en: 'The following is a sample code snap for generating second-order unstable systems:'
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是生成二阶不稳定系统的示例代码片段：
- en: '[⬇](data:text/plain;base64,ZGVmIGdlbmVyYXRlX3Vuc3RhYmxlX3NlY29uZF9vcmRlcl9zeXN0ZW1fZGF0YXNldChudW1fc2FtcGxlcyk6CiAgICBkYXRhc2V0ID0gW10KCiAgICBmb3IgaSBpbiByYW5nZShudW1fc2FtcGxlcyk6CiAgICAgICAgaWYgaSAlIDIgPT0gMDoKICAgICAgICAgICAgemV0YSA9IHJhbmRvbS51bmlmb3JtKDAuMSwgMC45OSkKICAgICAgICAgICAgb21lZ2EgPSByYW5kb20udW5pZm9ybSgwLjEsIDUpCiAgICAgICAgICAgIEEgPSByYW5kb20udW5pZm9ybSgwLjEsMjApCiAgICAgICAgICAgIHNUID0gNC8ob21lZ2EqemV0YSkKICAgICAgICAgICAgcGhhc2VfbWFyZ2luX21pbiA9IHJhbmRvbS51bmlmb3JtKDQ1LCA2NSkKICAgICAgICAgICAgc2V0dGxpbmdfdGltZV9taW4gPSByYW5kb20udW5pZm9ybSgwLCAwLjA1ICogc1QpCiAgICAgICAgICAgIHNldHRsaW5nX3RpbWVfbWF4ID0gcmFuZG9tLnVuaWZvcm0oc1QsIDEuNSAqIHNUKQogICAgICAgICAgICBvdmVyc2hvb3RfbWF4ID0gcmFuZG9tLnVuaWZvcm0oNSwgMjApCiAgICAgICAgICAgIHN0ZWFkeXN0YXRlX2Vycm9yX21heCA9IDAuMDAwMQogICAgICAgICAgICBtZXRhZGF0YSA9ICJTZWNvbmQgb3JkZXIgdW5zdGFibGUgc3lzdGVtIHdpdGggZGlmZmVyZW50IHJlc3BvbnNlIHNwZWVkIHJlcXVpcmVtZW50cy4iCgogICAgICAgICAgICBzeXN0ZW1fZGF0YSA9IHsKICAgICAgICAgICAgICAgICJpZCI6IGksCiAgICAgICAgICAgICAgICAibnVtIjogW0FdLAogICAgICAgICAgICAgICAgImRlbiI6IFsxLCAtMip6ZXRhKm9tZWdhLCBvbWVnYSpvbWVnYV0sCiAgICAgICAgICAgICAgICAicGhhc2VfbWFyZ2luX21pbiI6IHBoYXNlX21hcmdpbl9taW4sCiAgICAgICAgICAgICAgICAic2V0dGxpbmdfdGltZV9taW4iOiBzZXR0bGluZ190aW1lX21pbiwKICAgICAgICAgICAgICAgICJzZXR0bGluZ190aW1lX21heCI6IHNldHRsaW5nX3RpbWVfbWF4LAogICAgICAgICAgICAgICAgInN0ZWFkeXN0YXRlX2Vycm9yX21heCI6IHN0ZWFkeXN0YXRlX2Vycm9yX21heCwKICAgICAgICAgICAgICAgICJtZXRhZGF0YSI6IG1ldGFkYXRhCiAgICAgICAgICAgIH0KCiAgICAgICAgZWxzZToKICAgICAgICAgICAgQSA9IHJhbmRvbS51bmlmb3JtKDAuMSwyMCkKICAgICAgICAgICAgQiA9IHJhbmRvbS51bmlmb3JtKDAuMSwgMjApCiAgICAgICAgICAgIEMgPSByYW5kb20udW5pZm9ybSgwLC0yMCkKICAgICAgICAgICAgc1QgPSAzL21pbihCLGFicyhDKSkKCiAgICAgICAgICAgIHBoYXNlX21hcmdpbl9taW4gPSByYW5kb20udW5pZm9ybSg0NSwgNjUpCiAgICAgICAgICAgIHNldHRsaW5nX3RpbWVfbWluID0gcmFuZG9tLnVuaWZvcm0oMCwgMC4wNSAqIHNUKQogICAgICAgICAgICBzZXR0bGluZ190aW1lX21heCA9IHJhbmRvbS51bmlmb3JtKHNULCAxLjUgKiBzVCkKICAgICAgICAgICAgb3ZlcnNob290X21heCA9IHJhbmRvbS51bmlmb3JtKDUsIDIwKQogICAgICAgICAgICBzdGVhZHlzdGF0ZV9lcnJvcl9tYXggPSAwLjAwMDEKICAgICAgICAgICAgbWV0YWRhdGEgPSAiU2Vjb25kIG9yZGVyIHVuc3RhYmxlIHN5c3RlbSB3aXRoIGRpZmZlcmVudCByZXNwb25zZSBzcGVlZCByZXF1aXJlbWVudHMuIgogICAgICAgICAgICBzeXN0ZW1fZGF0YSA9IHsKICAgICAgICAgICAgICAgICJpZCI6IGksCiAgICAgICAgICAgICAgICAibnVtIjogW0FdLAogICAgICAgICAgICAgICAgImRlbiI6IFsxLCBCK0MsIEIqQ10sCiAgICAgICAgICAgICAgICAicGhhc2VfbWFyZ2luX21pbiI6IHBoYXNlX21hcmdpbl9taW4sCiAgICAgICAgICAgICAgICAic2V0dGxpbmdfdGltZV9taW4iOiBzZXR0bGluZ190aW1lX21pbl9mYXN0LAogICAgICAgICAgICAgICAgInNldHRsaW5nX3RpbWVfbWF4Ijogc2V0dGxpbmdfdGltZV9tYXhfZmFzdCwKICAgICAgICAgICAgICAgICJzdGVhZHlzdGF0ZV9lcnJvcl9tYXgiOiBzdGVhZHlzdGF0ZV9lcnJvcl9tYXgsCiAgICAgICAgICAgICAgICAibWV0YWRhdGEiOiBtZXRhZGF0YQogICAgICAgICAgICB9CiAgICAgICAgZGF0YXNldC5hcHBlbmQoc3lzdGVtX2RhdGEpCiAgICByZXR1cm4gZGF0YXNldA==)1def  generate_unstable_second_order_system_dataset(num_samples):2  dataset  =  []34  for  i  in  range(num_samples):5  if  i  %  2  ==  0:6  zeta  =  random.uniform(0.1,  0.99)7  omega  =  random.uniform(0.1,  5)8  A  =  random.uniform(0.1,20)9  sT  =  4/(omega*zeta)10  phase_margin_min  =  random.uniform(45,  65)11  settling_time_min  =  random.uniform(0,  0.05  *  sT)12  settling_time_max  =  random.uniform(sT,  1.5  *  sT)13  overshoot_max  =  random.uniform(5,  20)14  steadystate_error_max  =  0.000115  metadata  =  "Second  order  unstable  system  with  different  response  speed  requirements."1617  system_data  =  {18  "id":  i,19  "num":  [A],20  "den":  [1,  -2*zeta*omega,  omega*omega],21  "phase_margin_min":  phase_margin_min,22  "settling_time_min":  settling_time_min,23  "settling_time_max":  settling_time_max,24  "steadystate_error_max":  steadystate_error_max,25  "metadata":  metadata26  }2728  else:29  A  =  random.uniform(0.1,20)30  B  =  random.uniform(0.1,  20)31  C  =  random.uniform(0,-20)32  sT  =  3/min(B,abs(C))3334  phase_margin_min  =  random.uniform(45,  65)35  settling_time_min  =  random.uniform(0,  0.05  *  sT)36  settling_time_max  =  random.uniform(sT,  1.5  *  sT)37  overshoot_max  =  random.uniform(5,  20)38  steadystate_error_max  =  0.000139  metadata  =  "Second  order  unstable  system  with  different  response  speed  requirements."40  system_data  =  {41  "id":  i,42  "num":  [A],43  "den":  [1,  B+C,  B*C],44  "phase_margin_min":  phase_margin_min,45  "settling_time_min":  settling_time_min_fast,46  "settling_time_max":  settling_time_max_fast,47  "steadystate_error_max":  steadystate_error_max,48  "metadata":  metadata49  }50  dataset.append(system_data)51  return  dataset'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '[⬇](data:text/plain;base64,ZGVmIGdlbmVyYXRlX3Vuc3RhYmxlX3NlY29uZF9vcmRlcl9zeXN0ZW1fZGF0YXNldChudW1fc2FtcGxlcyk6CiAgICBkYXRhc2V0ID0gW10KCiAgICBmb3IgaSBpbiByYW5nZShudW1fc2FtcGxlcyk6CiAgICAgICAgaWYgaSAlIDIgPT0gMDoKICAgICAgICAgICAgemV0YSA9IHJhbmRvbS51bmlmb3JtKDAuMSwgMC45OSkKICAgICAgICAgICAgb21lZ2EgPSByYW5kb20udW5pZm9ybSgwLjEsIDUpCiAgICAgICAgICAgIEEgPSByYW5kb20udW5pZm9ybSgwLjEsMjApCiAgICAgICAgICAgIHNUID0gNC8ob21lZ2EqemV0YSkKICAgICAgICAgICAgcGhhc2VfbWFyZ2luX21pbiA9IHJhbmRvbS51bmlmb3JtKDQ1LCA2NSkKICAgICAgICAgICAgc2V0dGxpbmdfdGltZV9taW4gPSByYW5kb20udW5pZm9ybSgwLCAwLjA1ICogc1QpCiAgICAgICAgICAgIHNldHRsaW5nX3RpbWVfbWF4ID0gcmFuZG9tLnVuaWZvcm0oc1QsIDEuNSAqIHNUKQogICAgICAgICAgICBvdmVyc2hvb3RfbWF4ID0gcmFuZG9tLnVuaWZvcm0oNSwgMjApCiAgICAgICAgICAgIHN0ZWFkeXN0YXRlX2Vycm9yX21heCA9IDAuMDAwMQogICAgICAgICAgICBtZXRhZGF0YSA9ICJTZWNvbmQgb3JkZXIgdW5zdGFibGUgc3lzdGVtIHdpdGggZGlmZmVyZW50IHJlc3BvbnNlIHNwZWVkIHJlcXVpcmVtZW50cy4iCgogICAgICAgICAgICBzeXN0ZW1fZGF0YSA9IHsKICAgICAgICAgICAgICAgICJpZCI6IGksCiAgICAgICAgICAgICAgICAibnVtIjogW0FdLAogICAgICAgICAgICAgICAgImRlbiI6IFsxLCAtMip6ZXRhKm9tZWdhLCBvbWVnYSpvbWVnYV0sCiAgICAgICAgICAgICAgICAicGhhc2VfbWFyZ2luX21pbiI6IHBoYXNlX21hcmdpbl9taW4sCiAgICAgICAgICAgICAgICAic2V0dGxpbmdfdGltZV9taW4iOiBzZXR0bGluZ190aW1lX21pbiwKICAgICAgICAgICAgICAgICJzZXR0bGluZ190aW1lX21heCI6IHNldHRsaW5nX3RpbWVfbWF4LAogICAgICAgICAgICAgICAgInN0ZWFkeXN0YXRlX2Vycm9yX21heCI6IHN0ZWFkeXN0YXRlX2Vycm9yX21heCwKICAgICAgICAgICAgICAgICJtZXRhZGF0YSAiOiBtZXRhZGF0YQogICAgICAgICAgICB9CiAgICAgICAgZWxzZToKICAgICAgICAgICAgQSA9IHJhbmRvbS51bmlmb3JtKDAuMSwyMCkKICAgICAgICAgICAgQiA9IHJhbmRvbS51bmlmb3JtKDAuMSwgMjApCiAgICAgICAgICAgIEMgPSByYW5kb20udW5pZm9ybSgwLC0yMCkKICAgICAgICAgICAgc1QgPSAzL21pbihCLGFicyhDKSkKCiAgICAgICAgICAgIHBoYXNlX21hcmdpbl9taW4gPSByYW5kb20udW5pZm9ybSg0NSwgNjUpCiAgICAgICAgICAgIHNldHRsaW5nX3RpbWVfbWluID0gcmFuZG9tLnVuaWZvcm0oMCwgMC4wNSAqIHNUKQogICAgICAgICAgICBzZXR0bGluZ190aW1lX21heCA9IHJhbmRvbS51bmlmb3JtKHNULCAxLjUgKiBzVCkKICAgICAgICAgICAgb3ZlcnNob290X21heCA9IHJhbmRvbS51bmlmb3JtKDUsIDIwKQogICAgICAgICAgICBzdGVhZHlzdGF0ZV9lcnJvcl9tYXggPSAwLjAwMDEKICAgICAgICAgICAgbWV0YWRhdGEgPSAiU2Vjb25kIG9yZGVyIHVuc3RhYmxlIHN5c3RlbSB3aXRoIGRpZmZlcmVudCByZXNwb25zZSBzcGVlZCByZXF1aXJlbWVudHMuIgogICAgICAgICAgICBzeXN0ZW1fZGF0YSA9IHsKICAgICAgICAgICAgICAgICJpZCI6IGksCiAgICAgICAgICAgICAgICAibnVtIjogW0FdLAogICAgICAgICAgICAgICAgImRlbiI6IFsxLCBCK0MsIEIqQ10sCiAgICAgICAgICAgICAgICAicGhhc2VfbWFyZ2luX21pbiI6IHBoYXNlX21hcmdpbl9taW4sCiAgICAgICAgICAgICAgICAic2V0dGxpbmdfdGltZV9taW4iOiBzZXR0bGluZ190aW1lX21pbl9mYXN0LAogICAgICAgICAgICAgICAgInNldHRsaW5nX3RpbWVfbWF4Ijogc2V0dGxpbmdfdGltZV9tYXhfZmFzdCwKICAgICAgICAgICAgICAgICJzdGVhZHlzdGF0ZV9lcnJvcl9tYXgiOiBzdGVhZHlzdGF0ZV9lcnJvcl9tYXgsCiAgICAgICAgICAgICAgICAibWV0YXRhdGEiOiBtZXRhZGF0YQogICAgICAgICAgICB9CiAgICAgICAgZGF0YXNldC5hcHBlbmQoc3lzdGVtX2RhdGEpCiAgICByZXR1cm4gZGF0YXNldA==)'
- en: Appendix E Prompt Design
  id: totrans-411
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 E 提示设计
- en: E.1 Full Prompts for ControlAgent
  id: totrans-412
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: E.1 ControlAgent 完整提示
- en: In this section, we provide the full prompt for ControlAgent, including the
    prompt for central agent to distribute the control tasks and a sample prompt for
    the task-specific agent for designing controllers of first-order stable system.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们提供了完整的ControlAgent提示，包括中央代理分配控制任务的提示以及任务特定代理设计一阶稳定系统控制器的示例提示。
- en: '<svg class="ltx_picture" height="277.86" id="A5.SS1.p2.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,277.86) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 259.65)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">Central Agent Prompt</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="228.16" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">You are an expert control engineer tasked with analyzing
    the provided control task and assigning it to the most suitable task-specific
    agent, each specializing in designing controllers for specific system types. First,
    analyze the dynamic system to identify its type, such as a first-order stable
    system, second-order unstable system, first-order with time delay, higher-order
    system, etc. Based on this analysis, assign the task to the corresponding task-specific
    agent that specializes in the identified system type. Here are the available task-specific
    agents: - Agent 1: First-order stable system - Agent 2: First-order unstable system
    - Agent 3: Second-order stable system - Agent 4: Second-order unstable system
    - Agent 5: First-order system with time delay - Agent 6: Higher-order system Ensure
    the selected agent can effectively tailor the control design process.</foreignobject></g></g></svg><svg
    class="ltx_picture" height="246.19" id="A5.SS1.p3.pic1" overflow="visible" version="1.1"
    width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt" transform="translate(0,246.19)
    matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0
    21.65 227.98)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">Central Agent Response Instruction</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="196.49" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">## Response Instructions: Your response should strictly
    follow the JSON format below, containing three keys: ’Task Requirement’ and ’Task
    Analysis’, and ’Agent Number’: - Task Requirement: Summarize the task requirements,
    including the system dynamics and performance criteria provided by the user. -
    Task Analysis: Provide a brief analysis of the system and justify the selection
    of the task-specific agent. - Agent Number: Specify the task-specific agent number
    (choose from 1 to 6). ### Example of the expected JSON format:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: '<svg class="ltx_picture" height="277.86" id="A5.SS1.p2.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,277.86) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 259.65)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">中央代理提示</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="228.16" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">你是一个专家控制工程师，负责分析提供的控制任务，并将其分配给最合适的任务特定代理，每个代理专门设计特定系统类型的控制器。首先，分析动态系统以识别其类型，如一阶稳定系统、二阶不稳定系统、一阶带时延系统、高阶系统等。根据此分析，将任务分配给相应的任务特定代理，该代理专门处理识别出的系统类型。以下是可用的任务特定代理：
    - 代理 1：一阶稳定系统 - 代理 2：一阶不稳定系统 - 代理 3：二阶稳定系统 - 代理 4：二阶不稳定系统 - 代理 5：一阶时延系统 - 代理 6：高阶系统
    确保所选择的代理能够有效地定制控制设计过程。</foreignobject></g></g></svg><svg class="ltx_picture" height="246.19"
    id="A5.SS1.p3.pic1" overflow="visible" version="1.1" width="600"><g fill="#000000"
    stroke="#000000" stroke-width="0.4pt" transform="translate(0,246.19) matrix(1
    0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 227.98)"><foreignobject
    color="#FFFFFF" height="12.3" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="556.69">中央代理响应指令</foreignobject></g> <g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 13.78)"><foreignobject color="#000000" height="196.49" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">## 响应指令：你的响应应严格遵循以下 JSON 格式，包含三个键：’任务需求’、’任务分析’和’代理编号’：
    - 任务需求：总结任务需求，包括用户提供的系统动态和性能标准。 - 任务分析：简要分析系统并说明选择任务特定代理的理由。 - 代理编号：指定任务特定代理编号（从
    1 到 6 选择）。 ### 预期 JSON 格式示例：</foreignobject></g></g></svg>'
- en: '[PRE0]</foreignobject></g></g></svg> <svg class="ltx_picture" height="441.79"
    id="A5.SS1.p4.pic1" overflow="visible" version="1.1" width="600"><g fill="#000000"
    stroke="#000000" stroke-width="0.4pt" transform="translate(0,441.79) matrix(1
    0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 422.05)"><foreignobject
    color="#FFFFFF" height="13.84" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="556.69">Task-Specific Agent Prompt (First-order Stable)</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="390.55" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">You are a control engineer expert, and your goal is to
    design a controller $K(s)$ for a system with transfer function $G(s)$ using loop
    shaping method. The loop transfer function is $L(s)=G(s)K(s)$ and here are the
    basic loop shaping steps: [Step1] Choose a proper loop bandwidth $\omega_{L}$
    for the given plant $G(s)$. Note: Increasing $\omega_{L}$ will make the response
    faster, therefore smaller settling time. On the other hand, decreasing $\omega_{L}$
    corresponds to larger settling time. [Step2] Compute the proportional gain $K_{p}$
    to set the desired loop bandwidth $\omega_{L}$, where $K_{p}=\pm 1/|G(j\omega_{L})|$.
    [Step3] Design an integral boost to increase the low frequency loop gain thus
    improving both tracking and disturbance rejection at low frequencies. Specifically,
    select $K_{i}(s)=(\beta_{b}s+\omega_{L})/(s\sqrt{\beta_{b}^{2}+1})$ with $\beta\geq
    0$. A reasonable initial choice of $\beta_{b}$ is $\sqrt{10}$. Note: Decreasing
    beta will: (i) increase the low frequency gain and reduce the high frequency gain
    thus improving both tracking and noise rejection performance, and (ii) reduce
    the phase at loop crossover thus degrading robustness. Hence a smaller $\beta_{b}$
    should only be used if the loop can tolerate the reduced phase. On the other hand,
    increasing beta will increase the phase margin. Thus the final controller is then:
    $K=K_{p}K_{i}(s)$. There are two key design parameters for loop shaping: $\omega_{L}$
    and $\beta_{b}$. Your goal is to find a proper combination of these two parameters
    such that the designed controller achieves satisfactory performance, such as phase
    margin and settling time requirements. You will also be provided by a list of
    your history design and the corresponding performance if there is any. And you
    should improve your previous design based on the user request. Note: If you could
    not see an improvement within 3 rounds, to make the tuning process more efficient,
    please be more aggressive and try to increase design step based on the previous
    designs.</foreignobject></g></g></svg><svg class="ltx_picture" height="179.77"
    id="A5.SS1.p5.pic1" overflow="visible" version="1.1" width="600"><g fill="#000000"
    stroke="#000000" stroke-width="0.4pt" transform="translate(0,179.77) matrix(1
    0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 161.56)"><foreignobject
    color="#FFFFFF" height="12.3" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="556.69">Task-Specific Agent Response Instruction</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="130.07" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">## Response Instructions: Please provide the controller
    design to the given plant G(s). Your response should strictly adhere to the following
    JSON format, which includes two keys: ’design’ and ’parameter’. The ’design’ key
    can contain design steps and rationale about the parameters choice or the reason
    to update specific parameter based on the previous design and performance, and
    the ’parameter’ key should ONLY provide a list of numerical values of the chosen
    parameters. ### Example of the expected JSON format:'
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0]</foreignobject></g></g></svg> <svg class="ltx_picture" height="441.79"
    id="A5.SS1.p4.pic1" overflow="visible" version="1.1" width="600"><g fill="#000000"
    stroke="#000000" stroke-width="0.4pt" transform="translate(0,441.79) matrix(1
    0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 422.05)"><foreignobject
    color="#FFFFFF" height="13.84" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="556.69">任务特定代理提示（一级稳定）</foreignobject></g> <g fill-opacity="1.0"
    transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject color="#000000"
    height="390.55" overflow="visible" transform="matrix(1 0 0 -1 0 16.6)" width="556.69">你是一个控制工程专家，目标是使用回路整形方法为具有传递函数$G(s)$的系统设计一个控制器$K(s)$。回路传递函数为$L(s)=G(s)K(s)$，以下是基本的回路整形步骤：[步骤1]
    为给定的植物$G(s)$选择一个合适的回路带宽$\omega_{L}$。注意：增加$\omega_{L}$会使响应更快，因此结算时间较小。另一方面，减小$\omega_{L}$会导致较大的结算时间。[步骤2]
    计算比例增益$K_{p}$，以设置所需的回路带宽$\omega_{L}$，其中$K_{p}=\pm 1/|G(j\omega_{L})|$。[步骤3] 设计一个积分增益，以提高低频回路增益，从而改善低频的跟踪和扰动抑制性能。具体来说，选择$K_{i}(s)=(\beta_{b}s+\omega_{L})/(s\sqrt{\beta_{b}^{2}+1})$，其中$\beta\geq
    0$。一个合理的初始选择是$\beta_{b}=\sqrt{10}$。注意：减小beta会：（i）增加低频增益并减少高频增益，从而改善跟踪和噪声抑制性能；（ii）减少回路交叉点的相位，从而降低鲁棒性。因此，只有在回路能够容忍相位减少的情况下，才应使用较小的$\beta_{b}$。另一方面，增加beta将增加相位裕度。最终控制器为$K=K_{p}K_{i}(s)$。回路整形的两个关键设计参数是$\omega_{L}$和$\beta_{b}$。你的目标是找到这两个参数的合适组合，使得设计的控制器能够实现令人满意的性能，如相位裕度和结算时间要求。你还将被提供一份历史设计及其对应的性能（如果有）。你应该根据用户的要求改进先前的设计。注意：如果在三轮调整内未看到改进，为了提高调试效率，请更加激进，并尝试根据之前的设计增加设计步长。</foreignobject></g></g></svg><svg
    class="ltx_picture" height="179.77" id="A5.SS1.p5.pic1" overflow="visible" version="1.1"
    width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt" transform="translate(0,179.77)
    matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0
    21.65 161.56)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">任务特定代理响应说明</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="130.07" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">## 响应说明：请为给定的植物$G(s)$提供控制器设计。你的响应应严格遵循以下JSON格式，包含两个键：''design''和''parameter''。''design''键可以包含设计步骤以及关于参数选择的理由或基于先前设计和性能更新特定参数的原因；''parameter''键应仅提供所选参数的数值列表。###
    预期的JSON格式示例：</foreignobject></g></g></svg>'
- en: '[PRE1]</foreignobject></g></g></svg>'
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]</foreignobject></g></g></svg>'
- en: In the above, we have provide a guideline to design a loop-shaping controller
    for the first-order stable systems along with the parameter tuning instructions
    (highlighted in purple) to help LLM agent perform tuning task.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述内容中，我们提供了为一阶稳定系统设计环路整形控制器的指南，并附有参数调整说明（以紫色突出显示），以帮助LLM代理执行调优任务。
- en: E.2 Full Prompts for Baselines
  id: totrans-418
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: E.2 基准的完整提示
- en: In this section, we present the full prompt used to measure baseline approaches.
    We evaluate the designed controller by requesting specific output format so that
    we can extract the controller parameters.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们展示了用于衡量基准方法的完整提示。我们通过请求特定的输出格式来评估设计的控制器，以便提取控制器参数。
- en: '<svg class="ltx_picture" height="182" id="A5.SS2.p2.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,182) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 163.79)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">Zero-shot prompt CoT</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="132.3" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="556.69">You are a control engineer expert, and your goal is to design
    a controller $K(s)$ for a system with transfer function $G(s)$. Please design
    the controller for the following system: $G(s)=\frac{19.95}{s+0.4}.$ Design the
    controller to meet the following specifications: Phase margin greater or equal
    71.54 degrees, Settling time greater or equal 0.0048 sec, Settling time should
    also be less or equal to 3.7264 sec, Steady state error less or equal 0.0001.
    Please perform the design process step by step.'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: <svg class="ltx_picture" height="182" id="A5.SS2.p2.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,182) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 163.79)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">Zero-shot提示CoT</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="132.3" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="556.69">您是控制工程专家，您的目标是为具有传递函数$G(s)$的系统设计一个控制器$K(s)$。请为以下系统设计控制器：$G(s)=\frac{19.95}{s+0.4}$。设计控制器以满足以下规格：相位裕度大于或等于71.54度，稳态时间大于或等于0.0048秒，稳态时间还应小于或等于3.7264秒，稳态误差小于或等于0.0001。请逐步执行设计过程。</foreignobject></g></g></svg>
- en: Zero-shot prompt is almost identical to the zero-shot CoT without asking the
    LLM to perform the design process step by step explicitly.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 零-shot提示几乎与零-shot CoT相同，区别在于它不要求LLM明确逐步执行设计过程。
- en: '<svg class="ltx_picture" height="464.27" id="A5.SS2.p4.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,464.27) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 446.07)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">Few-shot CoT prompt</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="414.57" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">You are a control engineer expert, and your goal is to
    design a controller $K(s)$ for a system with transfer function $G(s)$. To help
    you complete the task, we provide the following demonstration example: ## Example
    1 Design a controller for the first-order system $G(s)={7}/(s+3).$ Design the
    controller to meet the following specifications: Phase margin greater or equal
    90 degrees, Settling time greater or equal 3 sec, Settling time should also be
    less or equal to 6 sec, Steady state error less or equal 0.0001. A successful
    controller design is $K(s)=(1.917s+1.818)/3.317s$. Let’s design the controller
    step by step: The plant G(s) has a pole at $s=-3\,\mathrm{rad}/\sec$. To meet
    the specified requirements of phase margin, settling time, and steady state error.
    We first select a crossover frequency $\omega_{L}=3\,\mathrm{rad}/\sec$ to achieve
    desired response. Then the controller gain is selected as $K_{g}=1/|G(j\omega_{L})|=0.6$.
    Then we choose the integral boost $K_{b}(s)=(\beta_{b}s+\omega_{b})/\sqrt{\beta_{b}^{2}+1}s$
    with $\beta_{b}=\sqrt{10}$ and $\omega_{b}=\omega_{L}=15$. Therefore, the final
    controller $K(s)=K_{g}K_{b}(s)=(1.917s+1.818)/3.317s$. ## Example 2 … Now please
    design the controller for the following system: $G(s)=\frac{19.95}{s+0.4}.$ Design
    the controller to meet the following specifications: Phase margin greater or equal
    71.54 degrees, Settling time greater or equal 0.0048 sec, Settling time should
    also be less or equal to 3.7264 sec, Steady state error less or equal 0.0001.
    Please perform the design process step by step.'
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: <svg class="ltx_picture" height="464.27" id="A5.SS2.p4.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,464.27) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 21.65 446.07)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="556.69">少量链式推理提示</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 21.65 13.78)"><foreignobject
    color="#000000" height="414.57" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="556.69">你是一个控制工程专家，你的目标是为一个传递函数为$G(s)$的系统设计一个控制器$K(s)$。为了帮助你完成任务，我们提供以下示范例子：##
    示例 1 设计一个一阶系统$G(s)={7}/(s+3)$的控制器。设计控制器以满足以下要求：相位裕度大于或等于90度，稳态时间大于或等于3秒，稳态时间也应小于或等于6秒，稳态误差小于或等于0.0001。成功的控制器设计为$K(s)=(1.917s+1.818)/3.317s$。让我们一步一步设计控制器：植物$G(s)$在$s=-3\,\mathrm{rad}/\sec$处有一个极点。为了满足相位裕度、稳态时间和稳态误差的指定要求，我们首先选择交叉频率$\omega_{L}=3\,\mathrm{rad}/\sec$来实现期望的响应。然后选择控制器增益$K_{g}=1/|G(j\omega_{L})|=0.6$。接着选择积分增益$K_{b}(s)=(\beta_{b}s+\omega_{b})/\sqrt{\beta_{b}^{2}+1}s$，其中$\beta_{b}=\sqrt{10}$和$\omega_{b}=\omega_{L}=15$。因此，最终控制器$K(s)=K_{g}K_{b}(s)=(1.917s+1.818)/3.317s$。##
    示例 2 … 现在，请为以下系统设计控制器：$G(s)=\frac{19.95}{s+0.4}$。设计控制器以满足以下要求：相位裕度大于或等于71.54度，稳态时间大于或等于0.0048秒，稳态时间也应小于或等于3.7264秒，稳态误差小于或等于0.0001。请一步一步进行设计过程。</foreignobject></g>
- en: Few-shot prompt is almost identical to the few-shot CoT without detailed reasoning
    steps and asking the LLM to perform the design process step by step explicitly.
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: 少量提示几乎与少量链式推理（CoT）相同，区别在于没有详细的推理步骤，也没有明确要求大型语言模型（LLM）一步一步地执行设计过程。
- en: Appendix F A demo of the design process
  id: totrans-424
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录F 设计过程的示范
- en: 'In this section, we present a step-by-step demo of the ControlAgent design
    process for an illustrative control task. The goal is to design a controller for
    a given dynamical system that satisfies specific performance requirements, including
    settling time and phase margin. The design process begins by providing ControlAgent
    with the initial system models and desired performance criteria. The central agent
    first performs high-level task analysis and assign the task to a task-specific
    LLM agent, who then iteratively refines its controller design. At each iteration,
    ControlAgent evaluates the proposed design against the desired criteria and, if
    necessary, adjusts the controller parameters based on the observed performance.
    The iterative refinement continues until a design that meets all requirements
    is achieved or the maximum iteration number is achieved. Table [9](https://arxiv.org/html/2410.19811v1#A6.T9
    "Table 9 ‣ Appendix F A demo of the design process ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")
    shows a breakdown of LLM agents in ControlAgent.'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: '在本节中，我们展示了针对一个示例控制任务的ControlAgent设计过程的逐步演示。目标是为给定的动态系统设计一个满足特定性能要求的控制器，包括稳定时间和相位裕度。设计过程首先向ControlAgent提供初始的系统模型和期望的性能标准。中央代理首先执行高层任务分析，并将任务分配给特定任务的LLM代理，然后该代理迭代地改进其控制器设计。在每次迭代中，ControlAgent都会根据期望的标准评估提出的设计，并在必要时根据观察到的性能调整控制器参数。迭代改进将继续进行，直到获得满足所有要求的设计，或达到最大迭代次数为止。表[9](https://arxiv.org/html/2410.19811v1#A6.T9
    "Table 9 ‣ Appendix F A demo of the design process ‣ ControlAgent: Automating
    Control System Design via Novel Integration of LLM Agents and Domain Expertise")展示了ControlAgent中LLM代理的分类。'
- en: '| LLM Agents | Role |'
  id: totrans-426
  prefs: []
  type: TYPE_TB
  zh: '| LLM代理 | 角色 |'
- en: '| Central Agent | High-level task analysis and task distribution |'
  id: totrans-427
  prefs: []
  type: TYPE_TB
  zh: '| 中央代理 | 高层任务分析和任务分配 |'
- en: '| Task-Specific Agent 1 | Controller design for first-order stable system |'
  id: totrans-428
  prefs: []
  type: TYPE_TB
  zh: '| 任务特定代理1 | 针对一阶稳定系统的控制器设计 |'
- en: '| Task-Specific Agent 2 | Controller design for first-order unstable system
    |'
  id: totrans-429
  prefs: []
  type: TYPE_TB
  zh: '| 任务特定代理2 | 针对一阶不稳定系统的控制器设计 |'
- en: '| Task-Specific Agent 3 | Controller design for second-order stable system
    |'
  id: totrans-430
  prefs: []
  type: TYPE_TB
  zh: '| 任务特定代理3 | 针对二阶稳定系统的控制器设计 |'
- en: '| Task-Specific Agent 4 | Controller design for second-order unstable system
    |'
  id: totrans-431
  prefs: []
  type: TYPE_TB
  zh: '| 任务特定代理4 | 针对二阶不稳定系统的控制器设计 |'
- en: '| Task-Specific Agent 5 | Controller design for first-order system with time
    delay |'
  id: totrans-432
  prefs: []
  type: TYPE_TB
  zh: '| 任务特定代理5 | 针对具有时间延迟的一阶系统的控制器设计 |'
- en: '| Task-Specific Agent 6 | Controller design for higher-order system |'
  id: totrans-433
  prefs: []
  type: TYPE_TB
  zh: '| 任务特定代理6 | 针对高阶系统的控制器设计 |'
- en: 'Table 9: Overview of the LLM agents and their roles in ControlAgent.'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 表9：LLM代理及其在ControlAgent中的角色概览。
- en: '<svg class="ltx_picture" height="109.4" id="A6.p2.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,109.4) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 92.92)"><foreignobject color="#FFFFFF" height="12.15" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">User Input</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="64.57" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="559.84">Please design the controller for the following system: $G(s)=\frac{19.95}{s+0.3897}.$
    Design the controller to meet the following specifications: • The system should
    be stable and steady state error less or equal 0.0001. • Phase margin greater
    or equal 71.542 degrees, • Settling time greater or equal 0.005 sec, • Settling
    time should also be less or equal to 3.726 sec.<svg class="ltx_picture" height="239.92"
    id="A6.p3.pic1" overflow="visible" version="1.1" width="600"><g fill="#000000"
    stroke="#000000" stroke-width="0.4pt" transform="translate(0,239.92) matrix(1
    0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 223.29)"><foreignobject
    color="#FFFFFF" height="12.3" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="559.84">Central Agent Output</foreignobject></g> <g fill-opacity="1.0"
    transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject color="#000000"
    height="194.95" overflow="visible" transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task
    Requirement: The system provided is a first-order stable system represented by
    the transfer function $\frac{19.95}{(s+0.3897)}$. The control design must ensure
    a phase margin of at least 71.542 degrees, a settling time between 0.005 sec and
    3.726 sec, and a steady state error of less than or equal to 0.0001. Task Analysis:
    The given transfer function, $\frac{19.95}{(s+0.3897)}$, clearly indicates a first-order
    system due to the presence of a single $s$ term in the denominator. The positive
    coefficient of s (0.3897) in the denominator suggests that the system is stable.
    The requirements for phase margin, settling time, and steady state error are specific
    performance criteria that need to be met through appropriate controller design.
    Given the nature of the system as first-order and stable, Agent 1, who specializes
    in first-order stable systems, is the most suitable choice for designing the required
    controller. Agent: Agent 1 for first-order stable systems controller design.</foreignobject></g></g></svg>'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: <svg class="ltx_picture" height="109.4" id="A6.p2.pic1" overflow="visible" version="1.1"
    width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt" transform="translate(0,109.4)
    matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0
    20.08 92.92)"><foreignobject color="#FFFFFF" height="12.15" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">用户输入</foreignobject></g> <g
    fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="64.57" overflow="visible" transform="matrix(1 0 0 -1 0
    16.6)" width="559.84">请为以下系统设计控制器：$G(s)=\frac{19.95}{s+0.3897}$。设计控制器以满足以下规格：•
    系统应稳定且稳态误差小于或等于 0.0001。• 相位裕度大于或等于 71.542 度，• 阻尼时间大于或等于 0.005 秒，• 阻尼时间也应小于或等于
    3.726 秒。<svg class="ltx_picture" height="239.92" id="A6.p3.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,239.92) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 223.29)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">中央代理输出</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="194.95" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">任务要求：所提供的系统是由传递函数$\frac{19.95}{(s+0.3897)}$表示的一阶稳定系统。控制设计必须确保相位裕度至少为
    71.542 度，阻尼时间在 0.005 秒到 3.726 秒之间，稳态误差小于或等于 0.0001。任务分析：给定的传递函数$\frac{19.95}{(s+0.3897)}$明确表明这是一个一阶系统，因为分母中只有一个$s$项。分母中$s$的正系数（0.3897）表明该系统是稳定的。相位裕度、阻尼时间和稳态误差的要求是需要通过适当的控制器设计来满足的具体性能标准。鉴于该系统是一阶且稳定，专门设计一阶稳定系统控制器的代理
    1 是设计所需控制器的最佳选择。代理：一阶稳定系统控制器设计的代理 1。</foreignobject></g></g></svg>
- en: In the outputs of the central agent, one can see that the central agent is able
    to perform an accurate high-level task analysis and assign the task to the corresponding
    task-specific agent accurately.
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: 在中央代理的输出中，可以看到中央代理能够执行准确的高层任务分析，并将任务准确分配给相应的特定任务代理。
- en: '<svg class="ltx_picture" height="223.32" id="A6.p5.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,223.32) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 206.69)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task-Specific Agent Output</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="178.34" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">Iteration 1: To design the controller $K(s)$ for the given
    plant $G(s)=19.95/(s+0.3897)$, we will follow the loop shaping method. First,
    we need to choose a proper loop bandwidth $\omega_{L}$. Given the settling time
    requirements, we aim for a moderate $\omega_{L}$ to balance between fast response
    and robustness. Let’s start with $\omega_{L}=1\,rad/s$, which is a reasonable
    initial choice for a system with a pole at $s=-0.3897$. Next, we calculate the
    proportional gain $K_{p}$ to set the desired loop bandwidth. At $\omega_{L}=1$,
    $|G(j1)|=19.95/\sqrt{1^{2}+0.3897^{2}}=19.95/1.073=18.6$. Therefore, $K_{p}=1/18.6=0.0538$.
    For the integral boost, we select $\beta_{b}=\sqrt{10}\approx 3.1623$ to start
    with, which provides a good balance between low-frequency gain and phase margin.
    The integral boost $K_{i}(s)$ is then $(3.1623s+1)/(s\sqrt{3.1623^{2}+1})$. The
    final controller is $K(s)=K_{p}K_{i}(s)$. This initial design aims to meet the
    phase margin and settling time requirements while ensuring a low steady-state
    error.</foreignobject></g></g></svg>'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: '<svg class="ltx_picture" height="223.32" id="A6.p5.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,223.32) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 206.69)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task-Specific Agent Output</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="178.34" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">Iteration 1: To design the controller $K(s)$ for the given
    plant $G(s)=19.95/(s+0.3897)$, we will follow the loop shaping method. First,
    we need to choose a proper loop bandwidth $\omega_{L}$. Given the settling time
    requirements, we aim for a moderate $\omega_{L}$ to balance between fast response
    and robustness. Let’s start with $\omega_{L}=1\,rad/s$, which is a reasonable
    initial choice for a system with a pole at $s=-0.3897$. Next, we calculate the
    proportional gain $K_{p}$ to set the desired loop bandwidth. At $\omega_{L}=1$,
    $|G(j1)|=19.95/\sqrt{1^{2}+0.3897^{2}}=19.95/1.073=18.6$. Therefore, $K_{p}=1/18.6=0.0538$.
    For the integral boost, we select $\beta_{b}=\sqrt{10}\approx 3.1623$ to start
    with, which provides a good balance between low-frequency gain and phase margin.
    The integral boost $K_{i}(s)$ is then $(3.1623s+1)/(s\sqrt{3.1623^{2}+1})$. The
    final controller is $K(s)=K_{p}K_{i}(s)$. This initial design aims to meet the
    phase margin and settling time requirements while ensuring a low steady-state
    error.</foreignobject></g></g></svg>'
- en: In the first iteration, Task-specific agent 1 is able to follow the design instruction
    and come up with a reasonable initial controller.
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一次迭代中，特定任务的代理 1 能够遵循设计指令并提出一个合理的初始控制器。
- en: '<svg class="ltx_picture" height="173.51" id="A6.p7.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,173.51) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 156.88)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task-Specific Agent Output</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="128.53" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">Iteration 2: In the first design, the settling time was
    too long, exceeding the maximum requirement of 3.726 seconds. To reduce the settling
    time, we need to increase the loop bandwidth $\omega_{L}$. This will make the
    system response faster. Let’s increase $\omega_{L}$ to 2, which should help in
    reducing the settling time. We will keep $\beta_{b}$ at 3.1623 initially to maintain
    a good balance between low-frequency gain and phase margin. After adjusting $\omega_{L}$,
    we will calculate the proportional gain $K_{p}$ to set the desired loop bandwidth.
    The integral boost $K_{i}$ will be designed using the updated $\omega_{L}$ and
    the initial $\beta_{b}$ value.</foreignobject></g></g></svg>'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: '<svg class="ltx_picture" height="173.51" id="A6.p7.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,173.51) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 156.88)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task-Specific Agent Output</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="128.53" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">Iteration 2: In the first design, the settling time was
    too long, exceeding the maximum requirement of 3.726 seconds. To reduce the settling
    time, we need to increase the loop bandwidth $\omega_{L}$. This will make the
    system response faster. Let’s increase $\omega_{L}$ to 2, which should help in
    reducing the settling time. We will keep $\beta_{b}$ at 3.1623 initially to maintain
    a good balance between low-frequency gain and phase margin. After adjusting $\omega_{L}$,
    we will calculate the proportional gain $K_{p}$ to set the desired loop bandwidth.
    The integral boost $K_{i}$ will be designed using the updated $\omega_{L}$ and
    the initial $\beta_{b}$ value.</foreignobject></g></g></svg>'
- en: For iteration 2, the agent is able to identifying the issues in the previous
    design and come up with a correct tuning direction, i.e., increasing $\omega_{L}$
    to reduce the settling time.
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二次迭代中，代理能够识别出前一设计中的问题，并提出正确的调节方向，即增大$\omega_{L}$以减小稳定时间。
- en: '<svg class="ltx_picture" height="206.72" id="A6.p9.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,206.72) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 190.09)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task-Specific Agent Output</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="161.74" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">Iteration 3: In the previous designs, the settling time
    was too long, exceeding the maximum requirement of 3.726 seconds. To reduce the
    settling time, we need to increase the loop bandwidth $\omega_{L}$. In Design
    2, $\omega_{L}$ was set to 2, resulting in a settling time of approximately 3.993
    seconds. To further reduce the settling time, I will increase $\omega_{L}$ to
    3\. This should help bring the settling time within the desired range. The $\beta_{b}$
    parameter, which affects the phase margin, was previously set to 3.1623\. Since
    the phase margin in Design 2 was 83.4768 degrees, which is well above the required
    71.5421 degrees, we can afford to slightly reduce $\beta_{b}$ to 2.5 to maintain
    a good balance between phase margin and settling time. This adjustment should
    help achieve the desired performance specifications.</foreignobject></g></g></svg>'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: '<svg class="ltx_picture" height="206.72" id="A6.p9.pic1" overflow="visible"
    version="1.1" width="600"><g fill="#000000" stroke="#000000" stroke-width="0.4pt"
    transform="translate(0,206.72) matrix(1 0 0 -1 0 0)"><g fill-opacity="1.0" transform="matrix(1.0
    0.0 0.0 1.0 20.08 190.09)"><foreignobject color="#FFFFFF" height="12.3" overflow="visible"
    transform="matrix(1 0 0 -1 0 16.6)" width="559.84">Task-Specific Agent Output</foreignobject></g>
    <g fill-opacity="1.0" transform="matrix(1.0 0.0 0.0 1.0 20.08 12.2)"><foreignobject
    color="#000000" height="161.74" overflow="visible" transform="matrix(1 0 0 -1
    0 16.6)" width="559.84">Iteration 3: In the previous designs, the settling time
    was too long, exceeding the maximum requirement of 3.726 seconds. To reduce the
    settling time, we need to increase the loop bandwidth $\omega_{L}$. In Design
    2, $\omega_{L}$ was set to 2, resulting in a settling time of approximately 3.993
    seconds. To further reduce the settling time, I will increase $\omega_{L}$ to
    3\. This should help bring the settling time within the desired range. The $\beta_{b}$
    parameter, which affects the phase margin, was previously set to 3.1623\. Since
    the phase margin in Design 2 was 83.4768 degrees, which is well above the required
    71.5421 degrees, we can afford to slightly reduce $\beta_{b}$ to 2.5 to maintain
    a good balance between phase margin and settling time. This adjustment should
    help achieve the desired performance specifications.</foreignobject></g></g></svg>'
- en: The agent further increases $\omega_{L}$ to reduce the settling time. Additionally,
    upon evaluating the previous design, the agent observes that it adequately satisfies
    the phase margin. Consequently, it can fine-tune $\beta_{b}$ to maintain an optimal
    balance between system performance and robustness. After iteration 3, the task-specific
    agent produces a successful controller design, which is verified by the Python
    computation agent. The final controller is returned to the user as the output
    of ControlAgent.</foreignobject></g></g></svg></foreignobject></g></g></svg></foreignobject></g></g></svg>
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 代理进一步增大$\omega_{L}$以缩短稳定时间。此外，在评估前一设计后，代理观察到该设计已经充分满足相位裕度。因此，代理可以微调$\beta_{b}$，以在系统性能和鲁棒性之间保持最佳平衡。在第三次迭代后，任务特定的代理成功地生成了控制器设计，并通过Python计算代理进行了验证。最终的控制器作为ControlAgent的输出返回给用户。
