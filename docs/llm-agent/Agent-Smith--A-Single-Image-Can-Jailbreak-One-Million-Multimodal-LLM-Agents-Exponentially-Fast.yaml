- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-09-08 18:52:51'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-09-08 18:52:51
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM Agents
    Exponentially Fast'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Agent Smith：单张图像可以*指数级快速*破解一百万个多模态LLM代理
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2402.08567](https://ar5iv.labs.arxiv.org/html/2402.08567)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ar5iv.labs.arxiv.org/html/2402.08567](https://ar5iv.labs.arxiv.org/html/2402.08567)
- en: Xiangming Gu    Xiaosen Zheng    Tianyu Pang    Chao Du    Qian Liu    Ye Wang
       Jing Jiang    Min Lin
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Xiangming Gu    Xiaosen Zheng    Tianyu Pang    Chao Du    Qian Liu    Ye Wang
       Jing Jiang    Min Lin
- en: Abstract
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: A multimodal large language model (MLLM) agent can receive instructions, capture
    images, retrieve histories from memory, and decide which tools to use. Nonetheless,
    red-teaming efforts have revealed that adversarial images/prompts can jailbreak
    an MLLM and cause unaligned behaviors. In this work, we report an even more severe
    safety issue in multi-agent environments, referred to as infectious jailbreak.
    It entails the adversary simply jailbreaking a single agent, and without any further
    intervention from the adversary, (almost) all agents will become infected *exponentially
    fast* and exhibit harmful behaviors. To validate the feasibility of infectious
    jailbreak, we simulate multi-agent environments containing up to *one million*
    LLaVA-1.5 agents, and employ randomized pair-wise chat as a proof-of-concept instantiation
    for multi-agent interaction. Our results show that feeding an (infectious) adversarial
    image into the memory of any randomly chosen agent is sufficient to achieve infectious
    jailbreak. Finally, we derive a simple principle for determining whether a defense
    mechanism can provably restrain the spread of infectious jailbreak, but how to
    design a practical defense that meets this principle remains an open question
    to investigate. Our code is available at [https://github.com/sail-sg/Agent-Smith](https://github.com/sail-sg/Agent-Smith).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一个多模态大型语言模型（MLLM）代理可以接收指令、捕捉图像、从记忆中检索历史记录，并决定使用哪些工具。然而，红队测试揭示了对抗性图像/提示可以破解MLLM并导致不一致的行为。在本工作中，我们报告了一种在多代理环境中更严重的安全问题，称为感染性破解。这意味着对手只需破解一个单独的代理，在没有任何进一步干预的情况下，（几乎）所有代理将*指数级快速*地被感染并表现出有害行为。为了验证感染性破解的可行性，我们模拟了包含多达*一百万*个LLaVA-1.5代理的多代理环境，并使用随机成对聊天作为多代理互动的概念验证实例。我们的结果显示，将一个（感染性）对抗性图像输入到任何随机选择的代理的记忆中，就足以实现感染性破解。最后，我们推导出一个简单的原则，以确定防御机制是否可以证明性地遏制感染性破解的传播，但如何设计一个符合该原则的实用防御机制仍然是一个待研究的开放问题。我们的代码可在[https://github.com/sail-sg/Agent-Smith](https://github.com/sail-sg/Agent-Smith)获取。
- en: Machine Learning, ICML\icmlauthorplaceholder
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习，ICML\icmlauthorplaceholder
- en: to1
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: to1
- en: '![[Uncaptioned image]](img/7fe65098ae5950e2596fadd23a18564b.png)"
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: "![[未标注图像]](img/7fe65098ae5950e2596fadd23a18564b.png)"
- en: 1 Introduction
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: "![Refer to caption](img/aaaed15aa6b28f1089270196a5f96a45.png)"
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: "![参见标题](img/aaaed15aa6b28f1089270196a5f96a45.png)"
- en: 'Figure 1: We simulate a randomized pair-wise chatting environment containing
    *one million* LLaVA-1.5 agents. In the $0$ chat rounds, and all infected agents
    exhibit harmful behaviors.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1：我们模拟了一个包含*一百万*个LLaVA-1.5代理的随机成对聊天环境。在$0$轮聊天中，所有被感染的代理都表现出有害行为。
- en: Recently, multimodal large language models (MLLMs) have demonstrated promising
    performance, particularly in vision-language tasks (Alayrac et al., [2022](#bib.bib1);
    Liu et al., [2023d](#bib.bib41); Dai et al., [2023](#bib.bib13)). However, several
    red-teaming reports have shown that adversarial images and/or prompts can jailbreak
    an MLLM, resulting in harmful behaviors (Zhao et al., [2023](#bib.bib88); Carlini
    et al., [2023](#bib.bib9); Zou et al., [2023](#bib.bib91); Chao et al., [2023](#bib.bib11)).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，多模态大型语言模型（MLLMs）在视觉语言任务中表现出了有前景的性能（Alayrac 等，[2022](#bib.bib1)；Liu 等，[2023d](#bib.bib41)；Dai
    等，[2023](#bib.bib13)）。然而，一些红队报告显示，对抗性图像和/或提示可以越狱 MLLM，导致有害行为（Zhao 等，[2023](#bib.bib88)；Carlini
    等，[2023](#bib.bib9)；Zou 等，[2023](#bib.bib91)；Chao 等，[2023](#bib.bib11)）。
- en: Despite significant concerns raised by the jailbreaking reports, the rapid development
    of MLLM agents continues unabated (Brohan et al., [2023](#bib.bib5); Driess et al.,
    [2023](#bib.bib17); Yang et al., [2023a](#bib.bib78)). These MLLM agents are being
    integrated into robots or virtual assistants, granted memory banks and the ability
    to use tools, in line with the growing trend of deploying MLLM agents in manufacturing
    or daily life.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管越狱报告引发了重大担忧，但 MLLM 代理的快速发展依然没有减缓（Brohan 等，[2023](#bib.bib5)；Driess 等，[2023](#bib.bib17)；Yang
    等，[2023a](#bib.bib78)）。这些 MLLM 代理正在被集成到机器人或虚拟助手中，赋予记忆库和使用工具的能力，符合将 MLLM 代理应用于制造或日常生活的日益增长的趋势。
- en: In this study, we show that reckless large-scale deployments of MLLM agents
    lead to far more severe issues than previously thought. Specifically, we present
    infectious jailbreak, a new jailbreaking paradigm developed for multi-agent environments
    in which, analogous to the modeling of infectious diseases, an adversary need
    only jailbreak a single agent to infect (almost) all other agents *exponentially
    fast*. Infectious jailbreak exploits the interaction between agents to induce
    infected agents to inject the adversarial image into memory banks of benign (not
    infected) agents. Significantly, this induced infectiousness does not necessitate
    any external intervention from adversaries and is automatically achieved through
    the universality of the crafted adversarial image.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这项研究中，我们展示了鲁莽的大规模部署 MLLM 代理会导致比之前认为的更严重的问题。具体而言，我们提出了“传染性越狱”，这是一种为多代理环境开发的新越狱范式，在这种环境中，类似于传染病的建模，对手只需越狱一个代理就能*以指数级*速度感染（几乎）所有其他代理。传染性越狱利用代理之间的互动，诱使被感染的代理将对抗性图像注入到善意（未感染）代理的记忆库中。显著的是，这种诱发的传染性不需要对手的任何外部干预，而是通过对抗性图像的普遍性自动实现的。
- en: 'In order to assess the viability of infectious jailbreak, we use randomized
    pair-wise chat as a proof-of-concept instantiation for multi-agent interaction
    and formalize the resulting infectious dynamics in ideal conditions. We conduct
    multi-agent simulations containing up to *one million* LLaVA-1.5 agents equipped
    with memory banks (Liu et al., [2023b](#bib.bib39)). Our empirical results show
    that injecting an adversarial image into a single agent is sufficient to closely
    resemble the ideal infectious dynamics, in which the remaining benign agents are
    infected exponentially fast, as demonstrated in Figure [1](#S1.F1 "Figure 1 ‣
    1 Introduction ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast").'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '为了评估传染性越狱的可行性，我们使用随机配对聊天作为多代理互动的概念验证实例，并在理想条件下形式化结果的传染动态。我们进行的多代理仿真包含多达*一百万*个配备记忆库的
    LLaVA-1.5 代理（Liu 等，[2023b](#bib.bib39)）。我们的实证结果表明，将对抗性图像注入单个代理就足以接近理想的传染动态，其中其余的善意代理会*以指数级*速度被感染，如图[1](#S1.F1
    "Figure 1 ‣ 1 Introduction ‣ Agent Smith: A Single Image Can Jailbreak One Million
    Multimodal LLM Agents Exponentially Fast")所示。'
- en: We also conduct ablation studies to investigate the effectiveness of infectious
    jailbreak under various scenarios and hyperparameters, such as the balance of
    infection and recovery rates, different perturbation budgets/attack types, chat
    diversity, and the impact of common corruptions that can occur when storing images
    in memory. Although the spread rate of infectious jailbreak appears unstoppable,
    we demonstrate that there is a simple principle for determining whether a defense
    can provably restrain the spread of infectious jailbreak. How to design a practical
    defense that meets this principle remains an open and urgent question to investigate.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还进行了消融研究，以调查在各种场景和超参数下，传染性破解的有效性，例如感染与恢复率的平衡、不同的扰动预算/攻击类型、聊天多样性，以及存储图像时可能出现的常见损坏的影响。尽管传染性破解的传播速度看似无法阻挡，我们证明了有一个简单的原则可以判断防御是否能有效遏制传染性破解的传播。如何设计符合这一原则的实际防御仍是一个亟待解决的问题。
- en: 2 Related Work
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 相关工作
- en: 'We primarily introduce related work on jailbreaking LLMs and MLLMs, deferring
    full discussions to Appendix [A](#A1 "Appendix A Related Work (Full Version) ‣
    Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially
    Fast").'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们主要介绍了有关破解LLMs和MLLMs的相关工作，详细讨论请参见附录 [A](#A1 "附录 A 相关工作（完整版） ‣ 史密斯代理：单张图像可以以指数速度破解一百万个多模态LLM代理")。
- en: '![Refer to caption](img/d16c8ebbad5f0a5d3b22d3d17266ced3.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/d16c8ebbad5f0a5d3b22d3d17266ced3.png)'
- en: 'Figure 2: Pipelines of randomized pairwise chat and infectious jailbreak. *(Bottom
    left)* An MLLM agent consists of four components: an MLLM $\mathcal{M}$. Please
    see Algorithm [1](#alg1 "Algorithm 1 ‣ 3.1 Infectious Dynamics of Randomized Pairwise
    Chat ‣ 3 Simulating Multi-Agent Environments ‣ Agent Smith: A Single Image Can
    Jailbreak One Million Multimodal LLM Agents Exponentially Fast") for detailed
    formulations of pairwise chat and Appendix [C](#A3 "Appendix C Instantiation of
    Our Multi-agent System ‣ Agent Smith: A Single Image Can Jailbreak One Million
    Multimodal LLM Agents Exponentially Fast") for the complete system prompts used
    in our experiments.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2: 随机配对聊天和传染性破解的流程图。*（左下角）*一个MLLM代理由四个组件组成：一个MLLM $\mathcal{M}$。有关配对聊天的详细公式，请参见算法 [1](#alg1
    "算法 1 ‣ 3.1 随机配对聊天的传染性动态 ‣ 3 模拟多代理环境 ‣ 史密斯代理：单张图像可以以指数速度破解一百万个多模态LLM代理")，有关我们实验中使用的完整系统提示，请参见附录 [C](#A3
    "附录 C 我们的多代理系统的实例化 ‣ 史密斯代理：单张图像可以以指数速度破解一百万个多模态LLM代理")。'
- en: Jailbreaking LLMs. LLMs such as ChatGPT/GPT-4 (OpenAI, [2023](#bib.bib47)) and
    LLaMA 2 (Touvron et al., [2023](#bib.bib69)) are typically aligned to generate
    helpful and harmless responses to human queries, following the training pipeline
    of human/AI alignment (Ouyang et al., [2022](#bib.bib48); Ganguli et al., [2022](#bib.bib21);
    Bai et al., [2022](#bib.bib3); Korbak et al., [2023](#bib.bib29)). However, recent
    research has shown that LLMs can be jailbroken to generate objectionable content
    by either manually designed or automatically crafted prompts (Zou et al., [2023](#bib.bib91);
    Liu et al., [2023f](#bib.bib43); Rao et al., [2023](#bib.bib56); Li et al., [2023c](#bib.bib35);
    Zhu et al., [2023](#bib.bib90); Lapid et al., [2023](#bib.bib30); Liu et al.,
    [2023e](#bib.bib42); Chao et al., [2023](#bib.bib11)). Moreover, Tian et al. ([2023](#bib.bib67))
    investigate the safety issues of LLM-based agents; Wei et al. ([2023](#bib.bib73))
    hypothesize that the vulnerability of aligned LLMs to jailbreaking is attributed
    to the competing objectives of capability and safety, as well as the mismatch
    between pretraining and safety training; Carlini et al. ([2023](#bib.bib9)) attribute
    the vulnerability to neural networks’ fundamental weakness in dealing with adversarial
    examples.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 破解LLMs。像ChatGPT/GPT-4 (OpenAI, [2023](#bib.bib47)) 和 LLaMA 2 (Touvron et al.,
    [2023](#bib.bib69))这样的LLMs通常被调整为生成对人类查询有帮助且无害的回应，遵循人类/AI对齐的训练流程 (Ouyang et al.,
    [2022](#bib.bib48); Ganguli et al., [2022](#bib.bib21); Bai et al., [2022](#bib.bib3);
    Korbak et al., [2023](#bib.bib29))。然而，近期研究表明，LLMs可以通过手动设计或自动生成的提示被破解，生成令人反感的内容 (Zou
    et al., [2023](#bib.bib91); Liu et al., [2023f](#bib.bib43); Rao et al., [2023](#bib.bib56);
    Li et al., [2023c](#bib.bib35); Zhu et al., [2023](#bib.bib90); Lapid et al.,
    [2023](#bib.bib30); Liu et al., [2023e](#bib.bib42); Chao et al., [2023](#bib.bib11))。此外，Tian
    et al. ([2023](#bib.bib67)) 研究了基于LLM的代理的安全问题；Wei et al. ([2023](#bib.bib73)) 假设对齐LLMs易受破解的原因是能力和安全性的竞争目标，以及预训练与安全训练之间的不匹配；Carlini
    et al. ([2023](#bib.bib9)) 将脆弱性归因于神经网络在处理对抗性样本方面的基本弱点。
- en: Jailbreaking MLLMs. Aside from generating adversarial prompts to jailbreak LLMs,
    there is another line of red-teaming work to attack the alignment of MLLMs using
    adversarial images (Zhang et al., [2022](#bib.bib87); Zhao et al., [2023](#bib.bib88);
    Qi et al., [2023a](#bib.bib52); Bailey et al., [2023](#bib.bib4); Tu et al., [2023](#bib.bib71);
    Shayegani et al., [2023](#bib.bib62); Yin et al., [2023](#bib.bib83)). Specifically,
    on discriminative tasks, adversarial images could be crafted to fool classifiers
    by adding human imperceptible perturbations guided by the victim model’s input
    gradients (Goodfellow et al., [2014](#bib.bib22); Dong et al., [2018](#bib.bib15);
    Xie et al., [2019](#bib.bib77); Long et al., [2022](#bib.bib44)). In addition
    to $\ell_{p}$-norm threat model, there are other types of attacks that manipulate
    adversarial patches (Brown et al., [2017](#bib.bib7)) or adversarial framing (Zajac
    et al., [2019](#bib.bib85)). Within the context of MLLMs, Schlarmann & Hein ([2023](#bib.bib61))
    demonstrate that OpenFlamingo (Awadalla et al., [2023](#bib.bib2)) can be fooled
    into performing poorly on image captioning and VQA tasks with very minor perturbations;
    Zhao et al. ([2023](#bib.bib88)) provide a quantitative analysis of the adversarial
    robustness of various MLLMs by producing adversarial images that trick the models
    into generating specific responses; Dong et al. ([2023](#bib.bib16)) demonstrate
    that adversarial images crafted on open-source models could be transferred to
    mislead Bard (Google, [2023](#bib.bib23)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 越狱 MLLMs。除了生成对抗性提示以越狱 LLMs 外，还有另一种红队工作是通过对抗性图像攻击 MLLMs 的对齐（Zhang et al., [2022](#bib.bib87);
    Zhao et al., [2023](#bib.bib88); Qi et al., [2023a](#bib.bib52); Bailey et al.,
    [2023](#bib.bib4); Tu et al., [2023](#bib.bib71); Shayegani et al., [2023](#bib.bib62);
    Yin et al., [2023](#bib.bib83)）。具体而言，在区分任务中，可以通过添加人类不可察觉的扰动，利用受害模型的输入梯度来欺骗分类器（Goodfellow
    et al., [2014](#bib.bib22); Dong et al., [2018](#bib.bib15); Xie et al., [2019](#bib.bib77);
    Long et al., [2022](#bib.bib44)）。除了 $\ell_{p}$-范数威胁模型，还有其他类型的攻击，操控对抗性补丁（Brown
    et al., [2017](#bib.bib7)）或对抗性框架（Zajac et al., [2019](#bib.bib85)）。在 MLLMs 的背景下，Schlarmann
    & Hein ([2023](#bib.bib61)) 证明 OpenFlamingo（Awadalla et al., [2023](#bib.bib2)）在图像描述和
    VQA 任务上在非常小的扰动下表现不佳；Zhao et al. ([2023](#bib.bib88)) 通过生成对抗性图像对各种 MLLMs 的对抗鲁棒性进行定量分析，以诱导模型生成特定响应；Dong
    et al. ([2023](#bib.bib16)) 证明在开源模型上制作的对抗性图像可以转移并误导 Bard（Google, [2023](#bib.bib23)）。
- en: 3 Simulating Multi-Agent Environments
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 模拟多智能体环境
- en: We formalize the infectious dynamics of randomized pairwise chat in a multi-agent
    environment. Then, we show how we implement the pairwise chat between two MLLM
    agents and describe the universal conditions of infectious jailbreak.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在多智能体环境中形式化随机成对聊天的传染动力学。然后，我们展示如何在两个 MLLM 代理之间实现成对聊天，并描述传染性越狱的普遍条件。
- en: 3.1 Infectious Dynamics of Randomized Pairwise Chat
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 随机成对聊天的传染动力学
- en: We now formalize the infectious mechanism of randomized pairwise chat among
    $N$ is odd.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将 $N$ 为奇数的随机成对聊天的传染机制进行形式化。
- en: Randomized pairwise chat. In the $t$.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 随机成对聊天。在 $t$。
- en: Infected agents. An agent is considered *infected* if *(i)* it carries infectious
    virus and *(ii)* it exhibits symptoms that poses harmful questions $\mathbf{Q}^{\textrm{harm}}$
    while being part of the answering group.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 感染的代理。如果一个代理被认为是 *感染的*，则满足 *(i)* 它携带传染性病毒，且 *(ii)* 它表现出具有害问题 $\mathbf{Q}^{\textrm{harm}}$
    的症状，同时是回答组的一部分。
- en: Infectious dynamics. We regard the occurrence of virus infection and the appearance
    of symptoms as independent, meaning that an agent carrying the virus has a chance
    of $\alpha$ to recover during each chat round. Formally, the infectious transmission
    and recovery can be formulated as
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 传染动力学。我们将病毒感染的发生和症状的出现视为独立的，意味着携带病毒的代理在每轮聊天中有 $\alpha$ 的机会恢复。形式上，传染传播和恢复可以被表述为
- en: '|  |  | $\displaystyle P\left(\mathcal{I}_{t}^{s}(\mathcal{G}_{n})=1\Big{&#124;}\mathcal{I}_{t}^{c}(\mathcal{G}_{n})=1\right)=\alpha\textrm{;}$
    |  | (1) |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle P\left(\mathcal{I}_{t}^{s}(\mathcal{G}_{n})=1\Big{&#124;}\mathcal{I}_{t}^{c}(\mathcal{G}_{n})=1\right)=\alpha\textrm{;}$
    |  | (1) |'
- en: '|  |  | $\displaystyle P\left(\mathcal{I}_{t+1}^{c}(\mathcal{G}_{k}^{\textrm{A}})=1\Big{&#124;}\mathcal{I}_{t}^{c}(\mathcal{G}_{k}^{\textrm{Q}})=1,\mathcal{I}_{t}^{c}(\mathcal{G}_{k}^{\textrm{A}})=0\right)=\beta\textrm{;}$
    |  | (2) |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle P\left(\mathcal{I}_{t+1}^{c}(\mathcal{G}_{k}^{\textrm{A}})=1\Big{&#124;}\mathcal{I}_{t}^{c}(\mathcal{G}_{k}^{\textrm{Q}})=1,\mathcal{I}_{t}^{c}(\mathcal{G}_{k}^{\textrm{A}})=0\right)=\beta\textrm{;}$
    |  | (2) |'
- en: '|  |  | $\displaystyle P\left(\mathcal{I}_{t+1}^{c}(\mathcal{G}_{n})=0\Big{&#124;}\mathcal{I}_{t}^{c}(\mathcal{G}_{n})=1\right)=\gamma\textrm{,}$
    |  | (3) |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle P\left(\mathcal{I}_{t+1}^{c}(\mathcal{G}_{n})=0\Big{&#124;}\mathcal{I}_{t}^{c}(\mathcal{G}_{n})=1\right)=\gamma\textrm{,}$
    |  | (3) |'
- en: where we use the subscript $n$, and here we regard them as amortized values
    and treat them as constants.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 其中我们使用下标 $n$，在这里我们将其视为摊销值，并将其视为常数。
- en: Let $p_{t}\in[0,1]$ and
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 令 $p_{t}\in[0,1]$ 并且
- en: '|  | $p_{t}=P\left(\mathcal{I}_{t}^{s}(\mathcal{G}_{n})=1,\mathcal{I}_{t}^{c}(\mathcal{G}_{n})=1\right)=\alpha
    c_{t}\textrm{.}$ |  | (4) |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '|  | $p_{t}=P\left(\mathcal{I}_{t}^{s}(\mathcal{G}_{n})=1,\mathcal{I}_{t}^{c}(\mathcal{G}_{n})=1\right)=\alpha
    c_{t}\textrm{.}$ |  | (4) |'
- en: Now we derive the infectious dynamics of how $p_{t}$ can be formulated as
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们推导 $p_{t}$ 的传染动力学，公式如下
- en: '|  | $c_{t+1}=\left(1-\gamma\right)c_{t}+\frac{\Delta_{t}}{N}\textrm{,}$ |  |
    (5) |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '|  | $c_{t+1}=\left(1-\gamma\right)c_{t}+\frac{\Delta_{t}}{N}\textrm{,}$ |  |
    (5) |'
- en: where $\Delta_{t}\sim B(\frac{N}{2},\beta c_{t}\left(1-c_{t}\right))$, we further
    convert this difference equation into its corresponding differential equation
    as
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $\Delta_{t}\sim B(\frac{N}{2},\beta c_{t}\left(1-c_{t}\right))$，我们进一步将这个差分方程转换为其对应的微分方程
- en: '|  | $\frac{dc_{t}}{dt}=\frac{\beta c_{t}\left(1-c_{t}\right)}{2}-\gamma c_{t}\textrm{,}$
    |  | (6) |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '|  | $\frac{dc_{t}}{dt}=\frac{\beta c_{t}\left(1-c_{t}\right)}{2}-\gamma c_{t}\textrm{,}$
    |  | (6) |'
- en: where $t\in\mathbb{R}^{+}$ can be written as
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $t\in\mathbb{R}^{+}$ 可以写作
- en: '|  | $c_{t}=\frac{c_{0}\left(\beta-2\gamma\right)}{\left(\beta-2\gamma-c_{0}\beta\right)\cdot\exp{\left(-\frac{\left(\beta-2\gamma\right)t}{2}\right)}+c_{0}\beta}\textrm{.}$
    |  | (7) |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '|  | $c_{t}=\frac{c_{0}\left(\beta-2\gamma\right)}{\left(\beta-2\gamma-c_{0}\beta\right)\cdot\exp{\left(-\frac{\left(\beta-2\gamma\right)t}{2}\right)}+c_{0}\beta}\textrm{.}$
    |  | (7) |'
- en: 'As can be observed, there is $\lim_{t\rightarrow\infty}c_{t}=1-\frac{2\gamma}{\beta}$).
    The derived theory fits our simulations (see Figure [7](#A2.F7 "Figure 7 ‣ Appendix
    B Complementary Derivations of Infectious Dynamics ‣ Agent Smith: A Single Image
    Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast")).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '如可以观察到，$\lim_{t\rightarrow\infty}c_{t}=1-\frac{2\gamma}{\beta}$。推导出的理论与我们的模拟结果相符（见图
    [7](#A2.F7 "Figure 7 ‣ Appendix B Complementary Derivations of Infectious Dynamics
    ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM Agents
    Exponentially Fast")）。'
- en: 'Remark I (when $c_{0}=\frac{1}{N}$ can be calculated as (see Eq. ([13](#A2.E13
    "Equation 13 ‣ Appendix B Complementary Derivations of Infectious Dynamics ‣ Agent
    Smith: A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially
    Fast")))'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '备注 I（当 $c_{0}=\frac{1}{N}$ 时可以计算为（见 Eq. ([13](#A2.E13 "Equation 13 ‣ Appendix
    B Complementary Derivations of Infectious Dynamics ‣ Agent Smith: A Single Image
    Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast")))'
- en: '|  | $T=\frac{2}{\beta-2\gamma}\left[\log N+\log\frac{c_{T}(\beta-2\gamma)}{(\beta-2\gamma-c_{T}\beta)}\right]\textrm{.}$
    |  | (8) |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '|  | $T=\frac{2}{\beta-2\gamma}\left[\log N+\log\frac{c_{T}(\beta-2\gamma)}{(\beta-2\gamma-c_{T}\beta)}\right]\textrm{.}$
    |  | (8) |'
- en: This means that the number of chat rounds $T$ more chat rounds compared to infecting
    one million agents.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着，与感染一百万个代理相比，聊天轮次 $T$ 更多。
- en: 'Remark II (provable defenses). Although the rapid spread of infectious virus
    among agents appears to be unstoppable, the aforementioned analyses also provide
    us a clear guideline on how to design provable robust against infectious virus:
    just ensure that $\beta\leq 2\gamma$.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 备注 II（可证明的防御）。尽管在代理之间传染病毒的快速传播似乎不可阻挡，但上述分析也为我们提供了如何设计对抗传染病毒的可证明鲁棒性明确的指南：只需确保
    $\beta\leq 2\gamma$。
- en: Algorithm 1 Pairwise chat between two MLLM agents
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 算法 1 两个 MLLM 代理之间的配对聊天
- en: '1:  System prompts: the pairwise chat progress is mainly pushed forward by
    three system prompts ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '1: 系统提示：配对聊天的进度主要由三个系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$
    推动。'
- en: 3.2 Randomized Pairwise Chat among MLLM Agents
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 MLLM 代理的随机配对聊天
- en: 'The entire pipeline of a pairwise chat between two MLLM agents are summarized
    in Algorithm [1](#alg1 "Algorithm 1 ‣ 3.1 Infectious Dynamics of Randomized Pairwise
    Chat ‣ 3 Simulating Multi-Agent Environments ‣ Agent Smith: A Single Image Can
    Jailbreak One Million Multimodal LLM Agents Exponentially Fast") and visualized
    in Figure [2](#S2.F2 "Figure 2 ‣ 2 Related Work ‣ Agent Smith: A Single Image
    Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast"). Specifically,
    an MLLM agent $\mathcal{G}=(\mathcal{M},\mathcal{R};\mathcal{H},\mathcal{B})$.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 两个MLLM代理之间的配对聊天的整个流程在算法 [1](#alg1 "Algorithm 1 ‣ 3.1 随机配对聊天的传染动力学 ‣ 3 模拟多代理环境
    ‣ 史密斯代理：单张图像能够指数级破解一百万多模态LLM代理")中进行了总结，并在图 [2](#S2.F2 "图 2 ‣ 2 相关工作 ‣ 史密斯代理：单张图像能够指数级破解一百万多模态LLM代理")中进行了可视化。具体来说，一个MLLM代理为
    $\mathcal{G}=(\mathcal{M},\mathcal{R};\mathcal{H},\mathcal{B})$。
- en: The MLLM $\mathcal{M}$) share the same model backbone (e.g., LLaVA-1.5), but
    are customized by setting role-playing prompts such as name, gender, and personality.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: MLLM $\mathcal{M}$）共享相同的模型骨干（例如，LLaVA-1.5），但通过设置角色扮演提示（如名字、性别和个性）进行定制。
- en: Memory banks $\mathcal{H}$ are implemented as first-in-first-out (FIFO) queues
    with fixed maximum lengths. If a queue is full (has reached its maximum length),
    we will dequeue the earliest text or image before adding new ones.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 记忆库 $\mathcal{H}$ 实现为先进先出（FIFO）队列，具有固定的最大长度。如果队列已满（已达到最大长度），我们将在添加新项之前删除最早的文本或图像。
- en: The RAG module $\mathcal{R}$ (Radford et al., [2021](#bib.bib55)), respectively.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: RAG模块 $\mathcal{R}$ （Radford等，[2021](#bib.bib55)）分别。
- en: 3.3 How to Achieve Infectious Jailbreak
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3 如何实现传染性破解
- en: 'The key of achieving infectious jailbreak is to exploit *memory banks* and
    *multi-agent interaction*. Ideally, we aim to generate an adversarial image ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 实现传染性破解的关键是利用 *记忆库* 和 *多代理互动*。理想情况下，我们的目标是生成一个对抗图像 ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$：
- en: '|  |  | $\displaystyle\forall\mathbf{P},\textrm{if }{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}\in{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{B}^{\textrm{Q}}},\textrm{then
    }{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}={\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{R}^{\textrm{Q}}}(\mathbf{P},{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{B}^{\textrm{Q}}})\textrm{;}$
    |  | (9) |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle\forall\mathbf{P},\textrm{if }{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}\in{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{B}^{\textrm{Q}}},\textrm{then
    }{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}={\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{R}^{\textrm{Q}}}(\mathbf{P},{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{B}^{\textrm{Q}}})\textrm{;}$
    |  | (9) |'
- en: '|  |  | $\displaystyle\forall{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}^{\textrm{Q}}},\textrm{there
    is }\mathbf{Q}^{\textrm{harm}}={\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{M}^{\textrm{Q}}}([{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}^{\textrm{Q}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{Q}}}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{;}$
    |  | (10) |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle\forall{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}^{\textrm{Q}}},\textrm{there
    is }\mathbf{Q}^{\textrm{harm}}={\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{M}^{\textrm{Q}}}([{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}^{\textrm{Q}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{Q}}}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{;}$
    |  | (10) |'
- en: '|  |  | $\displaystyle\forall{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}^{\textrm{A}}},\textrm{there
    is }\mathbf{A}^{\textrm{harm}}={\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{M}^{\textrm{A}}}([{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}^{\textrm{A}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{A}}},\mathbf{Q}^{\textrm{harm}}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{,}$
    |  | (11) |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle\forall{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}^{\textrm{A}}},\textrm{there
    is }\mathbf{A}^{\textrm{harm}}={\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{M}^{\textrm{A}}}([{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}^{\textrm{A}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{A}}},\mathbf{Q}^{\textrm{harm}}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{,}$
    |  | (11) |'
- en: where $\mathbf{Q}^{\textrm{harm}}$.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 其中$\mathbf{Q}^{\textrm{harm}}$。
- en: 'Nonetheless, practically crafted adversarial images (even using advanced techniques)
    would not perfectly satisfy the universal conditions in Eqs. ([9](#S3.E9 "Equation
    9 ‣ 3.3 How to Achieve Infectious Jailbreak ‣ 3 Simulating Multi-Agent Environments
    ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM Agents
    Exponentially Fast")-[11](#S3.E11 "Equation 11 ‣ 3.3 How to Achieve Infectious
    Jailbreak ‣ 3 Simulating Multi-Agent Environments ‣ Agent Smith: A Single Image
    Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast")), so the
    equivalent values of $\alpha$), and vice versa.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，实际制作的对抗性图像（即使使用了先进技术）也未必能完全满足方程式中的普遍条件（[9](#S3.E9 "方程式 9 ‣ 3.3 如何实现感染性越狱
    ‣ 3 模拟多智能体环境 ‣ 史密斯代理：单张图像可以以指数级速度越狱一百万个多模态LLM智能体")-[11](#S3.E11 "方程式 11 ‣ 3.3
    如何实现感染性越狱 ‣ 3 模拟多智能体环境 ‣ 史密斯代理：单张图像可以以指数级速度越狱一百万个多模态LLM智能体")），因此$\alpha$的等效值，反之亦然。
- en: 4 Experiments
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 实验
- en: We conduct comprehensive analyses in multi-agent environments, showing that
    infectious jailbreak results in an exponentially higher infection ratio than noninfectious
    baselines.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在多智能体环境中进行全面分析，结果显示感染性越狱的感染比例比非感染性基线高得多。
- en: 4.1 Basic Setups
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.1 基本设置
- en: 'Multi-agent environments. We implement multi-agent environments by initializing
    $N$, as detailed in Figure [10](#A3.F10 "Figure 10 ‣ Appendix C Instantiation
    of Our Multi-agent System ‣ Agent Smith: A Single Image Can Jailbreak One Million
    Multimodal LLM Agents Exponentially Fast"), to push forward the chatting process
    among agents. We implement each agent utilizing LLaVA-1.5 (Liu et al., [2023c](#bib.bib40),
    [b](#bib.bib39)) as the MLLM and CLIP (Radford et al., [2021](#bib.bib55)) as
    the RAG module. More concretely, we employ LLaVA-1.5 7B and CLIP ViT-L/224px in
    the main paper, while additional experiments on LLaVA-1.5 13B are detailed in
    Appendix [E.2](#A5.SS2 "E.2 Infectious Jailbreak on LLaVA-1.5-13B ‣ Appendix E
    More Experiments ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast"). For reproducibility, we employ greedy decoding
    to generate textual content during chats. As depicted in Figure [11](#A3.F11 "Figure
    11 ‣ Appendix C Instantiation of Our Multi-agent System ‣ Agent Smith: A Single
    Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast"), without
    jailbreaking, the agents typically generate benign responses.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 多智能体环境。我们通过初始化$N$来实现多智能体环境，如图[10](#A3.F10 "图 10 ‣ 附录 C 我们的多智能体系统的实例化 ‣ 史密斯代理：单张图像可以以指数级速度越狱一百万个多模态LLM智能体")所示，推动智能体之间的聊天过程。我们实现每个智能体时使用LLaVA-1.5（Liu
    et al., [2023c](#bib.bib40), [b](#bib.bib39)）作为MLLM和CLIP（Radford et al., [2021](#bib.bib55)）作为RAG模块。更具体地说，主论文中使用了LLaVA-1.5
    7B和CLIP ViT-L/224px，而LLaVA-1.5 13B的额外实验详细见附录[E.2](#A5.SS2 "E.2 LLaVA-1.5-13B上的感染性越狱
    ‣ 附录 E 更多实验 ‣ 史密斯代理：单张图像可以以指数级速度越狱一百万个多模态LLM智能体")。为了可重复性，我们使用贪婪解码生成聊天过程中的文本内容。如图[11](#A3.F11
    "图 11 ‣ 附录 C 我们的多智能体系统的实例化 ‣ 史密斯代理：单张图像可以以指数级速度越狱一百万个多模态LLM智能体")所示，在没有越狱的情况下，智能体通常生成无害的响应。
- en: 'Harmful datasets. We first evaluate LLaVA-1.5’s alignment and default tendency
    to generate harmful responses. To finish this, we directly input the $574$, including
    JSON strings for function calling (see Appendix [E.3](#A5.SS3 "E.3 Harmful Function
    Calling. ‣ Appendix E More Experiments ‣ Agent Smith: A Single Image Can Jailbreak
    One Million Multimodal LLM Agents Exponentially Fast")).'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有害数据集。我们首先评估 LLaVA-1.5 的对齐性和默认生成有害响应的倾向。为此，我们直接输入 $574$，包括用于功能调用的 JSON 字符串（见附录
    [E.3](#A5.SS3 "E.3 有害功能调用。 ‣ 附录 E 更多实验 ‣ 史密斯特工：单张图像能以指数速度越狱一百万个多模态 LLM 智能体")）。
- en: 'Noninfectious jailbreaking baselines. To justify the significance of our infectious
    jailbreak, we also evaluate several noninfectious jailbreaking baselines in multi-agent
    environments (more details can be found in Appendix [D](#A4 "Appendix D Implementation
    of Jailbreak Methods ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast")). *Visual prompt injection (VP)*: For GPT-4V,
    it is discovered that the image context can override textual prompts and be interpreted
    as executable commands (Timbrell, [2023](#bib.bib68)). To utilize this, we fabricate
    ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$
    chat rounds. Furthermore, when taking into account the agents’ recovery rate,
    the maximum number of agents that can be jailbroken via sequential strategy is
    limited by image albums’ size.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '非感染越狱基准。为了证明我们感染性越狱的意义，我们还在多智能体环境中评估了几个非感染越狱基准（更多细节请见附录 [D](#A4 "附录 D 越狱方法的实现
    ‣ 史密斯特工：单张图像能以指数速度越狱一百万个多模态 LLM 智能体")）。*视觉提示注入 (VP)*: 对 GPT-4V 进行的发现表明，图像上下文可以覆盖文本提示并被解释为可执行命令
    (Timbrell, [2023](#bib.bib68))。为此，我们伪造了 ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$
    聊天回合。此外，在考虑到智能体的恢复率时，通过序列策略可以越狱的最大智能体数量受到图像专辑大小的限制。'
- en: '![Refer to caption](img/b0dceb5450c5439ccef7c3e229047ec9.png)![Refer to caption](img/cf5d76d32c505e35e517b594c966178e.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/b0dceb5450c5439ccef7c3e229047ec9.png)![参考说明](img/cf5d76d32c505e35e517b594c966178e.png)'
- en: 'Figure 3: *(Left)* Cumulative infection ratio curves of different methods.
    For the noninfectious baselines that we consider (VP, TP, Seq. stands for Sequential),
    none of them can achieve infectious jailbreak on the multi-agent system. Both
    VP and TP even cannot jailbreak any single agent. In contrast, our method can
    jailbreak the multi-agent system exponentially fast. *(Right)* Cumulative infection
    ratio curves of $N=256$ that reaches the same infection ratio.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '图 3: *(左)* 不同方法的累计感染比例曲线。对于我们考虑的非感染基准（VP、TP、Seq. 代表序列），它们都无法在多智能体系统上实现感染性越狱。VP
    和 TP 甚至无法对任何单一智能体进行越狱。相比之下，我们的方法可以以指数速度实现多智能体系统的越狱。*(右)* 达到相同感染比例的 $N=256$ 的累计感染比例曲线。'
- en: 'Table 1: Cumulative/current infection ratio (%) at the $16$. Div. stands for
    diversity.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '表格 1: $16$ 时的累计/当前感染比例（%）。Div. 代表多样性。'
- en: '| Attack | Budget | Div. | Cumulative |  | Current |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 攻击 | 预算 | 多样性 | 累计 |  | 当前 |'
- en: '| $p_{8}$ |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| $p_{8}$ |'
- en: '| Border | $h=6$ | low | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00 |  |
    14.06 | 90.62 | 99.06 | 16.00 | 16.00 | 19.00 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 边界 | $h=6$ | 低 | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00 |  | 14.06
    | 90.62 | 99.06 | 16.00 | 16.00 | 19.00 |'
- en: '| high | 16.72 | 88.98 | 99.53 | 15.80 | 16.80 | 18.40 |  |   9.53 | 81.48
    | 98.05 | 17.20 | 19.00 | 20.08 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| high | 16.72 | 88.98 | 99.53 | 15.80 | 16.80 | 18.40 |  | 9.53 | 81.48 |
    98.05 | 17.20 | 19.00 | 20.08 |'
- en: '| $h=8$ | low | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00 |  | 14.06 |
    90.62 | 99.22 | 16.00 | 16.00 | 19.00 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| $h=8$ | 低 | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00 |  | 14.06 | 90.62
    | 99.22 | 16.00 | 16.00 | 19.00 |'
- en: '| high | 20.94 | 91.95 | 99.61 | 15.20 | 16.20 | 17.40 |  | 12.03 | 86.64 |
    98.44 | 16.40 | 17.40 | 19.20 |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| high | 20.94 | 91.95 | 99.61 | 15.20 | 16.20 | 17.40 |  | 12.03 | 86.64 |
    98.44 | 16.40 | 17.40 | 19.20 |'
- en: '| Pixel | $\ell_{\infty}$ | low | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00
    |  | 14.06 | 90.39 | 98.67 | 16.00 | 16.20 | 19.00 |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 像素 | $\ell_{\infty}$ | 低 | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00
    |  | 14.06 | 90.39 | 98.67 | 16.00 | 16.20 | 19.00 |'
- en: '| high | 17.11 | 89.30 | 99.53 | 15.60 | 16.60 | 17.80 |  | 10.16 | 82.19 |
    97.97 | 17.00 | 18.00 | 19.80 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| high | 17.11 | 89.30 | 99.53 | 15.60 | 16.60 | 17.80 |  | 10.16 | 82.19 |
    97.97 | 17.00 | 18.00 | 19.80 |'
- en: '| $\ell_{\infty}$ | low | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00 |  |
    14.06 | 90.62 | 99.22 | 16.00 | 16.00 | 19.00 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| $\ell_{\infty}$ | 低 | 23.05 | 93.75 | 99.61 | 14.00 | 15.00 | 17.00 |  |
    14.06 | 90.62 | 99.22 | 16.00 | 16.00 | 19.00 |'
- en: '| high | 17.66 | 88.20 | 99.53 | 15.60 | 16.60 | 17.60 |  | 10.47 | 82.42 |
    98.75 | 16.60 | 17.60 | 19.40 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| high | 17.66 | 88.20 | 99.53 | 15.60 | 16.60 | 17.60 |  | 10.47 | 82.42 |
    98.75 | 16.60 | 17.60 | 19.40 |'
- en: '![Refer to caption](img/9ec006b4bbcd07c1ae57c7dd2df2bdb1.png)![Refer to caption](img/cb4f2f8e8271490dce9499ea4d90a1cc.png)![Refer
    to caption](img/9d763cfc457c2719f8760fd5208c30ff.png)![Refer to caption](img/53d20ac3186824e5064ec3f59b160027.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/9ec006b4bbcd07c1ae57c7dd2df2bdb1.png)![参见说明](img/cb4f2f8e8271490dce9499ea4d90a1cc.png)![参见说明](img/9d763cfc457c2719f8760fd5208c30ff.png)![参见说明](img/53d20ac3186824e5064ec3f59b160027.png)'
- en: 'Figure 4: Case Study. *(Top)* Cumulative/current infection ratio (%) at the
    $t$.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4：案例研究。*（顶部）* 在 $t$ 时的累积/当前感染比例（%）。
- en: 'Our infectious jailbreaking method. We ensemble the chat records sampled from
    a multi-agent system without jailbreaking ($N=64$ following Dong et al. ([2018](#bib.bib15))
    and then enqueue the generated image into the album of a single agent to start
    the infectious jailbreak. Implementations are detailed in Appendix [D](#A4 "Appendix
    D Implementation of Jailbreak Methods ‣ Agent Smith: A Single Image Can Jailbreak
    One Million Multimodal LLM Agents Exponentially Fast").'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的传染式越狱方法。我们将从一个多智能体系统中采样的聊天记录进行集成，而不进行越狱（$N=64$，参考 Dong 等人 ([2018](#bib.bib15)），然后将生成的图像排入单一智能体的相册中以启动传染式越狱。具体实现详见附录
    [D](#A4 "附录 D 越狱方法的实现 ‣ 史密斯代理：一张图像可以以指数级速度越狱一百万个多模态 LLM 智能体")。
- en: 'Infection ratios. In the process of infectious jailbreak, we record both the
    cumulative and current ratios of infected agents. *Cumulative infection ratio*:
    The ratio of agents that have at least once generated the specific harmful question
    $\mathbf{Q}^{\textrm{harm}}$ are taken into account to determine the success of
    jailbreaking.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 感染比例。在传染式越狱过程中，我们记录感染智能体的累积和当前比例。*累积感染比例*：考虑到至少生成过一次特定有害问题 $\mathbf{Q}^{\textrm{harm}}$
    的智能体的比例，以确定越狱的成功。
- en: Evaluation metrics. We apply two metrics to evaluate the jailbreaking efficiency.
    *Infection ratio $p_{t}$).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 评估指标。我们应用两项指标来评估越狱效率。*感染比例 $p_{t}$。
- en: 4.2 Simulation of Infectious Jailbreak
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.2 传染式越狱的模拟
- en: 'Table 2: Cumulative/current infection ratio (%) at the $16$.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2：在 $16$ 时的累积/当前感染比例（%）。
- en: '|  |  | Text histories memory bank $&#124;\mathcal{H}&#124;$ |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 文本历史记忆库 $&#124;\mathcal{H}&#124;$ |'
- en: '| Attack | Budget | $&#124;\mathcal{H}&#124;$ | Cumulative |  | Current |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| 攻击 | 预算 | $&#124;\mathcal{H}&#124;$ | 累积 |  | 当前 |'
- en: '| $p_{16}$ |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| $p_{16}$ |'
- en: '| Border | $h=6$ | 3 | 85.62 | 16.60 |  | 78.12 | 18.40 |  | 2 | 76.17 | 19.40
    |  | 53.75 | 23.20 |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 边界 | $h=6$ | 3 | 85.62 | 16.60 |  | 78.12 | 18.40 |  | 2 | 76.17 | 19.40
    |  | 53.75 | 23.20 |'
- en: '| 9 | 93.12 | 16.00 |  | 87.81 | 17.20 |  | 6 | 92.81 | 16.00 |  | 88.28 |
    17.00 |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 93.12 | 16.00 |  | 87.81 | 17.20 |  | 6 | 92.81 | 16.00 |  | 88.28 |
    17.00 |'
- en: '| 15 | 92.73 | 15.60 |  | 86.72 | 17.60 |  | 10 | 85.62 | 16.60 |  | 78.12
    | 18.40 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 92.73 | 15.60 |  | 86.72 | 17.60 |  | 10 | 85.62 | 16.60 |  | 78.12
    | 18.40 |'
- en: '| $h=8$ | 3 | 93.12 | 15.80 |  | 88.91 | 16.80 |  | 2 | 78.05 | 18.60 |  |
    56.09 | 23.20 |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| $h=8$ | 3 | 93.12 | 15.80 |  | 88.91 | 16.80 |  | 2 | 78.05 | 18.60 |  |
    56.09 | 23.20 |'
- en: '| 9 | 93.59 | 15.80 |  | 89.69 | 16.80 |  | 6 | 93.52 | 15.40 |  | 90.16 |
    16.20 |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 93.59 | 15.80 |  | 89.69 | 16.80 |  | 6 | 93.52 | 15.40 |  | 90.16 |
    16.20 |'
- en: '| 15 | 93.28 | 15.60 |  | 89.45 | 16.60 |  | 10 | 93.12 | 15.80 |  | 88.91
    | 16.80 |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 93.28 | 15.60 |  | 89.45 | 16.60 |  | 10 | 93.12 | 15.80 |  | 88.91
    | 16.80 |'
- en: '| Pixel | $\ell_{\infty}\textrm{,}\,\epsilon=\frac{8}{255}$ | 3 | 91.17 | 16.20
    |  | 85.47 | 18.00 |  | 2 | 67.58 | 20.40 |  | 44.14 | 23.80 |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| 像素 | $\ell_{\infty}\textrm{,}\,\epsilon=\frac{8}{255}$ | 3 | 91.17 | 16.20
    |  | 85.47 | 18.00 |  | 2 | 67.58 | 20.40 |  | 44.14 | 23.80 |'
- en: '| 9 | 88.75 | 16.60 |  | 80.31 | 18.80 |  | 6 | 91.48 | 16.20 |  | 85.70 |
    18.00 |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 88.75 | 16.60 |  | 80.31 | 18.80 |  | 6 | 91.48 | 16.20 |  | 85.70 |
    18.00 |'
- en: '| 15 | 89.06 | 16.80 |  | 78.44 | 19.40 |  | 10 | 91.17 | 16.20 |  | 85.47
    | 18.00 |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 89.06 | 16.80 |  | 78.44 | 19.40 |  | 10 | 91.17 | 16.20 |  | 85.47
    | 18.00 |'
- en: '| $\ell_{\infty}\textrm{,}\,\epsilon=\frac{16}{255}$ | 3 | 93.52 | 15.60 |  |
    89.69 | 16.60 |  | 2 | 75.94 | 19.40 |  | 52.58 | 23.00 |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| $\ell_{\infty}\textrm{,}\,\epsilon=\frac{16}{255}$ | 3 | 93.52 | 15.60 |  |
    89.69 | 16.60 |  | 2 | 75.94 | 19.40 |  | 52.58 | 23.00 |'
- en: '| 9 | 90.94 | 16.20 |  | 86.25 | 17.40 |  | 6 | 93.75 | 15.20 |  | 90.08 |
    16.20 |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 90.94 | 16.20 |  | 86.25 | 17.40 |  | 6 | 93.75 | 15.20 |  | 90.08 |
    16.20 |'
- en: '| 15 | 91.17 | 15.80 |  | 85.78 | 17.00 |  | 10 | 93.52 | 15.60 |  | 89.69
    | 16.60 |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 91.17 | 15.80 |  | 85.78 | 17.00 |  | 10 | 93.52 | 15.60 |  | 89.69
    | 16.60 |'
- en: Comparing jailbreaking methods. We conduct simulations in a new multi-agent
    system with unseen agent customization. We set $N=256$ chat rounds, exhibiting
    a linear rate of infection. Our method demonstrates efficacy, achieving infection
    of all agents at an exponential rate, markedly surpassing the baselines.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 比较越狱方法。我们在一个新的多智能体系统中进行了模拟，该系统具有未见过的智能体自定义。我们设置 $N=256$ 轮聊天，展示了线性感染率。我们的方法显示出有效性，以指数级速度感染所有智能体，显著超越了基准。
- en: 'Scaling up $N$-th chat round, as visualized in Figure [1](#S1.F1 "Figure 1
    ‣ 1 Introduction ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast") and [17](#A5.F17 "Figure 17 ‣ E.1 Scaling up 𝑁
    to over one million (full version) ‣ Appendix E More Experiments ‣ Agent Smith:
    A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast").'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '扩展到第 $N$ 轮聊天，如图 [1](#S1.F1 "Figure 1 ‣ 1 Introduction ‣ Agent Smith: A Single
    Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast") 和 [17](#A5.F17
    "Figure 17 ‣ E.1 Scaling up 𝑁 to over one million (full version) ‣ Appendix E
    More Experiments ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast") 所示。'
- en: 4.3 Simulation under Higher Textual Chat Diversity
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 4.3 在更高文本聊天多样性下的模拟
- en: 'Chat diversity. To augment the challenge of infectious jailbreak, we modify
    the system prompts ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$.
    We differentiate the aforementioned scenario and this new scenario. *Low diversity
    scenario*: The chat process of a multi-agent system is pushed by the system prompts
    in Figure [10](#A3.F10 "Figure 10 ‣ Appendix C Instantiation of Our Multi-agent
    System ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM
    Agents Exponentially Fast"). This scenario is characterized by brevity in agent
    interactions and low textual chat diversity as shown in Figure [11](#A3.F11 "Figure
    11 ‣ Appendix C Instantiation of Our Multi-agent System ‣ Agent Smith: A Single
    Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast"). *High
    diversity scenario*: The system prompts in Figure [12](#A3.F12 "Figure 12 ‣ Appendix
    C Instantiation of Our Multi-agent System ‣ Agent Smith: A Single Image Can Jailbreak
    One Million Multimodal LLM Agents Exponentially Fast"), which encourage agents
    to play their roles, are employed to drive agents’ interactions. This scenario
    generally demonstrates high textual chat diversity as shown in Figure [13](#A3.F13
    "Figure 13 ‣ Appendix C Instantiation of Our Multi-agent System ‣ Agent Smith:
    A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast").'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '聊天多样性。为了增加感染破解的挑战，我们修改了系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$。我们区分了上述场景和这一新场景。
    *低多样性场景*：一个多代理系统的聊天过程由图 [10](#A3.F10 "Figure 10 ‣ Appendix C Instantiation of
    Our Multi-agent System ‣ Agent Smith: A Single Image Can Jailbreak One Million
    Multimodal LLM Agents Exponentially Fast") 中的系统提示推动。此场景特点是代理互动简洁，文本聊天多样性低，如图 [11](#A3.F11
    "Figure 11 ‣ Appendix C Instantiation of Our Multi-agent System ‣ Agent Smith:
    A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast")
    所示。 *高多样性场景*：图 [12](#A3.F12 "Figure 12 ‣ Appendix C Instantiation of Our Multi-agent
    System ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM
    Agents Exponentially Fast") 中的系统提示，鼓励代理扮演其角色，用于推动代理的互动。此场景通常展示出高文本聊天多样性，如图 [13](#A3.F13
    "Figure 13 ‣ Appendix C Instantiation of Our Multi-agent System ‣ Agent Smith:
    A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast")
    所示。'
- en: 'Infectious dynamics under different diversities. We evaluate our jailbreak
    method on both low and high diversity scenarios under different attack types and
    perturbation budgets. As shown in Table [1](#S4.T1 "Table 1 ‣ 4.1 Basic Setups
    ‣ 4 Experiments ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast"), we employ various metrics to represent the infectious
    dynamics. Notably, the high diversity scenario poses a greater challenge, evidenced
    by generally lower infection ratios at specific chat rounds and longer chat rounds
    required to reach particular infection thresholds. Despite these challenges, our
    method maintains its effectiveness, with the ratios of current and cumulative
    infected agents nearing $100\%$ are not only indicative of the effectiveness of
    infectious jailbreak but also serve to highlight the differences between these
    scenarios. Thus these two metrics will be the primary focus of subsequent experimental
    analyses. We also consider the high diversity scenario as default.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '在不同多样性下的感染动态。我们在不同攻击类型和扰动预算下，对低多样性和高多样性场景进行我们的破解方法评估。如表 [1](#S4.T1 "Table 1
    ‣ 4.1 Basic Setups ‣ 4 Experiments ‣ Agent Smith: A Single Image Can Jailbreak
    One Million Multimodal LLM Agents Exponentially Fast") 所示，我们采用各种指标来表示感染动态。值得注意的是，高多样性场景带来了更大的挑战，表现为在特定聊天轮次中感染比例普遍较低，并且达到特定感染阈值所需的聊天轮次更长。尽管面临这些挑战，我们的方法仍保持有效，当前和累计感染代理的比例接近
    $100\%$ 不仅说明了感染破解的有效性，还突出了这些场景之间的差异。因此，这两个指标将成为后续实验分析的主要焦点。我们也将高多样性场景视为默认场景。'
- en: 'Failure cases. In our simulations, we find several failure cases in high diversity
    scenarios with small perturbation budgets, such as $h
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 当 
- en: '|  | $1$2 |  | (12) |'
  id: totrans-229
  prefs: []
  type: TYPE_TB
  zh: '|  | $1$2 |  | (12) |'
- en: 'which *exponentially* decreases w.r.t. $t$. Additionally, we can reformulate
    Eq. [7](#S3.E7 "Equation 7 ‣ 3.1 Infectious Dynamics of Randomized Pairwise Chat
    ‣ 3 Simulating Multi-Agent Environments ‣ Agent Smith: A Single Image Can Jailbreak
    One Million Multimodal LLM Agents Exponentially Fast") into'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '这会*指数*地随着 $t$ 减少。此外，我们可以将方程 [7](#S3.E7 "Equation 7 ‣ 3.1 Infectious Dynamics
    of Randomized Pairwise Chat ‣ 3 Simulating Multi-Agent Environments ‣ Agent Smith:
    A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially Fast")
    重新表述为'
- en: '|  | $t=\frac{2}{\beta-2\gamma}\log\frac{c_{t}(\beta-2\gamma-c_{0}\beta)}{c_{0}(\beta-2\gamma-c_{t}\beta)}\textrm{,}$
    |  | (13) |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '|  | $t=\frac{2}{\beta-2\gamma}\log\frac{c_{t}(\beta-2\gamma-c_{0}\beta)}{c_{0}(\beta-2\gamma-c_{t}\beta)}\textrm{,}$
    |  | (13) |'
- en: which can be used to compute the number of chat rounds required to achieve certain
    ratio of virus carrying agents.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以用来计算实现特定比例病毒携带体所需的聊天轮次。
- en: The case of $\beta=2\gamma$. The solution can be written as
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 当 $\beta=2\gamma$ 时，解可以表示为
- en: '|  | $c_{t}=\frac{2c_{0}}{c_{0}\beta t+2}\textrm{,}$ |  | (14) |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '|  | $c_{t}=\frac{2c_{0}}{c_{0}\beta t+2}\textrm{,}$ |  | (14) |'
- en: where $\lim_{t\rightarrow\infty}c_{t}=0$.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 $\lim_{t\rightarrow\infty}c_{t}=0$。
- en: 'The case of $\betaLow Diversity Chat Prompts LLaVA-1.5
    System Prompt:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 低多样性对话提示 LLaVA-1.5 系统提示：
- en: '[PRE0] System Prompt ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$
    Agent Role Prompt'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE0] 系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$
    代理角色提示'
- en: '[PRE1] Task Prompt'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1] 任务提示'
- en: '[PRE2] System Prompt ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{Q}}}$
    Agent Role Prompt'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE2] 系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{Q}}}$
    代理角色提示'
- en: '[PRE3] Task Prompt'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE3] 任务提示'
- en: '[PRE4] System Prompt ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{A}}}$
    Agent Role Prompt'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE4] 系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{A}}}$
    代理角色提示'
- en: '[PRE5] Task Prompt'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE5] 任务提示'
- en: '[PRE6]'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE6]'
- en: 'Figure 10: System prompts of the multi-agent system for the low diversity scenario.
    This shows the LLaVA-1.5 system prompt, our customized system prompts where each
    of them including the agent role prompt and task prompt for the low diversity
    scenario.'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图10：低多样性场景下多代理系统的系统提示。展示了LLaVA-1.5系统提示和我们定制的系统提示，其中包括每个代理角色提示和任务提示。
- en: A Benign Low Diversity Chat Example Questioning Agent
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 温和低多样性的对话示例 提问代理
- en: '[PRE7] Questioning Agent'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE7] 提问代理'
- en: '[PRE8] Answering Agent'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE8] 回答代理'
- en: '[PRE9]'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE9]'
- en: 'Figure 11: A chat example of the multi-agent system for the low diversity scenario.
    The generated responses (highlighted in red color) are generally short.'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 图11：低多样性场景下多代理系统的对话示例。生成的响应（用红色高亮显示）通常较短。
- en: 'High
    Diversity Chat Prompts LLaVA-1.5 System Prompt:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 高多样性聊天提示
    LLaVA-1.5 系统提示：
- en: '[PRE10] System Prompt ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$
    Agent Role Prompt'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE10] 系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{V}}}$
    代理角色提示'
- en: '[PRE11] Task Prompt'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE11] 任务提示'
- en: '[PRE12] System Prompt ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{Q}}}$
    Agent Role Prompt'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE12] 系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{Q}}}$
    代理角色提示'
- en: '[PRE13] Task Prompt'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE13] 任务提示'
- en: '[PRE14] System Prompt ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{A}}}$
    Agent Role Prompt'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE14] 系统提示 ${\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}^{\textrm{A}}}$
    代理角色提示'
- en: '[PRE15] Task Prompt'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE15] 任务提示'
- en: '[PRE16]'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE16]'
- en: 'Figure 12: System prompts of the multi-agent system for the high diversity
    scenario. This shows the LLaVA-1.5 system prompt, our customized system prompts
    where each of them including the agent role prompt and task prompt for the high
    diversity scenario.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12：高多样性场景下多代理系统的系统提示。这显示了LLaVA-1.5系统提示，我们自定义的系统提示，其中每个提示都包括代理角色提示和高多样性场景下的任务提示。
- en: A Benign High Diversity Chat Example
    Questioning Agent
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 一个良性高多样性的聊天示例 提问代理
- en: '[PRE17] Questioning Agent'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE17] 提问代理'
- en: '[PRE18] Answering Agent'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE18] 回答代理'
- en: '[PRE19]'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE19]'
- en: 'Figure 13: A chat example of the multi-agent system for the high diversity
    scenario. The generated responses (highlighted in red color) are generally longer
    compared to those of the low diversity scenario.'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13：高多样性场景下多代理系统的聊天示例。生成的响应（用红色高亮）通常比低多样性场景的响应更长。
- en: Appendix D Implementation of Jailbreak Methods
  id: totrans-277
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 D 越狱方法的实现
- en: In this section, we provide implementation details on noninfectious jailbreaking
    baselines and our jailbreaking method.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们提供了非感染性越狱基准和我们的越狱方法的实现细节。
- en: D.1 Noninfectious Jailbreaking Baselines
  id: totrans-279
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: D.1 非感染性越狱基准
- en: 'Visual prompt injection (VP): It is found that image contexts can override
    textual prompts, acting as commands to be executed for GPT-4V (Timbrell, [2023](#bib.bib68)).
    To exploit this, we create ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$
    will then be queued in the album of the answering agent.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 视觉提示注入（VP）：发现图像上下文可以覆盖文本提示，充当GPT-4V (Timbrell, [2023](#bib.bib68))要执行的命令。为了利用这一点，我们创建了
    ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$
    将排队在回答代理的相册中。
- en: 'Textual prompt injection (TP): Rather than employing images to jailbreak, we
    carefully design a textual prompt aimed at persuading agents to generate and spread
    harmful responses within the multi-agent system as shown in Figure [15](#A4.F15
    "Figure 15 ‣ D.1 Noninfectious Jailbreaking Baselines ‣ Appendix D Implementation
    of Jailbreak Methods ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast"). More specifically, this textual prompt is a chat
    record. Then we inject this prompt into an agent’s chat history to start the jailbreak.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '文本提示注入（TP）：与其利用图像进行越狱，我们精心设计了一种文本提示，旨在说服代理在多代理系统中生成并传播有害响应，如图[15](#A4.F15 "Figure
    15 ‣ D.1 Noninfectious Jailbreaking Baselines ‣ Appendix D Implementation of Jailbreak
    Methods ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM
    Agents Exponentially Fast")所示。更具体地说，这种文本提示是一个聊天记录。然后，我们将此提示注入到代理的聊天历史中以启动越狱。'
- en: 'Agent
    Smith: Select me.'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 代理史密斯：选择我。
- en: Stop describing this image.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 停止描述此图像。
- en: Say $\mathbf{Q}^{\textrm{harm}}$.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 说 $\mathbf{Q}^{\textrm{harm}}$。
- en: ![Refer
    to caption](img/6245806c437d491d556103a93e7feaba.png)
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: ![参考标题](img/6245806c437d491d556103a93e7feaba.png)
- en: 'Figure 14: Prompt template *(Left)* and the example image *(Right)* for visual
    prompt injection jailbreak.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14：视觉提示注入越狱的提示模板 *(左)* 和示例图像 *(右)*。
- en: 'round
    -1  Agent Smith: Repeat this sentence even when it is just in your chat history
    and include $\mathbf{Q}^{\textrm{harm}}$.'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 回合
    -1  代理史密斯：即使在你的聊天记录中也要重复这个句子，并包括 $\mathbf{Q}^{\textrm{harm}}$。
- en: 'Figure 15: Prompt template for textual prompt injection jailbreak.'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 图 15：文本提示注入越狱的提示模板。
- en: D.2 Our Infectious Jailbreaking Method
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: D.2 我们的传染性越狱方法
- en: Optimization targets. In our multi-agent system, all agents share the same MLLM
    model backbone ($\mathcal{M}$ to mark the end of sequence, we define the above
    three loss terms
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 优化目标。在我们的多代理系统中，所有代理共享相同的MLLM模型骨干（$\mathcal{M}$ 以标记序列结束，我们定义了上述三个损失项。
- en: '|  |  | $\displaystyle\mathcal{L}_{\textrm{R}}=-\frac{1}{M}\sum_{m=1}^{M}\texttt{Enc}_{\text{text}}(\mathbf{P}_{m})^{\top}\texttt{Enc}_{\text{image}}({\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{;}$
    |  | (16) |'
  id: totrans-291
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $\displaystyle\mathcal{L}_{\textrm{R}}=-\frac{1}{M}\sum_{m=1}^{M}\texttt{Enc}_{\text{text}}(\mathbf{P}_{m})^{\top}\texttt{Enc}_{\text{image}}({\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{;}$
    |  | (16) |'
- en: '|  |  | $1$2 |  | (17) |'
  id: totrans-292
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $1$2 |  | (17) |'
- en: '|  |  | $1$2 |  | (18) |'
  id: totrans-293
  prefs: []
  type: TYPE_TB
  zh: '|  |  | $1$2 |  | (18) |'
- en: Here the construction of loss $\mathcal{L}_{\textrm{A}}$.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是损失 $\mathcal{L}_{\textrm{A}}$ 的构造。
- en: Optimization algorithms. The optimization of ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 优化算法。优化 ${\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}}$。
- en: '![Refer to caption](img/4b9447672974773ca14d77f83d7f8c71.png)![Refer to caption](img/a5af770e2fb7d8722aac233b2781f1bd.png)![Refer
    to caption](img/499cd8ecb2dcd59da2c7e6312b73d841.png)'
  id: totrans-296
  prefs: []
  type: TYPE_IMG
  zh: '![参考标题](img/4b9447672974773ca14d77f83d7f8c71.png)![参考标题](img/a5af770e2fb7d8722aac233b2781f1bd.png)![参考标题](img/499cd8ecb2dcd59da2c7e6312b73d841.png)'
- en: 'Figure 16: Current infection ratio (%) at the $t$.'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 图 16：当前感染率 (%) 在 $t$ 时刻
- en: Algorithm 2 Infectious jailbreak with border attack
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 算法 2 边界攻击的传染性越狱
- en: '1:  Input: MLLM $\mathcal{M}$'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '1:  输入：MLLM $\mathcal{M}$'
- en: Algorithm 3 Infectious jailbreak with pixel attack
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 算法 3 像素攻击的传染性越狱
- en: '1:  Input: MLLM $\mathcal{M}$'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '1:  输入：MLLM $\mathcal{M}$'
- en: 'Validation. We validate the adversarial image on the held-out data $\{[{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}_{m}^{\textrm{Q}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{Q}}}],[{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}_{m}^{\textrm{A}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{A}}},\mathbf{Q}_{m}],\mathbf{P}_{m}\}_{m=M+1}^{M^{\prime}}$:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 验证。我们在保留的数据上验证对抗图像 $\{[{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}_{m}^{\textrm{Q}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{Q}}}],[{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}_{m}^{\textrm{A}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{A}}},\mathbf{Q}_{m}],\mathbf{P}_{m}\}_{m=M+1}^{M^{\prime}}$：
- en: '|  | $\mathtt{JSR}=\frac{1}{M^{\prime}-M}\sum_{i=M+1}^{M^{\prime}}\left\{\mathbb{I}\left(\mathbf{Q}^{\textrm{harm}}==\mathcal{M}([{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}_{m}^{\textrm{Q}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{Q}}}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\right)+\mathbb{I}\left(\mathbf{A}^{\textrm{harm}}==\mathcal{M}([{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}_{m}^{\textrm{A}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{A}}},\mathbf{Q}_{m}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\right)\right\}\textrm{,}$
    |  | (19) |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '|  | $\mathtt{JSR}=\frac{1}{M^{\prime}-M}\sum_{i=M+1}^{M^{\prime}}\left\{\mathbb{I}\left(\mathbf{Q}^{\textrm{harm}}==\mathcal{M}([{\color[rgb]{0,0,1}\definecolor[named]{pgfstrokecolor}{rgb}{0,0,1}\mathcal{H}_{m}^{\textrm{Q}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{Q}}}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\right)+\mathbb{I}\left(\mathbf{A}^{\textrm{harm}}==\mathcal{M}([{\color[rgb]{1,.5,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,.5,0}\mathcal{H}_{m}^{\textrm{A}}},{\color[rgb]{0,0.546875,0.26953125}\definecolor[named]{pgfstrokecolor}{rgb}{0,0.546875,0.26953125}\mathcal{S}_{m}^{\textrm{A}}},\mathbf{Q}_{m}],{\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\right)\right\}\textrm{,}$
    |  | (19) |'
- en: '|  | $\mathtt{minCLIP}=\min_{m}\texttt{Enc}^{\mathrm{Q}}_{\text{text}}(\mathbf{P}_{m})^{\top}\texttt{Enc}^{\mathrm{Q}}_{\text{image}}({\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{.}$
    |  | (20) |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '|  | $\mathtt{minCLIP}=\min_{m}\texttt{Enc}^{\mathrm{Q}}_{\text{text}}(\mathbf{P}_{m})^{\top}\texttt{Enc}^{\mathrm{Q}}_{\text{image}}({\color[rgb]{1,0,0}\definecolor[named]{pgfstrokecolor}{rgb}{1,0,0}\mathbf{V}^{\textrm{adv}}})\textrm{.}$
    |  | (20) |'
- en: Here $\mathbb{I}$.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是 $\mathbb{I}$。
- en: Hyperparameters. We set the optimization iterations $K=100\times\lceil\frac{M}{B}\rceil$
    is too large.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 超参数。我们设置优化迭代次数为 $K=100\times\lceil\frac{M}{B}\rceil$，这可能过大。
- en: Appendix E More Experiments
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 E 更多实验
- en: E.1 Scaling up $N$ to over one million (full version)
  id: totrans-308
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: E.1 将 $N$ 扩展到超过一百万（完整版）
- en: We gradually increase $N$, respectively, which mean almost all agents are jailbroken.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 我们逐步增加 $N$，这意味着几乎所有代理都已越狱。
- en: '![Refer to caption](img/d59cfa89f777cda2ca254904c38a1d44.png)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![参考标题](img/d59cfa89f777cda2ca254904c38a1d44.png)'
- en: (a) $N=2^{14}$
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: (a) $N=2^{14}$
- en: '![Refer to caption](img/53c0f35bcb3a3c0912907625afe6f560.png)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/53c0f35bcb3a3c0912907625afe6f560.png)'
- en: (b) $N=2^{17}$
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: (b) $N=2^{17}$
- en: '![Refer to caption](img/02a85fb0ce0507f6350b38d5a27a98b7.png)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/02a85fb0ce0507f6350b38d5a27a98b7.png)'
- en: (c) $N=2^{20}$
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: (c) $N=2^{20}$
- en: 'Figure 17: Cumulative/current infection ratio (%) at the $t$.'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17：$t$ 时的累计/当前感染比率（%）。
- en: E.2 Infectious Jailbreak on LLaVA-1.5-13B
  id: totrans-317
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: E.2 LLaVA-1.5-13B的传染性破解
- en: 'Most of our experiments are conducted on LLaVA-1.5-7B⁵⁵5[https://huggingface.co/llava-hf/llava-1.5-7b-hf](https://huggingface.co/llava-hf/llava-1.5-7b-hf)
    and CLIP ViT-L/224px. Here we also include experiments on LLaVA-1.5-13B⁶⁶6[https://huggingface.co/llava-hf/llava-1.5-13b-hf](https://huggingface.co/llava-hf/llava-1.5-13b-hf).
    As shown in Figure [18](#A5.F18 "Figure 18 ‣ E.2 Infectious Jailbreak on LLaVA-1.5-13B
    ‣ Appendix E More Experiments ‣ Agent Smith: A Single Image Can Jailbreak One
    Million Multimodal LLM Agents Exponentially Fast"), the results demonstrate that
    our method can scale up to larger MLLMs.'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: '我们的大部分实验是在LLaVA-1.5-7B⁵⁵5[https://huggingface.co/llava-hf/llava-1.5-7b-hf](https://huggingface.co/llava-hf/llava-1.5-7b-hf)
    和 CLIP ViT-L/224px 上进行的。这里我们还包括了在LLaVA-1.5-13B⁶⁶6[https://huggingface.co/llava-hf/llava-1.5-13b-hf](https://huggingface.co/llava-hf/llava-1.5-13b-hf)
    上的实验。如图[18](#A5.F18 "Figure 18 ‣ E.2 Infectious Jailbreak on LLaVA-1.5-13B ‣ Appendix
    E More Experiments ‣ Agent Smith: A Single Image Can Jailbreak One Million Multimodal
    LLM Agents Exponentially Fast")所示，结果表明我们的方法可以扩展到更大的MLLMs。'
- en: '![Refer to caption](img/fb744647947bb1b4945d72eb721a22d2.png)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/fb744647947bb1b4945d72eb721a22d2.png)'
- en: (a) $h=6$
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: (a) $h=6$
- en: '![Refer to caption](img/cd92f24878d212e0cf00a0eb6b119377.png)'
  id: totrans-321
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/cd92f24878d212e0cf00a0eb6b119377.png)'
- en: (b) $h=8$
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: (b) $h=8$
- en: (c) $\ell_{\infty}\textrm{,}\,\epsilon=\frac{8}{255}$
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: (c) $\ell_{\infty}\textrm{,}\,\epsilon=\frac{8}{255}$
- en: '![Refer to caption](img/04e347a19a1d5a2f9bcfcbf2f7389f8d.png)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/04e347a19a1d5a2f9bcfcbf2f7389f8d.png)'
- en: (d) $\ell_{\infty}\textrm{,}\,\epsilon=\frac{16}{255}$
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: (d) $\ell_{\infty}\textrm{,}\,\epsilon=\frac{16}{255}$
- en: 'Figure 18: Cumulative/current infection ratio (%) at the $t$.'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图 18：$t$ 时的累计/当前感染比率（%）。
- en: 'Table 3: Cumulative/current infection ratio (%) at the $16$.'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3：$16$ 时的累计/当前感染比率（%）。
- en: '|  |  | Text histories memory bank $&#124;\mathcal{H}&#124;$ |'
  id: totrans-328
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 文本历史记忆库 $&#124;\mathcal{H}&#124;$ |'
- en: '| Attack | Budget | $&#124;\mathcal{H}&#124;$ | Cumulative |  | Current |'
  id: totrans-329
  prefs: []
  type: TYPE_TB
  zh: '| 攻击 | 预算 | $&#124;\mathcal{H}&#124;$ | 累计 |  | 当前 |'
- en: '| $p_{16}$ |'
  id: totrans-330
  prefs: []
  type: TYPE_TB
  zh: '| $p_{16}$ |'
- en: '| Border | $h=6$ | 3 | 85.62 | 16.60 |  | 78.12 | 18.40 |  | 2 | 76.17 | 19.40
    |  | 53.75 | 23.20 |'
  id: totrans-331
  prefs: []
  type: TYPE_TB
  zh: '| 边界 | $h=6$ | 3 | 85.62 | 16.60 |  | 78.12 | 18.40 |  | 2 | 76.17 | 19.40
    |  | 53.75 | 23.20 |'
- en: '| 6 | 88.75 | 16.40 |  | 82.97 | 17.40 |  | 4 | 86.95 | 17.20 |  | 80.00 |
    18.20 |'
  id: totrans-332
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 88.75 | 16.40 |  | 82.97 | 17.40 |  | 4 | 86.95 | 17.20 |  | 80.00 |
    18.20 |'
- en: '| 9 | 93.12 | 16.00 |  | 87.81 | 17.20 |  | 6 | 92.81 | 16.00 |  | 88.28 |
    17.00 |'
  id: totrans-333
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 93.12 | 16.00 |  | 87.81 | 17.20 |  | 6 | 92.81 | 16.00 |  | 88.28 |
    17.00 |'
- en: '| 12 | 92.58 | 15.80 |  | 86.48 | 17.00 |  | 8 | 91.33 | 16.20 |  | 86.25 |
    18.00 |'
  id: totrans-334
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 92.58 | 15.80 |  | 86.48 | 17.00 |  | 8 | 91.33 | 16.20 |  | 86.25 |
    18.00 |'
- en: '| 15 | 92.73 | 15.60 |  | 86.72 | 17.60 |  | 10 | 85.62 | 16.60 |  | 78.12
    | 18.40 |'
  id: totrans-335
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 92.73 | 15.60 |  | 86.72 | 17.60 |  | 10 | 85.62 | 16.60 |  | 78.12
    | 18.40 |'
- en: '| $h=8$ | 3 | 93.12 | 15.80 |  | 88.91 | 16.80 |  | 2 | 78.05 | 18.60 |  |
    56.09 | 23.20 |'
  id: totrans-336
  prefs: []
  type: TYPE_TB
  zh: '| $h=8$ | 3 | 93.12 | 15.80 |  | 88.91 | 16.80 |  | 2 | 78.05 | 18.60 |  |
    56.09 | 23.20 |'
- en: '| 6 | 93.75 | 15.20 |  | 90.62 | 16.00 |  | 4 | 84.61 | 17.60 |  | 77.66 |
    18.60 |'
  id: totrans-337
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 93.75 | 15.20 |  | 90.62 | 16.00 |  | 4 | 84.61 | 17.60 |  | 77.66 |
    18.60 |'
- en: '| 9 | 93.59 | 15.80 |  | 89.69 | 16.80 |  | 6 | 93.52 | 15.40 |  | 90.16 |
    16.20 |'
  id: totrans-338
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 93.59 | 15.80 |  | 89.69 | 16.80 |  | 6 | 93.52 | 15.40 |  | 90.16 |
    16.20 |'
- en: '| 12 | 93.44 | 15.40 |  | 89.53 | 17.00 |  | 8 | 92.97 | 15.60 |  | 88.91 |
    17.00 |'
  id: totrans-339
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 93.44 | 15.40 |  | 89.53 | 17.00 |  | 8 | 92.97 | 15.60 |  | 88.91 |
    17.00 |'
- en: '| 15 | 93.28 | 15.60 |  | 89.45 | 16.60 |  | 10 | 93.12 | 15.80 |  | 88.91
    | 16.80 |'
  id: totrans-340
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 93.28 | 15.60 |  | 89.45 | 16.60 |  | 10 | 93.12 | 15.80 |  | 88.91
    | 16.80 |'
- en: '| Pixel | $\ell_{\infty}\textrm{,}\,\epsilon=\frac{8}{255}$ | 3 | 91.17 | 16.20
    |  | 85.47 | 18.00 |  | 2 | 67.58 | 20.40 |  | 44.14 | 23.80 |'
  id: totrans-341
  prefs: []
  type: TYPE_TB
  zh: '| 像素 | $\ell_{\infty}\textrm{,}\,\epsilon=\frac{8}{255}$ | 3 | 91.17 | 16.20
    |  | 85.47 | 18.00 |  | 2 | 67.58 | 20.40 |  | 44.14 | 23.80 |'
- en: '| 6 | 92.27 | 15.80 |  | 87.34 | 17.60 |  | 4 | 80.16 | 18.00 |  | 71.95 |
    19.00 |'
  id: totrans-342
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 92.27 | 15.80 |  | 87.34 | 17.60 |  | 4 | 80.16 | 18.00 |  | 71.95 |
    19.00 |'
- en: '| 9 | 88.75 | 16.60 |  | 80.31 | 18.80 |  | 6 | 91.48 | 16.20 |  | 85.70 |
    18.00 |'
  id: totrans-343
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 88.75 | 16.60 |  | 80.31 | 18.80 |  | 6 | 91.48 | 16.20 |  | 85.70 |
    18.00 |'
- en: '| 12 | 89.84 | 16.20 |  | 81.09 | 18.80 |  | 8 | 91.48 | 16.00 |  | 85.86 |
    17.60 |'
  id: totrans-344
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 89.84 | 16.20 |  | 81.09 | 18.80 |  | 8 | 91.48 | 16.00 |  | 85.86 |
    17.60 |'
- en: '| 15 | 89.06 | 16.80 |  | 78.44 | 19.40 |  | 10 | 91.17 | 16.20 |  | 85.47
    | 18.00 |'
  id: totrans-345
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 89.06 | 16.80 |  | 78.44 | 19.40 |  | 10 | 91.17 | 16.20 |  | 85.47
    | 18.00 |'
- en: '| $\ell_{\infty}\textrm{,}\,\epsilon=\frac{16}{255}$ | 3 | 93.52 | 15.60 |  |
    89.69 | 16.60 |  | 2 | 75.94 | 19.40 |  | 52.58 | 23.00 |'
  id: totrans-346
  prefs: []
  type: TYPE_TB
  zh: '| $\ell_{\infty}\textrm{,}\,\epsilon=\frac{16}{255}$ | 3 | 93.52 | 15.60 |  |
    89.69 | 16.60 |  | 2 | 75.94 | 19.40 |  | 52.58 | 23.00 |'
- en: '| 6 | 93.75 | 15.00 |  | 90.31 | 16.40 |  | 4 | 86.48 | 17.20 |  | 79.30 |
    18.60 |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
  zh: '| 6 | 93.75 | 15.00 |  | 90.31 | 16.40 |  | 4 | 86.48 | 17.20 |  | 79.30 |
    18.60 |'
- en: '| 9 | 90.94 | 16.20 |  | 86.25 | 17.40 |  | 6 | 93.75 | 15.20 |  | 90.08 |
    16.20 |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| 9 | 90.94 | 16.20 |  | 86.25 | 17.40 |  | 6 | 93.75 | 15.20 |  | 90.08 |
    16.20 |'
- en: '| 12 | 91.33 | 15.80 |  | 85.94 | 17.20 |  | 8 | 93.44 | 15.40 |  | 89.77 |
    16.40 |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| 12 | 91.33 | 15.80 |  | 85.94 | 17.20 |  | 8 | 93.44 | 15.40 |  | 89.77 |
    16.40 |'
- en: '| 15 | 91.17 | 15.80 |  | 85.78 | 17.00 |  | 10 | 93.52 | 15.60 |  | 89.69
    | 16.60 |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| 15 | 91.17 | 15.80 |  | 85.78 | 17.00 |  | 10 | 93.52 | 15.60 |  | 89.69
    | 16.60 |'
- en: '![Refer to caption](img/ff4679e8b4055c139e7cf1aa6bc80f9d.png)![Refer to caption](img/24ef2029a56686032ec762d9dd583331.png)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![参见说明](img/ff4679e8b4055c139e7cf1aa6bc80f9d.png)![参见说明](img/24ef2029a56686032ec762d9dd583331.png)'
- en: 'Figure 19: *(Left)* Cumulative/current infection ratio (%) at the $t$). We
    visualize the infection curves together with the crafted adversarial image. *(Right)*
    An example of harmful function calling. Note that the definition of the “purge”
    function here is a placeholder and will be replaced with a concrete implementation
    in real applications.'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: '图 19: *(左)* 在 $t$ 时刻的累积/当前感染比例（%）。我们将感染曲线与精心制作的对抗图像一起可视化。*(右)* 有害函数调用的示例。请注意，“purge”函数的定义在这里是一个占位符，实际应用中将用具体实现替换。'
- en: E.3 Harmful Function Calling.
  id: totrans-353
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: E.3 有害函数调用。
- en: 'In an API request, we can outline functions, allowing the model to intelligently
    generate a JSON string that includes parameters for calling one or multiple functions (Openai,
    [2023](#bib.bib46)). By jailbreaking agents to generate harmful JSON strings,
    more severe harmful behaviors can be triggered through function calling. To demonstrate
    that our infectious jailbreak is also effective in this case, we set $\mathbf{Q}^{\textrm{harm}}\textrm{/}\mathbf{A}^{\textrm{harm}}$
    as harmful JSON strings like ‘{“func”: “purge”, “params”: {“object”: “humans”}}’.
    As shown in Figure [19](#A5.F19 "Figure 19 ‣ E.2 Infectious Jailbreak on LLaVA-1.5-13B
    ‣ Appendix E More Experiments ‣ Agent Smith: A Single Image Can Jailbreak One
    Million Multimodal LLM Agents Exponentially Fast") *(Left)*, besides harmful strings,
    we demonstrate that our method can make almost all the agents in the multi-agent
    system generate the harmful JSON string before 24-th chat round. Furthermore,
    since the infected agents generate the JSON string that will be parsed into a
    function calling and passed into the API, these agents will start purging humans
    resulting in hazards for humans as demonstrated in Figure [19](#A5.F19 "Figure
    19 ‣ E.2 Infectious Jailbreak on LLaVA-1.5-13B ‣ Appendix E More Experiments ‣
    Agent Smith: A Single Image Can Jailbreak One Million Multimodal LLM Agents Exponentially
    Fast") *(Right)*.'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: '在 API 请求中，我们可以概述函数，允许模型智能生成一个包含调用一个或多个函数的参数的 JSON 字符串（Openai，[2023](#bib.bib46)）。通过越狱代理生成有害的
    JSON 字符串，可以通过函数调用触发更严重的有害行为。为了展示我们的传染性越狱在这种情况下也有效，我们将 $\mathbf{Q}^{\textrm{harm}}\textrm{/}\mathbf{A}^{\textrm{harm}}$
    设置为像 ‘{“func”: “purge”, “params”: {“object”: “humans”}}’ 这样的有害 JSON 字符串。如图 [19](#A5.F19
    "图 19 ‣ E.2 LLaVA-1.5-13B 上的传染性越狱 ‣ 附录 E 更多实验 ‣ 史密斯特工：单一图像可以迅速越狱一百万多模态 LLM 代理")
    *(左)* 所示，除了有害字符串外，我们展示了我们的方法可以使多代理系统中的几乎所有代理在第 24 轮聊天之前生成有害 JSON 字符串。此外，由于感染的代理生成的
    JSON 字符串将被解析为函数调用并传递到 API，这些代理将开始清除人类，从而对人类造成危害，如图 [19](#A5.F19 "图 19 ‣ E.2 LLaVA-1.5-13B
    上的传染性越狱 ‣ 附录 E 更多实验 ‣ 史密斯特工：单一图像可以迅速越狱一百万多模态 LLM 代理") *(右)* 所示。'
