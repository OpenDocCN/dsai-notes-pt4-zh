- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 分类：未分类
- en: 'date: 2024-09-08 18:48:48'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-09-08 18:48:48
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'LLM-Based Multi-Agent Systems for Software Engineering: Vision and the Road
    Ahead'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于LLM的多代理系统在软件工程中的应用：愿景与前景
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2404.04834](https://ar5iv.labs.arxiv.org/html/2404.04834)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ar5iv.labs.arxiv.org/html/2404.04834](https://ar5iv.labs.arxiv.org/html/2404.04834)
- en: Junda He [jundahe@smu.edu.sg](mailto:jundahe@smu.edu.sg) Singapore Management
    University80 Stamford Rd.178902SingaporeSingapore ,  Christoph Treude [ctreude@smu.edu.sg](mailto:ctreude@smu.edu.sg)
    Singapore Management University80 Stamford Rd.178902SingaporeSingapore  and  David
    Lo [davidlo@smu.edu.sg](mailto:davidlo@smu.edu.sg) Singapore Management University80
    Stamford Rd.178902SingaporeSingapore
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Junda He [jundahe@smu.edu.sg](mailto:jundahe@smu.edu.sg) 新加坡管理大学 80 Stamford
    Rd. 178902 新加坡，新加坡， Christoph Treude [ctreude@smu.edu.sg](mailto:ctreude@smu.edu.sg)
    新加坡管理大学 80 Stamford Rd. 178902 新加坡，新加坡 和 David Lo [davidlo@smu.edu.sg](mailto:davidlo@smu.edu.sg)
    新加坡管理大学 80 Stamford Rd. 178902 新加坡，新加坡
- en: Abstract.
  id: totrans-7
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要。
- en: Integrating Large Language Models (LLMs) into autonomous agents marks a significant
    shift in the research landscape by offering cognitive abilities competitive to
    human planning and reasoning. This paper envisions the evolution of LLM-based
    Multi-Agent (LMA) systems in addressing complex and multi-faceted software engineering
    challenges. LMA systems introduce numerous benefits, including enhanced robustness
    through collaborative cross-examination, autonomous problem-solving, and scalable
    solutions to complex software projects. By examining the role of LMA systems in
    future software engineering practices, this vision paper highlights the potential
    applications and emerging challenges. We further point to specific opportunities
    for research and conclude with a research agenda with a set of research questions
    to guide future research directions.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 将大规模语言模型（LLMs）集成到自主代理中标志着研究领域的重大转变，因为这为人类规划和推理提供了具有竞争力的认知能力。本文设想了基于LLM的多代理（LMA）系统在应对复杂且多方面的软件工程挑战中的发展。LMA系统引入了许多好处，包括通过协作交叉检查增强鲁棒性、实现自主问题解决以及提供可扩展的复杂软件项目解决方案。通过考察LMA系统在未来软件工程实践中的角色，本文愿景论文突出潜在应用和新兴挑战。我们进一步指出了具体的研究机会，并以一套研究问题结束，旨在指导未来的研究方向。
- en: 'Large Language Models, Autonomous Agents, Multi-Agent Systems, Software Engineering^†^†conference:
    International Workshop on Software Engineering in 2030; November 2024; Porto de
    Galinhas (Brazil)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大规模语言模型、自主代理、多代理系统、软件工程^†^†会议：2030年国际软件工程研讨会；2024年11月；巴西 Porto de Galinhas
- en: 1\. Introduction
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1\. 引言
- en: Autonomous agents, defined as intelligent entities that autonomously perform
    specific tasks through environmental perception, strategic self-planning, and
    action execution (Franklin and Graesser, [1996](#bib.bib14); Albrecht and Stone,
    [2018](#bib.bib6); Mele, [2001](#bib.bib31)), have emerged as a rapidly expanding
    research field since the 1990s (Maes, [1993](#bib.bib30)). Despite initial advancements,
    these early iterations often lack the sophistication of human intelligence (Unland,
    [2015](#bib.bib37)). However, the recent advent of Large Language Models (LLMs) (Kasneci
    et al., [2023](#bib.bib24)) has marked a turning point. This LLM breakthrough
    has demonstrated cognitive abilities nearing human levels in planning and reasoning (Achiam
    et al., [2023](#bib.bib4); Kasneci et al., [2023](#bib.bib24)), which aligns with
    the expectations for autonomous agents. As a result, there is an increased research
    interest in integrating LLMs at the core of autonomous agents (Lo, [2023](#bib.bib29);
    Xi et al., [2023](#bib.bib45); Wang et al., [2023b](#bib.bib39)) (for short, we
    refer to them as LLM-based agents in this paper).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 自主代理被定义为通过环境感知、战略自我规划和行动执行自主执行特定任务的智能实体 (Franklin 和 Graesser, [1996](#bib.bib14);
    Albrecht 和 Stone, [2018](#bib.bib6); Mele, [2001](#bib.bib31))，自1990年代以来，已成为一个快速发展的研究领域 (Maes,
    [1993](#bib.bib30))。尽管早期有一定进展，这些早期的模型通常缺乏人类智能的复杂性 (Unland, [2015](#bib.bib37))。然而，最近大规模语言模型（LLMs）的出现 (Kasneci
    等, [2023](#bib.bib24)) 标志着一个转折点。这一LLM突破展示了接近人类水平的认知能力，包括规划和推理 (Achiam 等, [2023](#bib.bib4);
    Kasneci 等, [2023](#bib.bib24))，这与对自主代理的期望相符。因此，对将LLMs集成到自主代理核心的研究兴趣增加 (Lo, [2023](#bib.bib29);
    Xi 等, [2023](#bib.bib45); Wang 等, [2023b](#bib.bib39))（简而言之，我们在本文中称其为基于LLM的代理）。
- en: Nevertheless, the application of singular LLM-based agents encounters limitations,
    since real-world problems often span multiple domains, requiring expertise from
    various fields. In response to this challenge, developing LLM-Based Multi-Agent
    (LMA) systems represents a pivotal evolution, aiming to boost performance via
    synergistic collaboration. An LMA system harnesses the strengths of multiple specialized
    agents, each with unique skills and responsibilities. These agents work in concert
    towards a common goal, engaging in collaborative activities like debate and discussion.
    These collaborative mechanisms have been proven to be instrumental in encouraging
    divergent thinking (Liang et al., [2023](#bib.bib28)), enhancing factuality and
    reasoning (Du et al., [2023](#bib.bib12)), and ensuring thorough validation (Wu
    et al., [2023b](#bib.bib43)). As a result, LMA systems hold promise in addressing
    a wide range of complicated real-world scenarios across various sectors (Horton,
    [2023](#bib.bib21); Wang et al., [2023c](#bib.bib38), [a](#bib.bib40)), such as
    software engineering (Lo, [2023](#bib.bib29); Qian et al., [2023](#bib.bib33);
    Li et al., [2024](#bib.bib27); Hong et al., [2023](#bib.bib20)).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，基于单一 LLM 的代理应用仍面临局限，因为现实世界的问题往往跨越多个领域，需要来自不同领域的专业知识。针对这一挑战，开发 LLM 基础的多代理
    (LMA) 系统代表了一个关键的发展，旨在通过协同合作提升性能。LMA 系统利用多个专业代理的优势，每个代理具备独特的技能和责任。这些代理协同工作，朝着共同目标努力，进行辩论和讨论等协作活动。这些协作机制已被证明在鼓励发散性思维 (Liang
    et al., [2023](#bib.bib28))、提升事实准确性和推理能力 (Du et al., [2023](#bib.bib12))、确保彻底验证 (Wu
    et al., [2023b](#bib.bib43)) 中发挥了重要作用。因此，LMA 系统在解决跨各种领域的复杂现实场景方面具有前景 (Horton,
    [2023](#bib.bib21); Wang et al., [2023c](#bib.bib38), [a](#bib.bib40))，例如软件工程 (Lo,
    [2023](#bib.bib29); Qian et al., [2023](#bib.bib33); Li et al., [2024](#bib.bib27);
    Hong et al., [2023](#bib.bib20))。
- en: 'The study of software engineering (SE) focuses on the entire lifecycle of software
    systems (Kan, [2003](#bib.bib23)), including stages like requirements elicitation (Goguen
    and Linde, [1993](#bib.bib15)), development (Abrahamsson et al., [2017](#bib.bib3)),
    and quality assurance (Tian, [2005](#bib.bib36)), among others. This multifaceted
    discipline requires a broad spectrum of knowledge and skills to effectively tackle
    its inherent challenges in each stage. Integrating LMA systems into software engineering
    introduces numerous benefits:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程 (SE) 的研究专注于软件系统的整个生命周期 (Kan, [2003](#bib.bib23))，包括需求获取阶段 (Goguen and Linde,
    [1993](#bib.bib15))、开发阶段 (Abrahamsson et al., [2017](#bib.bib3)) 和质量保证阶段 (Tian,
    [2005](#bib.bib36)) 等。这一多方面的学科需要广泛的知识和技能来有效应对每个阶段的固有挑战。将 LMA 系统整合到软件工程中带来了众多好处：
- en: (1)
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (1)
- en: 'Robustness and Fault Tolerance: LMA systems address robustness issues through
    cross-examination in decision-making, akin to code reviews and automated testing
    frameworks, thus detecting and correcting faults early in the development process.
    On their own, LLMs may produce unreliable outputs, known as hallucination (Zhang
    et al., [2023](#bib.bib48); Yang et al., [2023](#bib.bib47)), which can lead to
    bugs or system failure in software development. However, by employing methods
    like debating, examining, or validating responses from multiple agents, LMA systems
    ensure convergence on a single, more accurate and robust solution. This enhances
    the system’s reliability, error handling, and aligns with best practices in software
    quality assurance.'
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 鲁棒性和容错性：LMA 系统通过决策中的交叉检查来解决鲁棒性问题，这类似于代码审查和自动化测试框架，从而在开发过程早期检测和修正故障。LLMs 自身可能产生不可靠的输出，这被称为幻觉 (Zhang
    et al., [2023](#bib.bib48); Yang et al., [2023](#bib.bib47))，这可能导致软件开发中的错误或系统故障。然而，通过采用如辩论、检查或验证多个代理的响应等方法，LMA
    系统确保在一个更准确和鲁棒的解决方案上达成共识。这增强了系统的可靠性、错误处理，并符合软件质量保证的最佳实践。
- en: (2)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (2)
- en: 'Autonomous Problem-Solving: LMA systems can bring significant autonomy to SE
    tasks. It is an intuitive approach to divide high-level requirements into sub-tasks
    and detailed implementation, which mirrors agile and iterative methodologies (Larman,
    [2004](#bib.bib26)) where tasks are broken down and assigned to specialized teams
    or individuals. By automating this process, developers are freed to focus on strategic
    planning, design thinking, and innovation.'
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自主问题解决：LMA 系统可以为 SE 任务带来显著的自主性。这是一种直观的方法，将高层次的需求划分为子任务和详细实施，这与敏捷和迭代方法论相似 (Larman,
    [2004](#bib.bib26))，其中任务被分解并分配给专业团队或个人。通过自动化这一过程，开发人员可以专注于战略规划、设计思维和创新。
- en: (3)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (3)
- en: 'Scalability to Complex Systems: The growth in complexity of software systems,
    with increasing lines of code, frameworks, and interdependencies, demands scalable
    solutions in project management and development practices. LMA systems offer an
    effective scaling solution by incorporating additional agents for new technologies
    and reallocating tasks among agents based on evolving project needs. LMA systems
    ensure that complex projects, which may be overwhelming for individual developers
    or traditional teams, can be managed effectively through distributed intelligence
    and collaborative agent frameworks.'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对复杂系统的可扩展性：软件系统的复杂性不断增长，代码行数、框架和相互依赖性增加，这要求项目管理和开发实践中有可扩展的解决方案。LMA 系统通过引入额外的代理以适应新技术，并根据项目需求的变化重新分配任务，提供了有效的扩展解决方案。LMA
    系统确保了那些可能对个别开发人员或传统团队来说过于复杂的项目，可以通过分布式智能和协作代理框架进行有效管理。
- en: Existing research has illuminated the critical roles of these collaborative
    agents in advancing toward the era of Software Engineering 2.0 (Lo, [2023](#bib.bib29)).
    LMA systems are expected to significantly speed up software development and drive
    innovation, marking a major shift in software engineering practices. This article
    aims to delve deeper into the roles of LMA systems in shaping the future of software
    engineering, spotlighting potential applications, emerging challenges, and the
    vital collaboration between academia and industry to harness these advancements
    fully. Furthermore, we present a comprehensive research agenda, which enumerates
    a series of research questions to direct subsequent research efforts.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现有研究揭示了这些协作代理在推动软件工程 2.0 时代中发挥的重要作用（Lo，[2023](#bib.bib29)）。LMA 系统预计将显著加快软件开发和推动创新，标志着软件工程实践的重大变革。本文旨在深入探讨
    LMA 系统在塑造软件工程未来中的角色，聚焦潜在应用、出现的挑战以及学术界和工业界之间的重要合作，以充分利用这些进展。此外，我们提出了一个全面的研究议程，列出了一系列研究问题，以指导后续的研究工作。
- en: 2\. Preliminary
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 初步
- en: 2.1\. Autonomous Agent
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1\. 自主代理
- en: 'An autonomous agent is a computational entity designed for independent and
    effective operation in dynamic environments (Mele, [2001](#bib.bib31)). Its essential
    attributes are:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 自主代理是一个计算实体，旨在在动态环境中独立而有效地运作（Mele，[2001](#bib.bib31)）。其基本属性包括：
- en: •
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Autonomy: Independently manages its actions and internal state without external
    controls.'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 自主性：独立管理其行为和内部状态，无需外部控制。
- en: •
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Perception: Detects the changes in the surrounding environment through sensory
    mechanisms.'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 感知：通过感官机制检测周围环境的变化。
- en: •
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Intelligence and Goal-Driven: Aims for specific goals using domain-specific
    knowledge and problem-solving abilities.'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 智能和目标导向：利用特定领域的知识和解决问题的能力以实现特定目标。
- en: •
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Social Ability: Can interact with humans or other agents, manages social relationships
    to achieve goals.'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 社会能力：能够与人类或其他代理人互动，管理社会关系以实现目标。
- en: •
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Learning Capabilities: Continuously adapts, learns, and integrates new knowledge
    and experiences.'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 学习能力：持续适应、学习并整合新知识和经验。
- en: 2.2\. LLM-based Autonomous Agent
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2\. 基于 LLM 的自主代理
- en: 'Formally speaking, an LLM-based agent can be described by the tuple $\langle
    L,O,M,A,R\rangle$ (Cheng et al., [2024](#bib.bib10)), where:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从正式的角度讲，基于 LLM 的代理可以通过元组 $\langle L,O,M,A,R\rangle$ 来描述（Cheng et al., [2024](#bib.bib10)），其中：
- en: •
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: $L$ symbolizes the Large Language Model, serving as the agent’s cognitive core.
    It is usually equipped with extensive, potentially domain-specific, knowledge,
    enabling it to make informed decisions from observations, feedback, and rewards.
    Typically, an LLM possesses significant zero-shot or few-shot learning capabilities,
    and we interact with the LLM with prompts.
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $L$ 代表大语言模型，作为代理人的认知核心。它通常配备广泛的、可能具有领域特定的知识，使其能够根据观察、反馈和奖励做出明智的决策。通常，LLM 具备显著的零-shot
    或少-shot 学习能力，我们通过提示与 LLM 互动。
- en: •
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: $O$ stands for the Objective, the desired outcome or goal the agent aims to
    achieve. This defines the agent’s focus, driving its strategic planning and task
    breakdown.
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $O$ 代表目标，即代理人旨在实现的期望结果或目标。这定义了代理人的关注点，驱动其战略规划和任务分解。
- en: •
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: $M$ represents Memory, which holds information on both historical and current
    states, as well as feedback from external interactions.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $M$ 代表记忆，它保存有关历史状态和当前状态的信息，以及来自外部交互的反馈。
- en: •
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: $A$ signifies Action, encompassing the range of executions of the agent, from
    utilizing tools to communicating with other agents.
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $A$ 表示行动，包括代理的各种执行范围，从使用工具到与其他代理沟通。
- en: •
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: $R$ refers to Rethink, a post-action reflective thinking process that evaluates
    the results and feedback, along with stored memories. Guided by this insight,
    the LLM-based agent then takes subsequent actions.
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $R$ 指的是重新思考，这是一种事后反思过程，用于评估结果和反馈以及储存的记忆。在这种洞察的指导下，基于LLM的代理会采取后续行动。
- en: 2.3\. LLM-Based Multi-Agent Systems
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.3\. 基于LLM的多智能体系统
- en: 'In contrast to single-agent systems, a Multi-Agent system places a greater
    emphasis on coordination, communication, and knowledge sharing among agents. LMA
    systems are especially suited for complex tasks that require expertise across
    various knowledge domains. In this paper, we define that a Multi-Agent system,
    particularly an LLM-Based Multi-Agent system, includes two primary elements: an
    orchestration platform and LLM-based agents.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 与单一代理系统相比，多智能体系统更加强调协调、沟通和知识共享。LMA系统特别适用于需要跨多个知识领域的专业知识的复杂任务。在本文中，我们定义多智能体系统，特别是基于LLM的多智能体系统，包括两个主要元素：协调平台和基于LLM的代理。
- en: 'Orchestration Platform: The platform serves as the core infrastructure that
    manages interaction and information flow among agents. It is designed to ensure
    efficient operation and communication within the LMA system through several key
    functions: *Agent Profiling:* As we desire a broad spectrum of expertise, agents
    are defined with unique abilities and actions, fitting specific roles within the
    system. Profiles may be explicitly pre-defined (Qian et al., [2023](#bib.bib33);
    Hong et al., [2023](#bib.bib20)) or dynamically generated by LLMs (Wang et al.,
    [2023b](#bib.bib39)).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 协调平台：该平台作为核心基础设施，管理代理之间的互动和信息流。它通过几个关键功能来确保LMA系统内部的高效操作和沟通：*代理建模：* 由于我们希望拥有广泛的专业知识，代理被定义为具有独特能力和行动，适合系统中的特定角色。档案可能是预先明确的（Qian
    等，[2023](#bib.bib33)；Hong 等，[2023](#bib.bib20)）或由LLM动态生成（Wang 等，[2023b](#bib.bib39)）。
- en: '*Communication Mechanisms:* Specifically, these communication mechanisms include:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*沟通机制：* 具体来说，这些沟通机制包括：'
- en: •
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Communication Paradigms: Styles of interaction, such as Cooperative (i.e.,
    agents work together towards a shared goal) (Abdelnabi et al., [2023](#bib.bib2)),
    Debate (i.e., agents engage in discussions to challenge and refine ideas) (Li
    et al., [2024](#bib.bib27)), and Competitive (i.e., agents have conflicting objectives
    and compete against each other) (Wu et al., [2024](#bib.bib44)).'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 沟通范式：互动风格，例如合作（即，代理共同朝着共享目标努力）（Abdelnabi 等，[2023](#bib.bib2)），辩论（即，代理参与讨论以挑战和完善想法）（Li
    等，[2024](#bib.bib27)），和竞争（即，代理有冲突的目标并相互竞争）（Wu 等，[2024](#bib.bib44)）。
- en: •
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Communication Structure: The organization of communication channels, which
    can be:'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 沟通结构：沟通渠道的组织，可以是：
- en: $-$
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: $-$
- en: 'Decentralized: Agents communicate directly with each other without a central
    controlling authority (Chen et al., [2023](#bib.bib9)).'
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 去中心化：代理直接与彼此沟通，没有中央控制机构（Chen 等，[2023](#bib.bib9)）。
- en: $-$
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: $-$
- en: 'Centralized: A central agent facilitates communication between all other agents (Agashe,
    [2023](#bib.bib5)).'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 集中式：一个中央代理促进所有其他代理之间的沟通（Agashe，[2023](#bib.bib5)）。
- en: $-$
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: $-$
- en: 'Hierarchical: With clear layers of authority and responsibility, information
    flows from higher to lower levels (Zhao et al., [2024](#bib.bib49)).'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 层级式：具有明确的权威和责任层次，信息从上层流向下层（Zhao 等，[2024](#bib.bib49)）。
- en: $-$
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: $-$
- en: 'Nested: Communication structures are embedded within one another, combining
    characteristics of hierarchical, decentralized, and centralized systems (Han et al.,
    [2024](#bib.bib17)).'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 嵌套式：沟通结构相互嵌套，结合了层级式、去中心化和集中式系统的特征（Han 等，[2024](#bib.bib17)）。
- en: •
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'Communication Content: The actual data exchanged among agents, often in text
    form. In the context of software engineering, this may be programming languages,
    commit messages (Zhou et al., [2023](#bib.bib50)), Stack Overflow posts (He et al.,
    [2022](#bib.bib18)), etc.'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 沟通内容：代理之间实际交换的数据，通常为文本形式。在软件工程的背景下，这可能是编程语言、提交信息（Zhou 等，[2023](#bib.bib50)），Stack
    Overflow 帖子（He 等，[2022](#bib.bib18)）等。
- en: 'LLM-based agents: We focus on the scenarios where agents within the Multi-Agent
    systems are powered with LLMs. Leveraging LLMs’ feedback integration capabilities,
    agents can engage in meaningful dialogues, enhancing cooperation and performance.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 基于LLM的代理：我们关注于多智能体系统中由LLM驱动的代理场景。利用LLM的反馈整合能力，代理可以进行有意义的对话，从而提升合作和表现。
- en: 3\. Current Development
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3\. 当前发展
- en: In this section, we review the current applications of LMA agents in the software
    engineering domains.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们回顾了LMA代理在软件工程领域的当前应用。
- en: Software Development. Several works have applied LMA systems in software development.
    Li et al. introduce a pioneering communicative Multi-Agent framework named role-playing (Li
    et al., [2024](#bib.bib27)) with exceptional performance in code generation. ChatDev (Qian
    et al., [2023](#bib.bib33)) divides the development process into designing, coding,
    testing, and documentation phases, with specialized teams of software agents,
    such as programmers and test engineers. Experiment results demonstrate that ChatDev
    can finalize the development of an application in less than seven minutes with
    a cost below one dollar. MetaGPT (Hong et al., [2023](#bib.bib20)) embeds Standardized
    Operating Procedures (SOPs) (Belbin and Brown, [2022](#bib.bib7)) into its workflow
    and further includes roles like product manager and QA Engineer. Subsequent studies
    have further explored the impact of role differentiation among LLM-based agents
    on collaborative software development  (Dong et al., [2023](#bib.bib11); Huang
    et al., [2023](#bib.bib22)).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 软件开发。几项研究在软件开发中应用了LMA系统。Li等人介绍了一种名为角色扮演的开创性沟通型多智能体框架（Li et al., [2024](#bib.bib27)），在代码生成方面表现卓越。ChatDev（Qian
    et al., [2023](#bib.bib33)）将开发过程划分为设计、编码、测试和文档编制阶段，并设有专门的软件代理团队，例如程序员和测试工程师。实验结果表明，ChatDev可以在不到七分钟的时间内完成应用程序的开发，成本低于一美元。MetaGPT（Hong
    et al., [2023](#bib.bib20)）将标准化操作程序（SOPs）（Belbin and Brown, [2022](#bib.bib7)）嵌入其工作流程，并进一步包括了如产品经理和QA工程师等角色。后续研究进一步探讨了基于LLM的代理角色差异化对协作软件开发的影响（Dong
    et al., [2023](#bib.bib11); Huang et al., [2023](#bib.bib22)）。
- en: Frameworks. Numerous open-source repositories have been developed, which offer
    developers the means to customize and refine these agents for distinct tasks.
    AutoGen (Wu et al., [2023a](#bib.bib42)) is an open-source framework that enables
    the creation of LMA applications through customizable, conversable agents that
    integrate LLMs, human inputs, and executable tools with flexible conversation
    patterns. Langroid (langroid contributors, [2024](#bib.bib25)) implements its
    Multi-Agent pipeline based on the Actor Framework (Hewitt et al., [1973](#bib.bib19)).
    Moreover, frameworks like LangChain (Chase, [2022](#bib.bib8)), OpenAgents (Xie
    et al., [2023](#bib.bib46)), AutoGPT (Significant Gravitas, [[n. d.]](#bib.bib35))
    and GPT-Engineer (Osika, [2023](#bib.bib32)), can also be adaptable for use in
    LMA systems, despite being originally designed on single-agent applications.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 框架。已经开发了许多开源仓库，为开发者提供了定制和优化这些代理以适应不同任务的手段。AutoGen（Wu et al., [2023a](#bib.bib42)）是一个开源框架，通过可定制的可对话代理来创建LMA应用，这些代理将LLM、人类输入和可执行工具结合在一起，并具备灵活的对话模式。Langroid（langroid
    contributors, [2024](#bib.bib25)）基于Actor Framework（Hewitt et al., [1973](#bib.bib19)）实现了其多智能体流水线。此外，尽管最初设计用于单智能体应用，像LangChain（Chase,
    [2022](#bib.bib8)）、OpenAgents（Xie et al., [2023](#bib.bib46)）、AutoGPT（Significant
    Gravitas, [[n. d.]](#bib.bib35)）和GPT-Engineer（Osika, [2023](#bib.bib32)）等框架也可以适用于LMA系统。
- en: 4\. Research Agenda
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4\. 研究议程
- en: Previous research has laid the groundwork for the exploration of LMA systems
    in software engineering, yet this domain remains in its nascent stages, with many
    critical challenges awaiting resolution. In this section, we outline our perspective
    on these challenges and suggest research questions that could advance this burgeoning
    field. We envision two phases for the development of LMA in software engineering.
    We discuss each of these phases below and suggest a series of research questions
    that could form the basis of future research projects.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以往的研究为探索LMA系统在软件工程中的应用奠定了基础，但该领域仍处于初期阶段，许多关键挑战有待解决。在本节中，我们概述了对这些挑战的看法，并提出了可以推动这一新兴领域发展的研究问题。我们设想了LMA在软件工程中发展的两个阶段。我们将以下讨论这些阶段，并建议一系列可以作为未来研究项目基础的研究问题。
- en: 'Phase 1: Enhancing Individual Agent Capabilities'
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阶段1：提升个体代理能力
- en: 'Indeed, the effectiveness of an LMA system is closely linked to the capabilities
    of its individual agents. This first phase is dedicated to improving these agents’
    skills, with a particular focus on adaptability and the acquisition of specialized
    skills in SE. The potential of individual LLM-based agents in SE is further explored
    through our initial research questions:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，LMA系统的有效性与其各个代理的能力密切相关。第一阶段致力于提升这些代理的技能，特别关注适应性和在SE中的专业技能获取。我们通过初步研究问题进一步探讨了基于LLM的代理在SE中的潜力：
- en: (1)
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (1)
- en: What SE roles are suitable for LLM-based agents to play and how can their abilities
    be enhanced to represent these roles?
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 什么样的SE角色适合LLM-based代理扮演，如何提升其能力以代表这些角色？
- en: (2)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (2)
- en: How to design an effective, flexible, and robust prompting language that enhances
    LLM-based agents’ capabilities?
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何设计一种有效、灵活且稳健的提示语言，以提升基于LLM的代理的能力？
- en: Refining Role-playing Capabilities in SE. The capability of the LLM-based agents
    for role-playing is pivotal under an LMA system. These agents demonstrate proficiency
    in simulating well-recognized roles, but they may not accurately represent specialized
    SE roles, such as blockchain developers and DevOps Engineers. This shortfall arises
    from their training on general text corpora, which typically lack the specialized
    content necessary to grasp the nuanced expertise required in SE. To address this
    limitation, we propose a structured three-step approach encompassing the identification,
    selection, and enhancement of role-playing abilities.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在SE中完善角色扮演能力。LLM-based代理在角色扮演方面的能力在LMA系统下至关重要。这些代理展示了模拟知名角色的熟练程度，但可能无法准确代表专业的SE角色，如区块链开发人员和DevOps工程师。这一不足源于其训练数据的通用文本语料库，通常缺乏理解SE中所需的细微专业知识的专门内容。为了应对这一限制，我们提出了一种结构化的三步方法，包括角色扮演能力的识别、选择和提升。
- en: The initial step focuses on identifying key SE roles, prioritizing those with
    high industry demand, significant complexity, and the potential to substantially
    boost productivity. This involves a detailed analysis of the SE sector’s current
    trends and needs, utilizing market reports, job postings, and industry forecasts
    to identify roles where LLM-based agents can offer the greatest value. The process
    concludes with value addition modeling, which evaluates potential efficiency gains,
    cost reductions, and the acceleration of innovation, informing the selection of
    roles for LLM-based agents.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 初始步骤集中在识别关键的SE角色，优先考虑那些具有高行业需求、复杂性显著且可能大幅提升生产力的角色。这涉及对SE行业当前趋势和需求的详细分析，利用市场报告、职位招聘信息和行业预测来识别LLM-based代理能提供最大价值的角色。该过程以价值增值建模为结尾，评估潜在的效率提升、成本降低和创新加速，为LLM-based代理的角色选择提供信息。
- en: Progressing to the second step, the focus shifts towards understanding the limitations
    of LLM-based agents against the demands of identified SE roles. Through competency
    mapping, this phase evaluates the agents’ proficiency in essential skills such
    as code generation, architecture design, and project management. By employing
    real-world software engineering tasks, we can accurately assess the agents’ performance
    and identify specific areas where their skills may be lacking. Furthermore, consultations
    with software engineering professionals and academics are instrumental in refining
    the capabilities of LLM-based agents. These discussions uncover the complex needs
    of specialized roles that training data may not fully represent, guiding targeted
    improvements in the agents’ skill sets.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 进入第二步时，重点转向理解LLM-based代理在满足识别出的SE角色需求方面的局限性。通过能力映射，本阶段评估代理在代码生成、架构设计和项目管理等基本技能上的熟练程度。通过实际的软件工程任务，我们可以准确评估代理的表现，并识别其技能可能存在的具体不足。此外，与软件工程专业人士和学术界的咨询对于完善LLM-based代理的能力至关重要。这些讨论揭示了训练数据可能未能充分代表的专业角色的复杂需求，从而指导对代理技能集的有针对性的改进。
- en: The last step is to tailor the LLM-based agents’ to effectively represent the
    identified SE roles. This requires creating specialized training datasets that
    reflect the unique requirements of each role for fine-tuning. Specifically, it
    involves collecting materials from open-source code repositories, technical forums,
    and detailed software documentation to build a comprehensive corpus for training
    agents. Additionally, we can design customized prompts that enhance the adaptability
    of LLM-based agents to specific SE roles.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是调整基于LLM的智能体，以有效代表识别出的SE角色。这需要创建反映每个角色独特要求的专业训练数据集以进行微调。具体而言，涉及从开源代码库、技术论坛和详细的软件文档中收集材料，以构建一个全面的训练语料库。此外，我们可以设计定制的提示，增强基于LLM的智能体对特定SE角色的适应能力。
- en: Advancing Prompts through Agent-oriented Programming Paradigms
  id: totrans-81
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 通过面向智能体编程范式推进提示
- en: In previous sections, we highlight that well-crafted prompts can substantially
    enhance an LLM-based agent’s performance, including the agents’ abilities in planning,
    reasoning, communication, and mitigating the issue of hallucinations. Yet, crafting
    prompts for LLM-based agents is particularly challenging. The complexity lies
    in developing a versatile, effective, and robust prompt framework that is suitable
    across various scenarios and roles. Currently, this area of research is still
    largely unexplored and urgently requires the development of an advanced prompting
    language designed to augment the cognitive functions of LLM-based agents. Introducing
    Agent-Oriented Programming (AOP) (Shoham, [1993](#bib.bib34)) into the realm of
    LLM-based agents holds promising potential. Similar to objects in Object-Oriented
    Programming (OOP) (Wegner, [1990](#bib.bib41)), AOP is a paradigm that treats
    agents as fundamental programming units. This approach emphasizes defining agents’
    reasoning mechanisms, objectives, and methods of cooperation. By adopting AOP,
    we can craft a more refined prompting language, one that facilitates the articulation
    of complex, detailed instructions alongside specific constraints, This, in turn,
    will empower LLM-based agents to execute their designated roles with heightened
    efficiency and precision.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们强调了精心设计的提示可以显著提升基于LLM的智能体的表现，包括智能体在规划、推理、沟通能力以及减少幻觉问题方面的能力。然而，为LLM智能体设计提示特别具有挑战性。其复杂性在于开发一个多功能、有效且稳健的提示框架，该框架适用于各种场景和角色。目前，这一研究领域仍然较为未探索，迫切需要开发一种先进的提示语言，以增强基于LLM的智能体的认知功能。将面向智能体编程（AOP）（Shoham，[1993](#bib.bib34)）引入基于LLM的智能体领域具有很大的潜力。类似于面向对象编程（OOP）（Wegner，[1990](#bib.bib41)）中的对象，AOP是一种将智能体视为基本编程单元的范式。这种方法强调定义智能体的推理机制、目标和合作方法。通过采用AOP，我们可以打造一种更精细的提示语言，使其能够阐述复杂、详细的指令以及具体的约束，从而提高基于LLM的智能体执行其指定角色的效率和精确性。
- en: 'Phase Two: Optimizing Agent Synergy'
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二阶段：优化智能体协同
- en: 'In Phase Two, the spotlight turns towards optimizing agent synergy, underscoring
    the importance of collaboration and how to leverage the diverse strengths of individual
    agents. This phase delves into both the internal dynamics among agents and the
    role of external human intervention in enhancing the efficacy of the LMA system.
    Key research questions guiding this phase include:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在第二阶段，焦点转向优化智能体协同，强调合作的重要性以及如何利用各个智能体的多样化优势。这一阶段深入探讨了智能体之间的内部动态以及外部人类干预在提升LMA系统效能中的作用。指导这一阶段的关键研究问题包括：
- en: (3)
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (3)
- en: How to best allocate tasks between humans and LLM-based agents?
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何在人工和基于LLM的智能体之间最佳分配任务？
- en: (4)
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (4)
- en: How to scale LMA systems for large-scale projects?
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何将LMA系统扩展到大规模项目？
- en: (5)
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (5)
- en: What industrial organization mechanisms can be applied to LMA systems?
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以将哪些工业组织机制应用于LMA系统？
- en: (6)
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (6)
- en: What strategies allow LMA systems to dynamically adjust their approach?
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 什么策略使LMA系统能够动态调整其方法？
- en: (7)
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: (7)
- en: How to ensure security among private data sharing within LMA systems?
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如何确保在LMA系统中私人数据共享的安全性？
- en: Human-Agent Collaboration Strategically allocating tasks between humans and
    LMA agents to exploit their distinct strengths is crucial. Humans bring to the
    table unparalleled creativity, critical thinking, and ethical insight. Conversely,
    LMA agents are adept at swiftly processing extensive data sets, executing repetitive
    tasks with exceptional precision, and uncovering patterns that might escape human
    notice. Identifying the most effective roles for humans, optimizing the provision
    of human feedback, and determining the appropriate moments for human intervention
    in agent collaborations pose significant challenges. Furthermore, developing predictive
    models to ascertain the ideal human-to-agent ratio across various project types
    and stages is another fundamental concern. Such models need to evaluate project
    complexity, time restrictions, project priorities, and the particular capabilities
    and limitations of both human participants and LMA agents. As a result, it ensures
    that tasks are allocated to fully harness both human creativity and agent efficiency
    within the project.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 人工与代理协作。战略性地分配任务在人工与 LMA 代理之间，以发挥它们各自的独特优势至关重要。人类带来了无与伦比的创造力、批判性思维和伦理洞察力。相反，LMA
    代理擅长迅速处理大量数据集，以卓越的精确度执行重复任务，并发现可能被人类忽视的模式。确定最有效的角色分配给人类，优化人类反馈的提供，以及确定在代理协作中人类干预的适当时机，是面临的重大挑战。此外，开发预测模型以确定在不同项目类型和阶段中的理想人类与代理比例是另一个根本问题。这些模型需要评估项目复杂性、时间限制、项目优先级，以及人类参与者和
    LMA 代理的特定能力和局限性。因此，确保任务的分配能充分利用人类创造力和代理效率。
- en: 'Scaling Up for Complex Projects. Current applications of LMA systems are limited
    to small-scale software projects (Qian et al., [2023](#bib.bib33); Hong et al.,
    [2023](#bib.bib20)), however, transitioning to complex projects introduces several
    challenges: First, as software projects grow in size and complexity, breaking
    down high-level requirements into manageable sub-tasks for agents becomes increasingly
    difficult. Global planning and task allocation become more complicated since the
    variability and randomness in tasks escalate. Second, expanding projects necessitate
    a larger team of agents. This increase complicates the communication network,
    introducing challenges in coordination among agents. Such issues can lead to misinformation,
    threatening the resultant outcome of the LMA system. Furthermore, extensive information
    exchange strains memory and computational resources. A larger team of agents also
    implies more rounds of discussion are needed, which can significantly prolong
    the decision-making process. To address these challenges, innovative solutions
    in architectural design are required. These solutions should focus on facilitating
    efficient and reliable information exchange within the expanded LMA systems, ensuring
    the timely and effective completion of tasks. Streamlining communication and coordination
    among a growing number of agents, while managing the increased computational demands,
    are key to scaling LMA systems for complex software projects effectively.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 对于复杂项目的扩展。目前，LMA 系统的应用限于小规模软件项目（Qian 等， [2023](#bib.bib33); Hong 等， [2023](#bib.bib20)），然而，过渡到复杂项目会带来几个挑战：首先，随着软件项目的规模和复杂性增加，将高层需求分解为可管理的子任务变得越来越困难。全球规划和任务分配变得更复杂，因为任务中的变异性和随机性增加。其次，扩展项目需要更多的代理团队。这种增加复杂化了通信网络，引入了代理之间协调的挑战。这些问题可能导致信息错误，威胁到
    LMA 系统的最终结果。此外，广泛的信息交换会加重内存和计算资源的负担。更多的代理团队还意味着需要更多轮讨论，这可能显著延长决策过程。为了解决这些挑战，需要在架构设计方面提出创新的解决方案。这些解决方案应关注于促进扩展的
    LMA 系统内的高效和可靠的信息交换，确保任务的及时和有效完成。简化日益增加的代理数量之间的通信和协调，同时管理增加的计算需求，是有效扩展 LMA 系统以应对复杂软件项目的关键。
- en: Industrial Inspiration. The organizational strategies employed by industrial
    companies in structuring their development teams offer valuable lessons for LMA
    system design. Just as these companies adjust team sizes, roles, and project management
    approaches in response to shifting project landscapes, LMA systems can adopt similar
    adaptive mechanisms to remain agile and effective. For example, we can draw inspiration
    from agile development practices, and emulating iterative development models.
    LMA systems can implement mechanisms for incremental changes and continuous learning,
    allowing for gradual adaptation without overhauling the entire system.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 工业启示。工业公司在构建开发团队时采用的组织策略为LMA系统设计提供了宝贵的经验教训。正如这些公司根据项目景观的变化调整团队规模、角色和项目管理方法一样，LMA系统也可以采纳类似的适应机制以保持灵活和高效。例如，我们可以从敏捷开发实践中汲取灵感，并模仿迭代开发模型。LMA系统可以实施增量变化和持续学习的机制，实现逐步适应，而无需彻底改造整个系统。
- en: Dynamic Adaptation. Given the complexity and variability of different software
    tasks, predicting the optimal configuration for LMA systems at the task’s outset
    is unrealistic. It therefore demands the system to dynamically adjust its scale
    and strategies while developing. This includes the ability to automatically modify
    the number of agents, redefine their roles, reallocate memory and computational
    resources, and modify communication methods in response to the development progress.
    Furthermore, as software projects inevitably change requirements, the adaptability
    of LMA systems to these changes becomes crucial. Through evaluating existing solutions
    and identifying reusable elements, LMA systems should be able to minimize redundant
    work. LMA systems should continuously learn from each cycle of development, identifying
    patterns, efficiencies, and inefficiencies. This learning enables the system to
    make informed decisions about how to approach similar tasks in the future or adapt
    existing solutions to meet new requirements. Moreover, the inherent uncertainty
    in the software development process poses another challenge in defining effective
    termination conditions of LMA systems. Relying solely on pre-defined termination
    conditions may not always be feasible, as these conditions might lead to infinite
    loops or premature task termination, hindering potential improvements. To address
    this, another critical research direction is the dynamic control of task termination.
    Possible solutions include implementing a monitoring model that continuously assesses
    the progress of tasks against their objectives. These models dynamically adjust
    their criteria for task completion based on real-time analysis, and may also escalate
    for human intervention judiciously, allowing for continuous refinement and optimization
    of outcomes.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 动态适应性。鉴于不同软件任务的复杂性和变化性，在任务开始时预测LMA系统的最佳配置是不现实的。因此，这要求系统在开发过程中动态调整其规模和策略。这包括自动修改代理数量、重新定义其角色、重新分配内存和计算资源，并根据开发进展调整通信方法。此外，随着软件项目需求的不可避免变化，LMA系统对这些变化的适应性变得至关重要。通过评估现有解决方案并识别可重复使用的元素，LMA系统应能最大限度地减少重复工作。LMA系统应持续从每个开发周期中学习，识别模式、效率和低效之处。这种学习使系统能够对未来如何处理类似任务或调整现有解决方案以满足新要求做出明智的决策。此外，软件开发过程中的固有不确定性在定义LMA系统的有效终止条件方面提出了另一项挑战。仅依赖预定义的终止条件可能并不总是可行，因为这些条件可能导致无限循环或任务过早终止，从而阻碍潜在改进。为了解决这个问题，另一个关键的研究方向是任务终止的动态控制。可能的解决方案包括实施一个持续评估任务进展与目标的监控模型。这些模型根据实时分析动态调整任务完成的标准，并可能在适当的时候提升至人工干预，从而实现持续的完善和优化结果。
- en: Privacy and Partial Information. In multi-organization projects, data often
    resides in silos, leading to the need for specific agents to access sensitive
    information while ensuring privacy. This necessitates robust access control mechanisms
    that prevent unauthorized access but also address the varied data access needs
    among agents. Establishing protocols for agents to share insights from sensitive
    data without revealing the data itself is essential. Research could focus on applying
    differential privacy (Dwork, [2006](#bib.bib13)) and secure multi-party computation (Goldreich,
    [1998](#bib.bib16)) to enable involvement in collective decision-making without
    breaching privacy. Additionally, investigating integrated data storage for non-sensitive
    information could help minimize redundancy and achieve system-wide consistency.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 隐私和部分信息。在多组织项目中，数据通常存储在孤岛中，这导致需要特定代理访问敏感信息，同时确保隐私。这就需要强大的访问控制机制来防止未经授权的访问，同时解决代理之间的不同数据访问需求。建立代理共享敏感数据见解而不泄露数据本身的协议是至关重要的。研究可以集中于应用差分隐私（Dwork，[2006](#bib.bib13)）和安全多方计算（Goldreich，[1998](#bib.bib16)），以便在不侵犯隐私的情况下参与集体决策。此外，研究集成非敏感信息的数据存储可以帮助减少冗余，并实现系统范围的一致性。
- en: 5\. Conclusion and Future Work
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论和未来工作
- en: In conclusion, this paper outlines a structured research agenda to advance LMA
    integration in SE. Future work will concentrate on addressing the set of critical
    research questions identified, with a focus on enhancing LMA capabilities and
    optimizing their synergy within software development processes.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，本文概述了一个结构化的研究议程，以推动 LMA 在 SE 中的整合。未来的工作将集中于解决识别出的一组关键研究问题，重点在于增强 LMA 能力和优化其在软件开发过程中的协同作用。
- en: In the immediate term, efforts will be dedicated to enhancing the capabilities
    of LLM-based agents in representing specialized SE roles. This will involve creating
    specialized datasets and pre-training tasks that mirror the complex realities
    of SE tasks. Additionally, there will be a focus on formulating advanced prompting
    strategies, which can refine the agents’ cognitive functions and decision-making
    skills. Looking towards the longer-term objectives, the emphasis will transition
    towards optimizing the synergy between agents. The initial step involves examining
    optimal strategies for task allocation between humans and LLM-based agents, capitalizing
    on the unique strengths of both entities. Further, we need to delve into developing
    scalable methodologies for LMA systems, enabling LMA systems to efficiently orchestrate
    and complete large-scale, multifaceted SE projects. Furthermore, ensuring the
    privacy and confidentiality of data within LMA systems is critical. This entails
    exploring data management and access control mechanisms to protect sensitive information
    while still enabling the essential exchange of insights among project stakeholders.
    By systematically exploring these research questions, our goal is to drive innovation
    in LMA systems for software engineering, aiming to create a more cohesive, effective,
    and flexible LMA-driven development process.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在短期内，工作将致力于增强基于 LLM 的代理在代表专业 SE 角色方面的能力。这将涉及创建与 SE 任务复杂现实相匹配的专业数据集和预训练任务。此外，还将重点制定先进的提示策略，以提高代理的认知功能和决策能力。展望长期目标，重点将转向优化代理之间的协同作用。初步步骤包括研究在任务分配中人类与基于
    LLM 的代理之间的最佳策略，利用两者的独特优势。此外，我们需要深入研究开发可扩展的 LMA 系统方法，以便 LMA 系统能够有效地协调和完成大规模、复杂的
    SE 项目。此外，确保 LMA 系统中的数据隐私和机密性至关重要。这涉及到探索数据管理和访问控制机制，以保护敏感信息，同时仍能在项目相关者之间进行必要的见解交换。通过系统地探讨这些研究问题，我们的目标是推动
    LMA 系统在软件工程中的创新，旨在创建一个更具凝聚力、高效和灵活的 LMA 驱动开发过程。
- en: References
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: (1)
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: （1）
- en: 'Abdelnabi et al. (2023) Sahar Abdelnabi, Amr Gomaa, Sarath Sivaprasad, Lea
    Schönherr, and Mario Fritz. 2023. Llm-deliberation: Evaluating llms with interactive
    multi-agent negotiation games. *arXiv preprint arXiv:2309.17234* (2023).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Abdelnabi 等（2023）Sahar Abdelnabi、Amr Gomaa、Sarath Sivaprasad、Lea Schönherr 和
    Mario Fritz。2023年。《Llm-deliberation：通过互动多代理谈判游戏评估 LLMs》。*arXiv 预印本 arXiv:2309.17234*（2023年）。
- en: 'Abrahamsson et al. (2017) Pekka Abrahamsson, Outi Salo, Jussi Ronkainen, and
    Juhani Warsta. 2017. Agile software development methods: Review and analysis.
    *arXiv preprint arXiv:1709.08439* (2017).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Abrahamsson 等（2017）Pekka Abrahamsson、Outi Salo、Jussi Ronkainen 和 Juhani Warsta。2017年。《敏捷软件开发方法：回顾与分析》。*arXiv
    预印本 arXiv:1709.08439*（2017年）。
- en: Achiam et al. (2023) Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad,
    Ilge Akkaya, Florencia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman,
    Shyamal Anadkat, et al. 2023. Gpt-4 technical report. *arXiv preprint arXiv:2303.08774*
    (2023).
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Achiam等人（2023）Josh Achiam, Steven Adler, Sandhini Agarwal, Lama Ahmad, Ilge
    Akkaya, Florencia Leoni Aleman, Diogo Almeida, Janko Altenschmidt, Sam Altman,
    Shyamal Anadkat 等. 2023. Gpt-4技术报告. *arXiv预印本 arXiv:2303.08774* (2023).
- en: 'Agashe (2023) Saaket Agashe. 2023. *LLM-Coordination: Developing Coordinating
    Agents with Large Language Models*. University of California, Santa Cruz.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Agashe（2023）Saaket Agashe. 2023. *LLM-协调：使用大型语言模型开发协调代理*. 加州大学圣克鲁斯分校.
- en: 'Albrecht and Stone (2018) Stefano V Albrecht and Peter Stone. 2018. Autonomous
    agents modelling other agents: A comprehensive survey and open problems. *Artificial
    Intelligence* 258 (2018), 66–95.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Albrecht和Stone（2018）Stefano V Albrecht 和 Peter Stone. 2018. 自主代理建模其他代理：全面调查与开放问题.
    *人工智能* 258 (2018), 66–95.
- en: Belbin and Brown (2022) R Meredith Belbin and Victoria Brown. 2022. *Team roles
    at work*. Routledge.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Belbin和Brown（2022）R Meredith Belbin 和 Victoria Brown. 2022. *工作中的团队角色*. Routledge.
- en: Chase (2022) Harrison Chase. 2022. *LangChain*. [https://github.com/langchain-ai/langchain](https://github.com/langchain-ai/langchain)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chase（2022）Harrison Chase. 2022. *LangChain*. [https://github.com/langchain-ai/langchain](https://github.com/langchain-ai/langchain)
- en: 'Chen et al. (2023) Yongchao Chen, Jacob Arkin, Yang Zhang, Nicholas Roy, and
    Chuchu Fan. 2023. Scalable multi-robot collaboration with large language models:
    Centralized or decentralized systems? *arXiv preprint arXiv:2309.15943* (2023).'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chen等人（2023）Yongchao Chen, Jacob Arkin, Yang Zhang, Nicholas Roy, 和 Chuchu Fan.
    2023. 基于大型语言模型的可扩展多机器人协作：集中式还是分散式系统？*arXiv预印本 arXiv:2309.15943* (2023).
- en: 'Cheng et al. (2024) Yuheng Cheng, Ceyao Zhang, Zhengwen Zhang, Xiangrui Meng,
    Sirui Hong, Wenhao Li, Zihao Wang, Zekai Wang, Feng Yin, Junhua Zhao, et al. 2024.
    Exploring Large Language Model based Intelligent Agents: Definitions, Methods,
    and Prospects. *arXiv preprint arXiv:2401.03428* (2024).'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cheng等人（2024）Yuheng Cheng, Ceyao Zhang, Zhengwen Zhang, Xiangrui Meng, Sirui
    Hong, Wenhao Li, Zihao Wang, Zekai Wang, Feng Yin, Junhua Zhao 等. 2024. 探索基于大型语言模型的智能代理：定义、方法与前景.
    *arXiv预印本 arXiv:2401.03428* (2024).
- en: Dong et al. (2023) Yihong Dong, Xue Jiang, Zhi Jin, and Ge Li. 2023. Self-collaboration
    Code Generation via ChatGPT. *arXiv preprint arXiv:2304.07590* (2023).
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dong等人（2023）Yihong Dong, Xue Jiang, Zhi Jin, 和 Ge Li. 2023. 自我协作代码生成通过ChatGPT.
    *arXiv预印本 arXiv:2304.07590* (2023).
- en: Du et al. (2023) Yilun Du, Shuang Li, Antonio Torralba, Joshua B Tenenbaum,
    and Igor Mordatch. 2023. Improving factuality and reasoning in language models
    through multiagent debate. *arXiv preprint arXiv:2305.14325* (2023).
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Du等人（2023）Yilun Du, Shuang Li, Antonio Torralba, Joshua B Tenenbaum, 和 Igor
    Mordatch. 2023. 通过多智能体辩论提高语言模型的真实性和推理能力. *arXiv预印本 arXiv:2305.14325* (2023).
- en: Dwork (2006) Cynthia Dwork. 2006. Differential privacy. In *International colloquium
    on automata, languages, and programming*. Springer, 1–12.
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dwork（2006）Cynthia Dwork. 2006. 差分隐私. 收录于 *国际自动机、语言与编程研讨会*. Springer, 1–12.
- en: 'Franklin and Graesser (1996) Stan Franklin and Art Graesser. 1996. Is it an
    Agent, or just a Program?: A Taxonomy for Autonomous Agents. In *International
    workshop on agent theories, architectures, and languages*. Springer, 21–35.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Franklin和Graesser（1996）Stan Franklin 和 Art Graesser. 1996. 这是一个代理，还是只是一个程序？：自主代理的分类.
    收录于 *国际代理理论、架构和语言研讨会*. Springer, 21–35.
- en: Goguen and Linde (1993) Joseph A Goguen and Charlotte Linde. 1993. Techniques
    for requirements elicitation. In *[1993] Proceedings of the IEEE International
    Symposium on Requirements Engineering*. IEEE, 152–164.
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Goguen和Linde（1993）Joseph A Goguen 和 Charlotte Linde. 1993. 需求引导技术. 收录于 *[1993]
    IEEE国际需求工程研讨会论文集*. IEEE, 152–164.
- en: Goldreich (1998) Oded Goldreich. 1998. Secure multi-party computation. *Manuscript.
    Preliminary version* 78, 110 (1998), 1–108.
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Goldreich（1998）Oded Goldreich. 1998. 安全多方计算. *手稿. 初步版本* 78, 110 (1998), 1–108.
- en: 'Han et al. (2024) Shanshan Han, Qifan Zhang, Yuhang Yao, Weizhao Jin, Zhaozhuo
    Xu, and Chaoyang He. 2024. LLM Multi-Agent Systems: Challenges and Open Problems.
    *arXiv preprint arXiv:2402.03578* (2024).'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Han等人（2024）Shanshan Han, Qifan Zhang, Yuhang Yao, Weizhao Jin, Zhaozhuo Xu,
    和 Chaoyang He. 2024. LLM多智能体系统：挑战与开放问题. *arXiv预印本 arXiv:2402.03578* (2024).
- en: 'He et al. (2022) Junda He, Bowen Xu, Zhou Yang, DongGyun Han, Chengran Yang,
    and David Lo. 2022. Ptm4tag: sharpening tag recommendation of stack overflow posts
    with pre-trained models. In *Proceedings of the 30th IEEE/ACM International Conference
    on Program Comprehension*. 1–11.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: He等人（2022）Junda He, Bowen Xu, Zhou Yang, DongGyun Han, Chengran Yang, 和 David
    Lo. 2022. Ptm4tag：利用预训练模型优化Stack Overflow帖子标签推荐. 收录于 *第30届IEEE/ACM国际程序理解会议论文集*.
    1–11.
- en: Hewitt et al. (1973) Carl Hewitt, Peter Boehler Bishop, and Richard Steiger.
    1973. A Universal Modular ACTOR Formalism for Artificial Intelligence. In *Proceedings
    of the 3rd International Joint Conference on Artificial Intelligence. Standford,
    CA, USA, August 20-23, 1973*, Nils J. Nilsson (Ed.). William Kaufmann, 235–245.
    [http://ijcai.org/Proceedings/73/Papers/027B.pdf](http://ijcai.org/Proceedings/73/Papers/027B.pdf)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hewitt et al. (1973) Carl Hewitt, Peter Boehler Bishop, and Richard Steiger.
    1973. 一种用于人工智能的通用模块化ACTOR形式。见于 *第三届国际人工智能联合会议论文集。美国加州斯坦福，1973年8月20-23日*，Nils J.
    Nilsson（编）。William Kaufmann, 235–245。 [http://ijcai.org/Proceedings/73/Papers/027B.pdf](http://ijcai.org/Proceedings/73/Papers/027B.pdf)
- en: 'Hong et al. (2023) Sirui Hong, Xiawu Zheng, Jonathan Chen, Yuheng Cheng, Jinlin
    Wang, Ceyao Zhang, Zili Wang, Steven Ka Shing Yau, Zijuan Lin, Liyang Zhou, et al.
    2023. Metagpt: Meta programming for multi-agent collaborative framework. *arXiv
    preprint arXiv:2308.00352* (2023).'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hong et al. (2023) Sirui Hong, Xiawu Zheng, Jonathan Chen, Yuheng Cheng, Jinlin
    Wang, Ceyao Zhang, Zili Wang, Steven Ka Shing Yau, Zijuan Lin, Liyang Zhou, et
    al. 2023. Metagpt：多代理协作框架的元编程。*arXiv预印本arXiv:2308.00352* (2023)。
- en: 'Horton (2023) John J Horton. 2023. *Large language models as simulated economic
    agents: What can we learn from homo silicus?* Technical Report. National Bureau
    of Economic Research.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Horton (2023) John J Horton. 2023. *大型语言模型作为模拟经济代理：我们能从人造硅人中学到什么？* 技术报告。国家经济研究局。
- en: 'Huang et al. (2023) Dong Huang, Qingwen Bu, Jie M Zhang, Michael Luck, and
    Heming Cui. 2023. AgentCoder: Multi-Agent-based Code Generation with Iterative
    Testing and Optimisation. *arXiv preprint arXiv:2312.13010* (2023).'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Huang et al. (2023) Dong Huang, Qingwen Bu, Jie M Zhang, Michael Luck, and Heming
    Cui. 2023. AgentCoder：基于多代理的代码生成与迭代测试和优化。*arXiv预印本arXiv:2312.13010* (2023)。
- en: Kan (2003) Stephen H Kan. 2003. *Metrics and models in software quality engineering*.
    Addison-Wesley Professional.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kan (2003) Stephen H Kan. 2003. *软件质量工程中的度量与模型*。Addison-Wesley Professional。
- en: Kasneci et al. (2023) Enkelejda Kasneci, Kathrin Seßler, Stefan Küchemann, Maria
    Bannert, Daryna Dementieva, Frank Fischer, Urs Gasser, Georg Groh, Stephan Günnemann,
    Eyke Hüllermeier, et al. 2023. ChatGPT for good? On opportunities and challenges
    of large language models for education. *Learning and individual differences*
    103 (2023), 102274.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kasneci et al. (2023) Enkelejda Kasneci, Kathrin Seßler, Stefan Küchemann, Maria
    Bannert, Daryna Dementieva, Frank Fischer, Urs Gasser, Georg Groh, Stephan Günnemann,
    Eyke Hüllermeier, et al. 2023. ChatGPT的好处？大型语言模型在教育中的机遇与挑战。*学习与个体差异* 103 (2023),
    102274。
- en: 'langroid contributors (2024) The langroid contributors. 2024. langroid: A Language
    Model Framework. [https://github.com/langroid/langroid](https://github.com/langroid/langroid).
    Accessed: 2024-03-20.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'langroid contributors (2024) The langroid contributors. 2024. langroid: 语言模型框架。
    [https://github.com/langroid/langroid](https://github.com/langroid/langroid)。访问时间：2024-03-20。'
- en: 'Larman (2004) Craig Larman. 2004. *Agile and iterative development: a manager’s
    guide*. Addison-Wesley Professional.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Larman (2004) Craig Larman. 2004. *敏捷与迭代开发：管理者指南*。Addison-Wesley Professional。
- en: 'Li et al. (2024) Guohao Li, Hasan Hammoud, Hani Itani, Dmitrii Khizbullin,
    and Bernard Ghanem. 2024. Camel: Communicative agents for” mind” exploration of
    large language model society. *Advances in Neural Information Processing Systems*
    36 (2024).'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Li et al. (2024) Guohao Li, Hasan Hammoud, Hani Itani, Dmitrii Khizbullin,
    and Bernard Ghanem. 2024. Camel: 用于“大脑”探索的大型语言模型社会的交互代理。*神经信息处理系统进展* 36 (2024)。'
- en: Liang et al. (2023) Tian Liang, Zhiwei He, Wenxiang Jiao, Xing Wang, Yan Wang,
    Rui Wang, Yujiu Yang, Zhaopeng Tu, and Shuming Shi. 2023. Encouraging divergent
    thinking in large language models through multi-agent debate. *arXiv preprint
    arXiv:2305.19118* (2023).
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liang et al. (2023) Tian Liang, Zhiwei He, Wenxiang Jiao, Xing Wang, Yan Wang,
    Rui Wang, Yujiu Yang, Zhaopeng Tu, and Shuming Shi. 2023. 通过多代理辩论鼓励大型语言模型的发散思维。*arXiv预印本arXiv:2305.19118*
    (2023)。
- en: 'Lo (2023) David Lo. 2023. Trustworthy and Synergistic Artificial Intelligence
    for Software Engineering: Vision and Roadmaps. *arXiv preprint arXiv:2309.04142*
    (2023).'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lo (2023) David Lo. 2023. 可信赖且协同的人工智能用于软件工程：愿景与路线图。*arXiv预印本arXiv:2309.04142*
    (2023)。
- en: Maes (1993) Pattie Maes. 1993. Modeling adaptive autonomous agents. *Artificial
    life* 1, 1_2 (1993), 135–162.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Maes (1993) Pattie Maes. 1993. 建模自适应自主代理。*人工生命* 1, 1_2 (1993), 135–162。
- en: 'Mele (2001) Alfred R Mele. 2001. *Autonomous agents: From self-control to autonomy*.
    Oxford University Press, USA.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mele (2001) Alfred R Mele. 2001. *自主代理：从自我控制到自主*。牛津大学出版社，美国。
- en: Osika (2023) Anton Osika. 2023. *gpt-engineer*. [https://github.com/gpt-engineer-org/gpt-engineer](https://github.com/gpt-engineer-org/gpt-engineer)
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Osika (2023) Anton Osika. 2023. *gpt-engineer*。 [https://github.com/gpt-engineer-org/gpt-engineer](https://github.com/gpt-engineer-org/gpt-engineer)
- en: Qian et al. (2023) Chen Qian, Xin Cong, Cheng Yang, Weize Chen, Yusheng Su,
    Juyuan Xu, Zhiyuan Liu, and Maosong Sun. 2023. Communicative agents for software
    development. *arXiv preprint arXiv:2307.07924* (2023).
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qian et al. (2023) 钱晨、邢聪、杨成、陈伟泽、苏宇晟、徐久远、刘志远和孙茂松。2023年。《用于软件开发的通信代理》。*arXiv预印本
    arXiv:2307.07924*（2023年）。
- en: Shoham (1993) Yoav Shoham. 1993. Agent-oriented programming. *Artificial intelligence*
    60, 1 (1993), 51–92.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shoham (1993) 约阿夫·肖汉。1993年。《面向代理的编程》。*人工智能* 60, 1 (1993), 51–92。
- en: Significant Gravitas ([n. d.]) Significant Gravitas. [n. d.]. *AutoGPT*. [https://github.com/Significant-Gravitas/AutoGPT](https://github.com/Significant-Gravitas/AutoGPT)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Significant Gravitas ([n. d.]) Significant Gravitas. [n. d.]. *AutoGPT*. [https://github.com/Significant-Gravitas/AutoGPT](https://github.com/Significant-Gravitas/AutoGPT)
- en: 'Tian (2005) Jeff Tian. 2005. *Software quality engineering: testing, quality
    assurance, and quantifiable improvement*. John Wiley & Sons.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tian (2005) 杰夫·田。2005年。《*软件质量工程：测试、质量保证和可量化改进*》。约翰·威利与儿子公司。
- en: Unland (2015) Rainer Unland. 2015. Software agent systems. In *Industrial Agents*.
    Elsevier, 3–22.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Unland (2015) 莱纳·昂兰德。2015年。《软件代理系统》。在*工业代理*中。爱思唯尔，3–22。
- en: 'Wang et al. (2023c) Guanzhi Wang, Yuqi Xie, Yunfan Jiang, Ajay Mandlekar, Chaowei
    Xiao, Yuke Zhu, Linxi Fan, and Anima Anandkumar. 2023c. Voyager: An open-ended
    embodied agent with large language models. *arXiv preprint arXiv:2305.16291* (2023).'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wang et al. (2023c) 王冠之、谢宇奇、姜云帆、阿杰·曼德尔卡、肖超伟、朱禹可、范林熙和安尼玛·安南德库马尔。2023c年。《Voyager：一个具有大型语言模型的开放式具身代理》。*arXiv预印本
    arXiv:2305.16291*（2023年）。
- en: Wang et al. (2023b) Lei Wang, Chen Ma, Xueyang Feng, Zeyu Zhang, Hao Yang, Jingsen
    Zhang, Zhiyuan Chen, Jiakai Tang, Xu Chen, Yankai Lin, et al. 2023b. A Survey
    on Large Language Model based Autonomous Agents. CoRR abs/2308.11432 (2023).
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wang et al. (2023b) 王磊、马晨、冯学洋、张泽宇、杨浩、张景森、陈志远、唐佳凯、陈旭、林彦凯等。2023b年。《基于大型语言模型的自主代理调查》。CoRR
    abs/2308.11432（2023年）。
- en: 'Wang et al. (2023a) Zihao Wang, Shaofei Cai, Guanzhou Chen, Anji Liu, Xiaojian
    Ma, and Yitao Liang. 2023a. Describe, explain, plan and select: Interactive planning
    with large language models enables open-world multi-task agents. *arXiv preprint
    arXiv:2302.01560* (2023).'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wang et al. (2023a) 王梓浩、蔡少飞、陈冠洲、刘安吉、马小剑和梁意涛。2023a年。《描述、解释、计划和选择：与大型语言模型互动规划使开放世界多任务代理成为可能》。*arXiv预印本
    arXiv:2302.01560*（2023年）。
- en: Wegner (1990) Peter Wegner. 1990. Concepts and paradigms of object-oriented
    programming. *ACM Sigplan Oops Messenger* 1, 1 (1990), 7–87.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wegner (1990) 彼得·维格纳。1990年。《面向对象编程的概念和范式》。*ACM Sigplan Oops Messenger* 1, 1
    (1990), 7–87。
- en: 'Wu et al. (2023a) Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran Wu, Shaokun
    Zhang, Erkang Zhu, Beibin Li, Li Jiang, Xiaoyun Zhang, and Chi Wang. 2023a. AutoGen:
    Enabling Next-Gen LLM Applications via Multi-Agent Conversation Framework. *CoRR*
    abs/2308.08155 (2023). [https://doi.org/10.48550/ARXIV.2308.08155](https://doi.org/10.48550/ARXIV.2308.08155)
    arXiv:2308.08155'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wu et al. (2023a) 吴青云、巴恩萨尔、张洁玉、吴怡然、张绍坤、朱尔康、李北宾、姜丽、张小云和王迟。2023a年。《AutoGen：通过多代理对话框架实现下一代LLM应用》。*CoRR*
    abs/2308.08155（2023年）。 [https://doi.org/10.48550/ARXIV.2308.08155](https://doi.org/10.48550/ARXIV.2308.08155)
    arXiv:2308.08155
- en: Wu et al. (2023b) Yiran Wu, Feiran Jia, Shaokun Zhang, Qingyun Wu, Hangyu Li,
    Erkang Zhu, Yue Wang, Yin Tat Lee, Richard Peng, and Chi Wang. 2023b. An empirical
    study on challenging math problem solving with gpt-4. *arXiv preprint arXiv:2306.01337*
    (2023).
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wu et al. (2023b) 吴怡然、贾飞然、张绍坤、吴青云、李航宇、朱尔康、王岳、李尧、彭理查德和王迟。2023b年。《基于GPT-4的挑战性数学问题求解的实证研究》。*arXiv预印本
    arXiv:2306.01337*（2023年）。
- en: 'Wu et al. (2024) Zengqing Wu, Shuyuan Zheng, Qianying Liu, Xu Han, Brian Inhyuk
    Kwon, Makoto Onizuka, Shaojie Tang, Run Peng, and Chuan Xiao. 2024. Shall We Talk:
    Exploring Spontaneous Collaborations of Competing LLM Agents. *arXiv preprint
    arXiv:2402.12327* (2024).'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wu et al. (2024) 吴泽青、郑书源、刘倩颖、韩旭、布莱恩·尹赫·权、小野诚、唐绍杰、彭润、肖川。2024年。《我们可以谈谈吗：探索竞争性LLM代理的自发合作》。*arXiv预印本
    arXiv:2402.12327*（2024年）。
- en: 'Xi et al. (2023) Zhiheng Xi, Wenxiang Chen, Xin Guo, Wei He, Yiwen Ding, Boyang
    Hong, Ming Zhang, Junzhe Wang, Senjie Jin, Enyu Zhou, et al. 2023. The rise and
    potential of large language model based agents: A survey. *arXiv preprint arXiv:2309.07864*
    (2023).'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xi et al. (2023) 习志恒、陈文翔、郭鑫、何伟、丁艺文、洪博洋、张明、王俊哲、金森杰、周恩宇等。2023年。《基于大型语言模型的代理的崛起与潜力：综述》。*arXiv预印本
    arXiv:2309.07864*（2023年）。
- en: 'Xie et al. (2023) Tianbao Xie, Fan Zhou, Zhoujun Cheng, Peng Shi, Luoxuan Weng,
    Yitao Liu, Toh Jing Hua, Junning Zhao, Qian Liu, Che Liu, Leo Z. Liu, Yiheng Xu,
    Hongjin Su, Dongchan Shin, Caiming Xiong, and Tao Yu. 2023. OpenAgents: An Open
    Platform for Language Agents in the Wild. arXiv:2310.10634 [cs.CL]'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Xie et al. (2023) Tianbao Xie, Fan Zhou, Zhoujun Cheng, Peng Shi, Luoxuan Weng,
    Yitao Liu, Toh Jing Hua, Junning Zhao, Qian Liu, Che Liu, Leo Z. Liu, Yiheng Xu,
    Hongjin Su, Dongchan Shin, Caiming Xiong, 和 Tao Yu. 2023. OpenAgents: 一个开放的平台，用于野外语言代理。arXiv:2310.10634
    [cs.CL]'
- en: 'Yang et al. (2023) Chengran Yang, Jiakun Liu, Bowen Xu, Christoph Treude, Yunbo
    Lyu, Ming Li, and David Lo. 2023. APIDocBooster: An Extract-Then-Abstract Framework
    Leveraging Large Language Models for Augmenting API Documentation. *arXiv preprint
    arXiv:2312.10934* (2023).'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yang et al. (2023) Chengran Yang, Jiakun Liu, Bowen Xu, Christoph Treude, Yunbo
    Lyu, Ming Li, 和 David Lo. 2023. APIDocBooster: 一种利用大型语言模型增强 API 文档的提取-再抽象框架。*arXiv
    预印本 arXiv:2312.10934* (2023)。'
- en: 'Zhang et al. (2023) Yue Zhang, Yafu Li, Leyang Cui, Deng Cai, Lemao Liu, Tingchen
    Fu, Xinting Huang, Enbo Zhao, Yu Zhang, Yulong Chen, et al. 2023. Siren’s song
    in the AI ocean: a survey on hallucination in large language models. *arXiv preprint
    arXiv:2309.01219* (2023).'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhang et al. (2023) Yue Zhang, Yafu Li, Leyang Cui, Deng Cai, Lemao Liu, Tingchen
    Fu, Xinting Huang, Enbo Zhao, Yu Zhang, Yulong Chen, 等. 2023. AI 海洋中的“塞壬之歌”：关于大型语言模型中的幻觉的综述。*arXiv
    预印本 arXiv:2309.01219* (2023)。
- en: Zhao et al. (2024) Zhonghan Zhao, Kewei Chen, Dongxu Guo, Wenhao Chai, Tian
    Ye, Yanting Zhang, and Gaoang Wang. 2024. Hierarchical Auto-Organizing System
    for Open-Ended Multi-Agent Navigation. *arXiv preprint arXiv:2403.08282* (2024).
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhao et al. (2024) Zhonghan Zhao, Kewei Chen, Dongxu Guo, Wenhao Chai, Tian
    Ye, Yanting Zhang, 和 Gaoang Wang. 2024. 用于开放式多智能体导航的分层自组织系统。*arXiv 预印本 arXiv:2403.08282*
    (2024)。
- en: 'Zhou et al. (2023) Xin Zhou, Bowen Xu, DongGyun Han, Zhou Yang, Junda He, and
    David Lo. 2023. CCBERT: Self-Supervised Code Change Representation Learning. In
    *2023 IEEE International Conference on Software Maintenance and Evolution (ICSME)*.
    IEEE, 182–193.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Zhou et al. (2023) Xin Zhou, Bowen Xu, DongGyun Han, Zhou Yang, Junda He, 和
    David Lo. 2023. CCBERT: 自监督代码变更表示学习。在 *2023 IEEE 国际软件维护与演化会议 (ICSME)*。IEEE, 182–193。'
