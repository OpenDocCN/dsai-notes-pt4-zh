- en: <!--yml
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: <!--yml
- en: 'category: 未分类'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 类别：未分类
- en: 'date: 2024-09-08 19:02:56'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日期：2024-09-08 19:02:56
- en: -->
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: -->
- en: 'Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL through
    Workflow Paradigm'
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提升注意力的分解方法：通过工作流范式改进基于LLM的文本到SQL
- en: 来源：[https://ar5iv.labs.arxiv.org/html/2402.10671](https://ar5iv.labs.arxiv.org/html/2402.10671)
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 来源：[https://ar5iv.labs.arxiv.org/html/2402.10671](https://ar5iv.labs.arxiv.org/html/2402.10671)
- en: Yuanzhen Xie^(1,2)   Xinzhou Jin²  Tao Xie¹   Mingxiong Lin¹  Liang Chen²
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Yuanzhen Xie^(1,2)   Xinzhou Jin²  Tao Xie¹   Mingxiong Lin¹  Liang Chen²
- en: Chenyun Yu¹  Lei Cheng¹  Chengxiang Zhuo¹  Bo Hu¹  Zang Li¹
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Chenyun Yu¹  Lei Cheng¹  Chengxiang Zhuo¹  Bo Hu¹  Zang Li¹
- en: ¹Platform and Content Group, Tencent
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ¹腾讯平台与内容组
- en: ²Sun Yat-sen University
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ²中山大学
- en: xieyzh3@gmail.com    jinxzh5@mail2.sysu.edu.cn chenliang6, yuchy35@mail.sysu.edu.cn
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: xieyzh3@gmail.com    jinxzh5@mail2.sysu.edu.cn chenliang6, yuchy35@mail.sysu.edu.cn
- en: '{devintxie, matrixmxlin, echokong, raycheng, felixzhuo, harryyfhu, gavinzli}@tencent.com'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '{devintxie, matrixmxlin, echokong, raycheng, felixzhuo, harryyfhu, gavinzli}@tencent.com'
- en: Abstract
  id: totrans-12
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In-context learning of large-language models (LLMs) has achieved remarkable
    success in the field of natural language processing, while extensive case studies
    reveal that the single-step chain-of-thought prompting approach faces challenges
    such as attention diffusion and inadequate performance in complex tasks like text-to-SQL.
    To improve the contextual learning capabilities of LLMs in text-to-SQL, a workflow
    paradigm method is proposed, aiming to enhance the attention and problem-solving
    scope of LLMs through decomposition. Specifically, the information determination
    module for eliminating redundant information and the brand-new prompt structure
    based on problem classification greatly enhance the model’s attention. Additionally,
    the inclusion of self-correcting and active learning modules greatly expands the
    problem-solving scope of LLMs, hence improving the upper limit of LLM-based approaches.
    Extensive experiments conducted on three datasets demonstrate that our approach
    outperforms other methods by a significant margin. About 2-3 percentage point
    improvements compared to the existing baseline on the Spider Dev and Spider-Realistic
    datasets and new SOTA results on the Spider Test dataset are achieved. Our code
    is available on GitHub: [https://github.com/FlyingFeather/DEA-SQL](https://github.com/FlyingFeather/DEA-SQL).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 大语言模型（LLMs）的上下文学习在自然语言处理领域取得了显著成功，但广泛的案例研究表明，单步链式思维提示方法面临着注意力扩散和在复杂任务如文本到SQL中的表现不足等挑战。为了提高LLMs在文本到SQL中的上下文学习能力，提出了一种工作流范式方法，旨在通过分解增强LLMs的注意力和问题解决范围。具体来说，用于消除冗余信息的信息确定模块以及基于问题分类的新型提示结构大大增强了模型的注意力。此外，包含自我修正和主动学习模块大大扩展了LLMs的问题解决范围，从而提高了基于LLM方法的上限。在三个数据集上进行的大量实验表明，我们的方法显著优于其他方法。在Spider
    Dev和Spider-Realistic数据集上相比现有基线提高了约2-3个百分点，并在Spider Test数据集上取得了新的SOTA结果。我们的代码可在GitHub上获取：[https://github.com/FlyingFeather/DEA-SQL](https://github.com/FlyingFeather/DEA-SQL)。
- en: 'Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL through
    Workflow Paradigm'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 提升注意力的分解方法：通过工作流范式改进基于LLM的文本到SQL
- en: Yuanzhen Xie^(1,2)   Xinzhou Jin²  Tao Xie¹   Mingxiong Lin¹  Liang Chen² Chenyun
    Yu¹  Lei Cheng¹  Chengxiang Zhuo¹  Bo Hu¹  Zang Li¹ ¹Platform and Content Group,
    Tencent ²Sun Yat-sen University xieyzh3@gmail.com    jinxzh5@mail2.sysu.edu.cn
    chenliang6, yuchy35@mail.sysu.edu.cn {devintxie, matrixmxlin, echokong, raycheng,
    felixzhuo, harryyfhu, gavinzli}@tencent.com
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Yuanzhen Xie^(1,2)   Xinzhou Jin²  Tao Xie¹   Mingxiong Lin¹  Liang Chen² Chenyun
    Yu¹  Lei Cheng¹  Chengxiang Zhuo¹  Bo Hu¹  Zang Li¹ ¹腾讯平台与内容组 ²中山大学 xieyzh3@gmail.com 
      jinxzh5@mail2.sysu.edu.cn chenliang6, yuchy35@mail.sysu.edu.cn {devintxie, matrixmxlin,
    echokong, raycheng, felixzhuo, harryyfhu, gavinzli}@tencent.com
- en: 1 Introduction
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1 引言
- en: Many datasets are stored in tabular form, utilizing relational databases. Extracting
    data from such sources typically requires skilled professionals to access it through
    manually crafted structured query language (SQL) queries. This limitation restricts
    the accessibility of ubiquitous relational data to a broader range of non-technical
    users. The text-to-SQL parsing (Finegan-Dollak et al., [2018](#bib.bib7); Yu et al.,
    [2018](#bib.bib27); Qin et al., [2022](#bib.bib19)) task aims to bridge this gap
    by translating natural language questions (NLQ) into SQL query statements given
    a database schema without additional knowledge. This significantly reduces the
    barrier to database access, thereby garnering increasing attention from both academia
    and industry.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 许多数据集以表格形式存储，利用关系数据库。从这些来源提取数据通常需要熟练的专业人员通过手动编写的结构化查询语言（SQL）查询来访问。这一限制阻碍了广泛关系数据对更广泛非技术用户的可访问性。文本到SQL解析（Finegan-Dollak等，[2018](#bib.bib7)；Yu等，[2018](#bib.bib27)；Qin等，[2022](#bib.bib19)）任务旨在通过在给定数据库模式的情况下将自然语言问题（NLQ）翻译成SQL查询语句来弥合这一差距。这显著降低了数据库访问的障碍，从而引起了学术界和工业界的广泛关注。
- en: Early works on text-to-SQL parsing in the database community (Wang et al., [2020](#bib.bib23);
    Scholak et al., [2021](#bib.bib21); Hui et al., [2022](#bib.bib10)) have made
    significant strides. A dominant approach involves collecting labeled data and
    training models through supervised learning. While effective, this method requires
    a large amount of labeled training data, which entails high costs in both annotating
    SQL queries and conducting model training. As an alternative to supervised learning,
    in-context learning (Dong et al., [2022](#bib.bib5)) represents an emerging capability
    of large language models (LLMs), reducing the reliance on extensive datasets.
    With just a few examples, in-context learning enables LLMs to demonstrate performance
    comparable to or even surpassing fully supervised models across many natural language
    processing (NLP) tasks, such as sentiment analysis, machine translation and natural
    language inference (Liang et al., [2023](#bib.bib14); Xu et al., [2023](#bib.bib26);
    Wei et al., [2022](#bib.bib25)).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库社区对文本到SQL解析的早期研究（Wang等，[2020](#bib.bib23)；Scholak等，[2021](#bib.bib21)；Hui等，[2022](#bib.bib10)）取得了显著进展。一种主导的方法是收集标注数据并通过监督学习训练模型。虽然这种方法有效，但需要大量标注的训练数据，这涉及到在标注SQL查询和进行模型训练上的高成本。作为监督学习的替代方案，上下文学习（Dong等，[2022](#bib.bib5)）代表了大语言模型（LLMs）的一种新兴能力，减少了对大规模数据集的依赖。通过仅几个示例，上下文学习使LLMs能够在许多自然语言处理（NLP）任务中表现出与完全监督模型相当甚至超越的性能，如情感分析、机器翻译和自然语言推理（Liang等，[2023](#bib.bib14)；Xu等，[2023](#bib.bib26)；Wei等，[2022](#bib.bib25)）。
- en: In-context learning has also shown promising results in text-to-SQL parsing.
    Existing in-context learning methods (Tai et al., [2023](#bib.bib22); Chang and
    Fosler-Lussier, [2023a](#bib.bib2)) often employ techniques like chain-of-thought
    (COT), using prompts to accomplish complex text-to-SQL tasks. We conduct single-step
    COT experiments using GPT-4 on the Spider dataset and find that while COT does
    increase LLMs’ problem-solving scope (the correct solution produced by the LLMs)
    to some extent, however, the performance of these single-step prompts is limited.
    For example, instructions added within a lengthy prompt text might be disregarded
    due to the LLM’s attention being diluted by the excessive length of the text.
    Additionally, improving the prompt text often results in a seesaw effect, making
    it difficult to improve the overall performance as it is not universal for different
    types of problems.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文学习在文本到SQL解析中也表现出了有希望的结果。现有的上下文学习方法（Tai等，[2023](#bib.bib22)；Chang和Fosler-Lussier，[2023a](#bib.bib2)）通常使用链式思维（COT）等技术，通过提示完成复杂的文本到SQL任务。我们使用GPT-4在Spider数据集上进行单步COT实验，发现虽然COT确实在一定程度上扩展了LLM解决问题的范围（LLM产生的正确解决方案），但这些单步提示的性能是有限的。例如，长文本中的指令可能由于LLM的注意力被过长的文本稀释而被忽视。此外，改进提示文本通常会导致跷跷板效应，使得整体性能难以提升，因为它对不同类型的问题并不通用。
- en: Unlike traditional NLP tasks, text-to-SQL, which involves converting natural
    language to structured language, is more challenging. The DIN-SQL Pourreza and
    Rafiei ([2023](#bib.bib18)) method provides a new direction and achieves some
    success by decomposing steps and incorporating universal self-correction. However,
    this approach lacks targeted steps for specific error types, which restricts the
    effective expansion of LLMs’ problem-solving scope. Also with its fixed few-shot
    learning mechanism, it hampers the adaptability and generalizability of LLMs.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统的NLP任务不同，文本到SQL任务涉及将自然语言转换为结构化语言，这更具挑战性。DIN-SQL Pourreza和Rafiei ([2023](#bib.bib18))
    方法通过分解步骤和融入通用自我纠错提供了新的方向并取得了一些成功。然而，这种方法缺乏针对特定错误类型的步骤，这限制了LLMs问题解决范围的有效扩展。固定的少量样本学习机制也阻碍了LLMs的适应性和泛化能力。
- en: 'In this paper, we propose a workflow paradigm method for decomposing and enhancing
    attention based on few-shot. This method draws on human thinking patterns, adheres
    to the principle of making subtasks as simple as possible, and reduces irrelevant
    information in each step to specifically enhance the solvable scope of LLM and
    improve the attention of LLM to enhance their performance. It consists of five
    sub-modules: an Information Determination module that focuses on attention by
    reducing interference information through a two-stage method; a Classification
    & Hint module that solves different problems that cannot be generalized by simply
    providing different simple prompts; a few-shot SQL Generation module based on
    question template retrieval; a Self-Correcting module based on error summarization;
    and an Active Learning module that expands the model’s capabilities based on error
    cases. To reduce consumption, we minimized the number of few-shots required for
    each step, with the second stage of field filtering and the self-correction step
    being zero-shot and the SQL generation module outperforming existing few-shot-based
    baselines in a zero-shot environment. It has been found that the workflow prompting
    paradigm is more effective in improving overall performance compared to single-step
    prompting. In the experiments, execution accuracies of 85.4 and 81.5 were achieved
    on the Spider-dev and Spider-Realistic datasets, respectively, surpassing existing
    models and in-context learning schemes.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们提出了一种基于少量样本的工作流程范式方法，用于分解和增强关注度。该方法借鉴了人类思维模式，坚持将子任务尽可能简化的原则，并减少每一步中的无关信息，以特定地增强LLM的可解范围并提高LLM的关注度，从而提升其性能。该方法包括五个子模块：一个信息确定模块，通过两阶段方法减少干扰信息以关注；一个分类与提示模块，通过提供不同的简单提示解决无法概括的不同问题；一个基于问题模板检索的少量样本SQL生成模块；一个基于错误总结的自我纠错模块；以及一个基于错误案例扩展模型能力的主动学习模块。为了减少消耗，我们最小化了每一步所需的少量样本数量，第二阶段的领域过滤和自我纠错步骤为零样本，SQL生成模块在零样本环境下的表现优于现有的少量样本基线。实验发现，相较于单步提示，工作流程提示范式在提升整体性能方面更为有效。在实验中，Spider-dev和Spider-Realistic数据集上分别实现了85.4和81.5的执行准确率，超越了现有模型和上下文学习方案。
- en: 'Our contributions can be summarized as: 1) Propose a workflow paradigm solution
    to boost the attention of LLMs for complex problems as an example for text-to-SQL
    tasks; 2) Design a two-stage information filtering module to curtail irrelevant
    information to enhance the attention of LLMs, while adapting realistic questions
    with different questioning styles, which performs better on datasets that are
    closer to realistic questioning styles; 3) Propose a new prompt structure for
    text-to-SQL tasks. Categorize the problems and use different prompt patterns for
    different types of problems, presenting the key information to the model in a
    more explicit way to better improve the performance of the model; 4) The integration
    of LLMs for self-correction and active learning further improves the model.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的贡献可以总结为：1）提出一种工作流程范式解决方案，以提高LLMs对复杂问题的关注度，以文本到SQL任务为例；2）设计一个两阶段的信息过滤模块，以减少无关信息，增强LLMs的关注度，同时适应不同提问风格的现实问题，这在更接近现实提问风格的数据集上表现更好；3）为文本到SQL任务提出一种新的提示结构。对问题进行分类，并针对不同类型的问题使用不同的提示模式，以更明确的方式向模型呈现关键信息，从而更好地提升模型性能；4）LLMs的自我纠错和主动学习的集成进一步提升了模型。
- en: 2 Methodology
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2 方法论
- en: '![Refer to caption](img/3c918a9a0e6d883d4fd828bca8606851.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![参考标题](img/3c918a9a0e6d883d4fd828bca8606851.png)'
- en: 'Figure 1: The overall structure of the DEA-SQL model.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：DEA-SQL模型的总体结构。
- en: 'The emergence of chain-of-thought based on prompt engineering has stimulated
    the ability threshold of large language models(LLMs) to shine. Although prompt
    engineering has achieved some success in major domains, relying solely on the
    stimulation of prompt engineering is not enough for LLMs to learn to solve complex
    tasks. On the contrary, this approach of stacking a large amount of text content
    poses several major drawbacks: 1) If the LLM focuses on a lot of points at once,
    its attention becomes diluted and it is difficult to cover all the points, so
    the effect may be reduced based on not concocting the prompts attentively. 2)
    It is more difficult to get LLMs to focus on the specific issues you raise within
    a large amount of text.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 基于提示工程的思维链的出现，激发了大型语言模型（LLMs）的能力阈值的光芒。尽管提示工程在主要领域取得了一些成功，但仅仅依靠提示工程的刺激不足以让LLMs学会解决复杂任务。相反，这种堆积大量文本内容的方法存在几个主要缺陷：1）如果LLM一次关注很多点，其注意力会被稀释，难以覆盖所有要点，因此效果可能会降低，尤其是当未认真编制提示时。2）在大量文本中让LLMs专注于你提出的特定问题更加困难。
- en: When faced with complex problems, people’s solutions are usually to continuously
    try to break them down into multiple steps, ultimately coming up with a relatively
    complete process methodology to improve quality and efficiency. Inspired by this
    idea, we attempt to approach it from the perspective of workflow, breaking down
    the work into finer details to address the challenges mentioned in the introduction.
    Each time, we let the LLMs focus on a single atomic task, adhering to the principle
    of keeping the task as simple as possible and the information as streamlined as
    possible. This allows the LLMs’ attention to be concentrated, thereby enhancing
    their comprehension ability.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 面对复杂问题时，人们通常会尝试不断将其分解为多个步骤，最终提出一个相对完整的过程方法论，以提高质量和效率。受此启发，我们尝试从工作流的角度出发，将工作分解为更精细的细节，以解决引言中提到的挑战。每次，我们让LLMs专注于一个单一的原子任务，坚持任务尽可能简单、信息尽可能精简的原则。这使得LLMs的注意力可以集中，从而增强它们的理解能力。
- en: 'In the text-to-SQL task, the common solution process can be summarized as follows:
    1) Determine the necessary database information; 2) Identify the query type of
    the problem; 3) Consider the problem-solving approach based on the question type
    and write the corresponding SQL; 4) Perform a preliminary self-check on the SQL;
    5) Recall past mistake examples, check if the current answer has the same error
    points, and avoid repeating the same mistakes. Thus, based on the idea that decomposition
    for enhancing attention, we propose the workflow paradigm method named DEA-SQL
    with five modules as shown in Figure [1](#S2.F1 "Figure 1 ‣ 2 Methodology ‣ Decomposition
    for Enhancing Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm"):
    Information determination, Classification & Hint, SQL generation, Self-correction,
    Active learning. Some modules like information determination can be well-solved
    using traditional techniques. We choose to explore the comprehensive capabilities
    of LLMs at each step to demonstrate the effectiveness of the attention-focused
    workflow paradigm in in-context learning. Thus, each step is implemented using
    the LLM based on prompt engineering.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '在文本到SQL任务中，常见的解决过程可以总结为：1）确定必要的数据库信息；2）识别问题的查询类型；3）根据问题类型考虑解决方法，并编写相应的SQL；4）对SQL进行初步自检；5）回顾过去的错误示例，检查当前答案是否存在相同的错误点，避免重复相同的错误。因此，基于提升注意力的分解思想，我们提出了一个名为DEA-SQL的工作流范式方法，如图[1](#S2.F1
    "Figure 1 ‣ 2 Methodology ‣ Decomposition for Enhancing Attention: Improving LLM-based
    Text-to-SQL through Workflow Paradigm")所示，包含五个模块：信息确定、分类与提示、SQL生成、自我修正、主动学习。像信息确定这样的模块可以通过传统技术很好地解决。我们选择在每一步中探索LLMs的综合能力，以展示专注于注意力的工作流范式在上下文学习中的有效性。因此，每一步都使用基于提示工程的LLM来实现。'
- en: 2.1 Information Determination
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1 信息确定
- en: The information determination step is primarily responsible for identifying
    the schema of the specific database needed for the problem. Some studies Lei et al.
    ([2020](#bib.bib11)); Pourreza and Rafiei ([2023](#bib.bib18)) have demonstrated
    that schema linking facilitates cross-domain generalization and synthesis of complex
    queries. A simple starting point for this step is that giving too much unwieldy
    information to the LLMs can overly interfere with their ability to comprehend
    it. By minimizing such interference, we can potentially improve the attention
    and effectiveness of the LLMs. Specifically, determine the elemental information
    about the tables and columns that the problem needs to use before determining
    the computational logic for the specific SQL, and pare down any other extraneous
    table information.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 信息确定步骤主要负责识别特定问题所需的数据库模式。一些研究 Lei et al. ([2020](#bib.bib11))；Pourreza 和 Rafiei
    ([2023](#bib.bib18)) 表明模式链接有助于跨领域泛化和复杂查询的综合。此步骤的一个简单起点是，给 LLM 过多笨重的信息可能会过度干扰其理解能力。通过减少这种干扰，我们可以潜在地提高
    LLM 的注意力和有效性。具体而言，在确定特定 SQL 的计算逻辑之前，确定问题需要使用的表和列的基本信息，并剔除其他多余的表信息。
- en: 'Common techniques for determining table and column information typically rely
    on one-step prompts and few-shots approaches Dong et al. ([2023](#bib.bib6));
    Pourreza and Rafiei ([2023](#bib.bib18)). However, due to the more open-ended
    nature of the questions being asked, these methods often struggle to capture all
    the key vocabulary, rendering them relatively ineffective. To address the issue
    of instability in LLMs caused by changes in the problem, we propose a two-stage
    approach that differs from existing methods: we first identify the problem elements(elements
    identification) and then go through them to select the required vocabulary to
    further refine the relatively complex problem (Information filter) as shown in
    Figure [1](#S2.F1 "Figure 1 ‣ 2 Methodology ‣ Decomposition for Enhancing Attention:
    Improving LLM-based Text-to-SQL through Workflow Paradigm"). The primary issues
    requiring attention can also be identified during this stage, allowing the LLMs
    to contemplate these concerns during the SQL generation phase.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 确定表和列信息的常见技术通常依赖于一步提示和少量示例的方法 Dong et al. ([2023](#bib.bib6))；Pourreza 和 Rafiei
    ([2023](#bib.bib18))。然而，由于问题的开放性，这些方法往往难以捕捉所有关键词汇，使其相对低效。为了解决因问题变化导致 LLM 不稳定的问题，我们提出了一种与现有方法不同的两阶段方法：首先识别问题元素（elements
    identification），然后筛选所需词汇以进一步精炼相对复杂的问题（信息过滤），如图 [1](#S2.F1 "图 1 ‣ 2 方法 ‣ 通过工作流范式提升注意力：改进基于
    LLM 的 Text-to-SQL") 所示。主要需要关注的问题也可以在此阶段识别，使 LLM 在 SQL 生成阶段能够考虑这些问题。
- en: 2.2 Classification & Hint
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2 分类与提示
- en: '![Refer to caption](img/bf7296989c835c7c9c9c673b3a39045b.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/bf7296989c835c7c9c9c673b3a39045b.png)'
- en: 'Figure 2: DEA-SQL model’s prompt structure in SQL Generation module.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '图 2: DEA-SQL 模型在 SQL 生成模块中的提示结构。'
- en: In the error analysis of directly using the LLM and inspired by DIN-SQL Pourreza
    and Rafiei ([2023](#bib.bib18)), it is found that it has weaker support for nested
    queries and joint problems. The accuracy of distinguishing between nesting and
    joining when directly writing SQL is relatively low. It implements the join problem
    using "IN" or other nested queries. In addition, for complex multi-level joint
    problems, it is challenging to comprehend the correct join conditions at a glance
    when confronted with a plethora of table creation information. This makes LLMs
    easy to envision or employ incorrect join conditions.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在直接使用 LLM 的错误分析中，并受到 DIN-SQL Pourreza 和 Rafiei ([2023](#bib.bib18)) 的启发，发现其对嵌套查询和联合问题的支持较弱。直接编写
    SQL 时区分嵌套和连接的准确性较低。它使用 "IN" 或其他嵌套查询来实现连接问题。此外，对于复杂的多级联合问题，当面对大量表创建信息时，难以一眼理解正确的连接条件。这使得
    LLM 容易设想或使用不正确的连接条件。
- en: 'To address these issues, the classification & hint module is proposed. We divide
    the problems into four major categories based on whether the SQL requires nested
    subqueries and whether it requires joining tables: easy, join, nested, and join-nested
    problems. The "easy" category refers to problems that do not require joining tables
    or utilizing nested queries. The "join" category pertains to problems that necessitate
    joining tables but not nested queries. The "nested" category encompasses problems
    that do not require joining tables but do demand nested queries. Finally, the
    "join-nested" category includes problems that call for both joining tables and
    employing nested queries. Subsequently, in the following SQL generation step,
    we add special prompt words for different problem types to remind it to pay attention
    to the relevant problem types as shown in Figure [1](#S2.F1 "Figure 1 ‣ 2 Methodology
    ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL through
    Workflow Paradigm").'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这些问题，提出了分类与提示模块。我们将问题分为四个主要类别，依据 SQL 是否需要嵌套子查询以及是否需要联接表格：简单、联接、嵌套和联接-嵌套问题。“简单”类别指的是不需要联接表格或使用嵌套查询的问题。“联接”类别涉及需要联接表格但不需要嵌套查询的问题。“嵌套”类别包括不需要联接表格但需要嵌套查询的问题。最后，“联接-嵌套”类别涵盖了需要同时联接表格和使用嵌套查询的问题。随后，在SQL生成步骤中，我们为不同问题类型添加特殊提示词，以提醒其注意相关问题类型，如图[1](#S2.F1
    "图 1 ‣ 2 方法论 ‣ 注意力增强的分解：通过工作流范式改进基于LLM的文本到SQL")所示。
- en: 'Since SQL is a language for structured databases, there is a certain gap between
    it and natural language. As query problems grow more complex, there is a need
    for additional information to enhance the precision of the LLMs. To help the LLM
    focus its attention, we provide additional information about join conditions in
    the form of a list structure. Comparing the Database and Link info in Figure [1](#S2.F1
    "Figure 1 ‣ 2 Methodology ‣ Decomposition for Enhancing Attention: Improving LLM-based
    Text-to-SQL through Workflow Paradigm"), it is obvious that the Link information
    is more intuitive for humans or models to select the correct join condition. In
    addition, different hints (H) are provided in SQL generation based on the type
    of question as shown in Figure [2](#S2.F2 "Figure 2 ‣ 2.2 Classification & Hint
    ‣ 2 Methodology ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL
    through Workflow Paradigm") for the Hints.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 SQL 是一种针对结构化数据库的语言，它与自然语言之间存在一定的差距。随着查询问题的复杂性增加，需要额外的信息来提升 LLM 的精确度。为了帮助
    LLM 集中注意力，我们提供了以列表结构呈现的联接条件的额外信息。通过比较图[1](#S2.F1 "图 1 ‣ 2 方法论 ‣ 注意力增强的分解：通过工作流范式改进基于LLM的文本到SQL")中的数据库和链接信息，可以明显看出，链接信息对于人类或模型来说更直观，以选择正确的联接条件。此外，根据问题类型，SQL
    生成时提供了不同的提示（H），如图[2](#S2.F2 "图 2 ‣ 2.2 分类与提示 ‣ 2 方法论 ‣ 注意力增强的分解：通过工作流范式改进基于LLM的文本到SQL")所示。
- en: 2.3 SQL Generation
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.3 SQL 生成
- en: Different question types necessitate various focal points. In accordance with
    the classification of questions, we incorporate distinct prompts for each category
    to emphasize the aspects that demand particular attention within that question
    type. The overall question prompt follows the format $
    shown as Figure [2](#S2.F2 $), where $F$ represents few-shots that are optional,
    $D$ denotes database, $H-FK$ represents the foreign keys that are optional, $I$
    indicates command information that describes the problem requirements, $Q$ represents
    the question, $H$ denotes the hints depending on the question type and $S$ denotes
    the specification depending on the question type.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的问题类型需要不同的关注点。根据问题的分类，我们为每个类别引入了不同的提示，以强调该问题类型中需要特别注意的方面。整体问题提示遵循格式 $，如图[2](#S2.F2
    $)所示，其中 $F$ 代表可选的少量示例，$D$ 表示数据库，$H-FK$ 代表可选的外键，$I$ 指命令信息，用于描述问题要求，$Q$ 表示问题，$H$
    代表根据问题类型的提示，$S$ 表示根据问题类型的规格。
- en: 'Complex problems, which may be relatively less seen from the model’s perspective,
    cannot be effectively solved by merely modifying the prompt. To stimulate the
    model’s ability to solve such problems, we use specific examples as prompts. Experiments
    have found that LLMs are highly sensitive to sample selection, and choosing irrelevant
    samples may even produce negative effects. This concept is straightforward to
    grasp: absorbing too many solutions to unrelated problems can distract the model,
    making it more challenging to determine the correct method for problem-solving.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂问题，从模型的角度来看可能相对较少见，仅仅修改提示无法有效解决。为了激发模型解决此类问题的能力，我们使用特定示例作为提示。实验发现，LLM 对样本选择非常敏感，选择不相关的样本甚至可能产生负面效果。这一概念很容易理解：吸收过多与问题无关的解决方案可能会分散模型的注意力，使其更难确定正确的问题解决方法。
- en: 'In the few-shot version, we also categorize the few-shot library according
    to problem type. Intuitively, examples identified based on problem type are more
    likely to fulfill the requirements of finding the most relevant problem. We establish
    various retrieval methods, which can be divided into two main types: full retrieval
    and retrieval by problem type. In the latter, there are three subtypes: random,
    question similarity (ques_sim), and template similarity (tem_sim). Relying solely
    on question similarity can often result in retrieving questions that aren’t particularly
    similar. Template similarity, on the other hand, begins by obtaining the retrieval
    question paradigm and mitigates the effect of question diversity. To obtain the
    retrieval question paradigm, key entities for word selection are concealed to
    generate the question skeleton (template). This approach can effectively minimize
    the impact of different entities in similar questions, or identical entities in
    dissimilar questions.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在少量样本版本中，我们还根据问题类型对少量样本库进行分类。直观上，根据问题类型识别的示例更有可能满足找到最相关问题的要求。我们建立了各种检索方法，这些方法可以分为两种主要类型：全面检索和按问题类型检索。在后者中，有三种子类型：随机、问题相似性（ques_sim）和模板相似性（tem_sim）。单靠问题相似性往往会导致检索到的问句不够相似。另一方面，模板相似性方法从获取检索问题范式开始，减轻了问题多样性的影响。为了获得检索问题范式，关键实体的词汇选择被隐藏，以生成问题骨架（模板）。这种方法可以有效地最小化在相似问题中不同实体或在不相似问题中相同实体的影响。
- en: 2.4 Self-Correction
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.4 自我纠错
- en: '![Refer to caption](img/034c2e41ad240358dfa3fb168a8418a1.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![参考说明](img/034c2e41ad240358dfa3fb168a8418a1.png)'
- en: 'Figure 3: The statistics of SQL errors based on information determination,
    classification & hint and SQL generation steps'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图3：基于信息确定、分类与提示及SQL生成步骤的SQL错误统计
- en: 'After analyzing the results generated by the LLM in the previous steps, it
    is found that although the decomposition in the previous steps reduces redundant
    information and focuses the effective attention of the LLM, resulting in an improvement
    in accuracy(The outcome closely aligns with the most recent baseline method, achieving
    83.4%. This can be observed in the ’w/0 active & correct’ result in Table [3](#S3.T3
    "Table 3 ‣ 3.3 Ablation Study (RQ2) ‣ 3 Experiment ‣ Decomposition for Enhancing
    Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm").) , there
    are still some issues in field selection, table joining, aggregation, etc. The
    analysis of 98 incorrect questions reveals the proportion of error types, as depicted
    in Figure [3](#S2.F3 "Figure 3 ‣ 2.4 Self-Correction ‣ 2 Methodology ‣ Decomposition
    for Enhancing Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm").
    Notably, several significant error points emerge: 1) Extra fields: The LLM often
    selects an excessive number of fields, rather than limiting its selection to those
    pertinent to the question; 2) Incorrect fields: For instance, when faced with
    fields bearing identical names across different tables, the alias may be omitted,
    leading to errors; 3) Table and field association errors: there may be inconsistencies
    between the tables and fields used; 4) Fabricated conditions for table joins;
    5) Misuse of association words: For example, there is a tendency to habitually
    use ’left join’ in place of ’join’; 6) Group or order by errors: Mistakes such
    as incorrect aggregation fields and conditions may be encountered.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '在分析了前面步骤中LLM生成的结果后发现，尽管前面步骤中的分解减少了冗余信息并集中LLM的有效注意力，从而提高了准确性（结果与最新的基准方法非常接近，达到了83.4%。这可以在表[3](#S3.T3
    "Table 3 ‣ 3.3 Ablation Study (RQ2) ‣ 3 Experiment ‣ Decomposition for Enhancing
    Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm")的’w/0 active
    & correct’结果中观察到），但在字段选择、表连接、聚合等方面仍然存在一些问题。对98个错误问题的分析揭示了错误类型的比例，如图[3](#S2.F3
    "Figure 3 ‣ 2.4 Self-Correction ‣ 2 Methodology ‣ Decomposition for Enhancing
    Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm")所示。特别是，出现了几个显著的错误点：1）额外字段：LLM经常选择过多的字段，而不是仅限于与问题相关的字段；2）错误字段：例如，当面对跨不同表的字段名称相同时，可能会遗漏别名，从而导致错误；3）表和字段关联错误：表和字段之间可能存在不一致；4）伪造的表连接条件；5）关联词的误用：例如，存在习惯性地使用’left
    join’而非’join’的倾向；6）分组或排序错误：可能会遇到错误的聚合字段和条件。'
- en: 'In response to the aforementioned issues, we establish prompts as demonstrated
    in the Self-Correction step in Figure [1](#S2.F1 "Figure 1 ‣ 2 Methodology ‣ Decomposition
    for Enhancing Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm").
    Instead of using entirely generic prompts like DIN-SQL Pourreza and Rafiei ([2023](#bib.bib18)),
    we analyze the ability threshold of LLMs (i.e., the types of mistakes they frequently
    make) and set up relevant error prompts specifically targeting those issues, following
    the generic prompt points.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '针对上述问题，我们建立了如图[1](#S2.F1 "Figure 1 ‣ 2 Methodology ‣ Decomposition for Enhancing
    Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm")所示的提示。在不使用如DIN-SQL
    Pourreza和Rafiei ([2023](#bib.bib18))这样的完全通用提示的情况下，我们分析了LLM的能力阈值（即，它们经常犯的错误类型），并设置了针对这些问题的相关错误提示，遵循通用提示要点。'
- en: 2.5 Active Learning
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.5 主动学习
- en: 'The model itself has a limited capability threshold and the circles it specializes
    in do not encompass all problem types in SQL as shown in the Active Learning module
    in Figure [1](#S2.F1 "Figure 1 ‣ 2 Methodology ‣ Decomposition for Enhancing Attention:
    Improving LLM-based Text-to-SQL through Workflow Paradigm"). In the experiment,
    we discovered that the model is more prone to errors for certain problem types
    (e.g., extremum problems), often producing fixed-paradigm yet incorrect answers.
    We aim to determine whether the model’s capability thresholds can be expanded
    through the Active Learning Module to better meet the requirements. The model’s
    generalization ability is used to present the wrong case and the standard answer
    to the model to learn the error correction paradigm.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '模型自身具有有限的能力阈值，其专长的领域并未涵盖SQL中的所有问题类型，如图[1](#S2.F1 "Figure 1 ‣ 2 Methodology
    ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL through
    Workflow Paradigm")中的主动学习模块所示。在实验中，我们发现模型在某些问题类型（例如，极值问题）上更容易出错，通常产生固定模式但不正确的答案。我们旨在确定通过主动学习模块是否可以扩展模型的能力阈值，以更好地满足要求。利用模型的泛化能力呈现错误案例和标准答案，以便模型学习错误修正范式。'
- en: Specifically, we sample part of the training set for the preamble step of the
    test, analyze the error type of the LLM to organize and summarize some of the
    samples, and ultimately select three fixed typical samples as the error case.
    The case format $C$ follows $, where , where $，其中 $Q$ 代表一个案例的问题，$O$ 代表 LLM 生成的原始 SQL，$A$ 是答案，包括是否需要修改和修改后的 SQL。最终的主动学习提示遵循
    $$，其中 $I$ 代表提示模型需要完成此任务的指令，$C$ 代表三个固定的错误案例，$Q$ 是需要回答的问题。
- en: 3 Experiment
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3 实验
- en: 'In this section, we evaluate the proposed algorithm for the text-to-SQL task.
    Extensive experiments have been conducted to answer the following research questions:
    RQ1. How does DEA-SQL perform vs. state-of-the-art baselines? RQ2. Whether each
    module of our method works effectively and how are they impacting the task? RQ3.
    How do model parameters like the number of few-shots or the information filter
    layers affect the model?'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们评估了针对文本到 SQL 任务的提出的算法。我们进行了大量实验以回答以下研究问题：RQ1. DEA-SQL 的表现如何与最先进的基线相比？RQ2.
    我们的方法中的每个模块是否有效，它们对任务的影响如何？RQ3. 模型参数，如少样本的数量或信息过滤层，如何影响模型？
- en: 3.1 Experiment Setup
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.1 实验设置
- en: 3.1.1 Datasets
  id: totrans-53
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.1.1 数据集
- en: Spider Yu et al. ([2018](#bib.bib27)).
  id: totrans-54
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Spider Yu 等 ([2018](#bib.bib27))。
- en: Spider is a large-scale dataset for complex, cross-domain semantic parsing and
    text-to-SQL tasks. It consists of 10,181 questions (8,659 examples in the training
    set and 1,034 examples in the development set (Spider-dev).) and 5,693 unique
    complex SQL queries, involving 200 databases and multiple tables covering 138
    different domains.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Spider 是一个用于复杂跨领域语义解析和文本到 SQL 任务的大规模数据集。它包含 10,181 个问题（训练集中有 8,659 个样本，开发集中有
    1,034 个样本（Spider-dev））以及 5,693 个独特的复杂 SQL 查询，涉及 200 个数据库和多个表，涵盖 138 个不同领域。
- en: Spider Realistic Deng et al. ([2021](#bib.bib4)).
  id: totrans-56
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: Spider Realistic Deng 等 ([2021](#bib.bib4))。
- en: Spider Realistic is a more challenging version of the Spider-dev. It modifies
    the natural language questions in Spider by removing or paraphrasing explicitly
    mentioned column names to generate a more realistic dataset reflecting real-world
    scenarios, where questions rarely include explicitly mentioned column names. The
    final dataset comprises a total of 508 question-query pairs.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Spider Realistic 是 Spider-dev 的一个更具挑战性的版本。它通过移除或改述 Spider 中明确提到的列名来修改自然语言问题，从而生成一个更具现实性的数据显示真实世界场景，其中问题很少包含明确提到的列名。最终数据集包含总共
    508 对问题-查询对。
- en: 3.1.2 Evaluation
  id: totrans-58
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.1.2 评估
- en: 'There are two commonly used evaluation metrics for the text-to-SQL task: (1)
    Exact Match Accuracy (EM). This metric requires each component of the predicted
    SQL to be identical to the corresponding component of the gold SQL, disregarding
    the specific values in the query. (2) Execution Accuracy (EX). EX assesses the
    correctness of the execution result of the predicted SQL, typically offering a
    more precise evaluation than EM. Given that there might be multiple valid SQL
    queries with different writing styles for a single given question, EM might not
    effectively reflect the efficacy of the predicted SQL. As a result, we exclusively
    employ EX as our primary evaluation metric. Following previous work Zhong et al.
    ([2020](#bib.bib29)), we utilize the evaluation scripts available at [https://github.com/taoyds/test-suite-sql-eval](https://github.com/taoyds/test-suite-sql-eval).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文本到 SQL 任务，有两个常用的评估指标：（1）准确匹配率（EM）。该指标要求预测的 SQL 的每个组件都与金标准 SQL 的相应组件完全相同，不考虑查询中的具体值。（2）执行准确率（EX）。EX
    评估预测 SQL 的执行结果的正确性，通常提供比 EM 更准确的评估。由于对于一个给定的问题可能存在多个有效的 SQL 查询，并且书写风格不同，EM 可能无法有效反映预测
    SQL 的有效性。因此，我们仅使用 EX 作为主要评估指标。根据之前的工作 Zhong 等 ([2020](#bib.bib29))，我们利用 [https://github.com/taoyds/test-suite-sql-eval](https://github.com/taoyds/test-suite-sql-eval)
    提供的评估脚本。
- en: 3.1.3 Implementation Details
  id: totrans-60
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 3.1.3 实现细节
- en: We use OpenAI ChatGPT-3.5 and GPT-4¹¹1gpt-3.5-turbo-0613 for ChatGPT and gpt4-0613
    for GPT-4. as our base models, which can be assess through official API. For all
    GPT-based baselines, we utilize the same API to reproduce the models, ensuring
    fairness in comparison. Our code is available at [https://github.com/FlyingFeather/DEA-SQL](https://github.com/FlyingFeather/DEA-SQL).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 OpenAI ChatGPT-3.5 和 GPT-4¹¹1gpt-3.5-turbo-0613 作为 ChatGPT 的基础模型，使用 gpt4-0613
    作为 GPT-4 的基础模型，这些模型可以通过官方 API 进行评估。对于所有基于 GPT 的基准模型，我们利用相同的 API 重新生成模型，以确保比较的公平性。我们的代码可在
    [https://github.com/FlyingFeather/DEA-SQL](https://github.com/FlyingFeather/DEA-SQL)
    获得。
- en: 'Table 1: Comparison of previous methods and our method in terms of execution
    accuracy on Spider dataset.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 表 1：在 Spider 数据集上，之前的方法与我们的方法在执行准确性方面的比较。
- en: '| Method | Zero-Shot | Few-Shot | Fine-tuning | Dev | Test |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 零样本 | 少样本 | 微调 | 开发集 | 测试集 |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| T5-3B + PICARD Scholak et al. ([2021](#bib.bib21)) |  |  | ✓ | 79.3 | 75.1
    |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| T5-3B + PICARD Scholak et al. ([2021](#bib.bib21)) |  |  | ✓ | 79.3 | 75.1
    |'
- en: '| Graphix-3B + PICARD Li et al. ([2023b](#bib.bib13)) |  |  | ✓ | 81.0 | 77.6
    |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| Graphix-3B + PICARD Li et al. ([2023b](#bib.bib13)) |  |  | ✓ | 81.0 | 77.6
    |'
- en: '| RESDSQL-3B + NatSQL Li et al. ([2023a](#bib.bib12)) |  |  | ✓ | 84.1 | 79.9
    |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| RESDSQL-3B + NatSQL Li et al. ([2023a](#bib.bib12)) |  |  | ✓ | 84.1 | 79.9
    |'
- en: '| ChatGPT Ouyang et al. ([2022](#bib.bib17)) | ✓ |  |  | 74.4 | - |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| ChatGPT Ouyang et al. ([2022](#bib.bib17)) | ✓ |  |  | 74.4 | - |'
- en: '| GPT-4 OpenAI ([2023](#bib.bib16)) | ✓ |  |  | 72.3 | - |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| GPT-4 OpenAI ([2023](#bib.bib16)) | ✓ |  |  | 72.3 | - |'
- en: '| C3 + ChatGPT Dong et al. ([2023](#bib.bib6)) | ✓ |  |  | 81.2 | 82.3 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| C3 + ChatGPT Dong et al. ([2023](#bib.bib6)) | ✓ |  |  | 81.2 | 82.3 |'
- en: '| DIN-SQL + GPT-4 Pourreza and Rafiei ([2023](#bib.bib18)) |  | ✓ |  | 83.5
    | 85.3 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| DIN-SQL + GPT-4 Pourreza and Rafiei ([2023](#bib.bib18)) |  | ✓ |  | 83.5
    | 85.3 |'
- en: '| DAIL-SQL + GPT-4 Gao et al. ([2023](#bib.bib8)) |  | ✓ |  | 83.1 | 86.2 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| DAIL-SQL + GPT-4 Gao et al. ([2023](#bib.bib8)) |  | ✓ |  | 83.1 | 86.2 |'
- en: '| DAIL-SQL + GPT-4 + SC Gao et al. ([2023](#bib.bib8)) |  | ✓ |  | 83.6 | 86.6
    |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| DAIL-SQL + GPT-4 + SC Gao et al. ([2023](#bib.bib8)) |  | ✓ |  | 83.6 | 86.6
    |'
- en: '| MAC-SQL Wang et al. ([2023](#bib.bib24)) |  | ✓ |  | 78.6 | - |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| MAC-SQL Wang et al. ([2023](#bib.bib24)) |  | ✓ |  | 78.6 | - |'
- en: '| DEA-SQL + GPT-4 |  | ✓ |  | 85.4 | 87.1 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| DEA-SQL + GPT-4 |  | ✓ |  | 85.4 | 87.1 |'
- en: 'Table 2: Comparison of previous methods and our method in terms of execution
    accuracy on Spider-Realistic dataset.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 表 2：在 Spider-Realistic 数据集上，之前的方法与我们的方法在执行准确性方面的比较。
- en: '| Method | EX |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | EX |'
- en: '| --- | --- |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| C3 + ChatGPT | 75.4 |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| C3 + ChatGPT | 75.4 |'
- en: '| DIN-SQL + GPT-4 | 78.1 |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| DIN-SQL + GPT-4 | 78.1 |'
- en: '| DAIL-SQL + GPT-4 | 75.6 |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| DAIL-SQL + GPT-4 | 75.6 |'
- en: '| DAIL-SQL + GPT-4 + SC | 75.2 |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| DAIL-SQL + GPT-4 + SC | 75.2 |'
- en: '| DEA-SQL + GPT-4 | 81.5 |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| DEA-SQL + GPT-4 | 81.5 |'
- en: 3.2 Perfermance (RQ1)
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.2 性能（RQ1）
- en: 'To validate the effectiveness of DEA-SQL in text-to-SQL tasks, a comprehensive
    comparison was performed on the Spider and Spider-Realistic datasets. We performed
    most of our experiments on the dev dataset of the Spider dataset, and the experiment
    was completed just coinciding with the opening of the test set. The experimental
    results are summarized in Table [1](#S3.T1 "Table 1 ‣ 3.1.3 Implementation Details
    ‣ 3.1 Experiment Setup ‣ 3 Experiment ‣ Decomposition for Enhancing Attention:
    Improving LLM-based Text-to-SQL through Workflow Paradigm") and [2](#S3.T2 "Table
    2 ‣ 3.1.3 Implementation Details ‣ 3.1 Experiment Setup ‣ 3 Experiment ‣ Decomposition
    for Enhancing Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm"),
    where the best performance is shown in boldface. Based on the experimental results,
    we have made several findings.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证 DEA-SQL 在文本到 SQL 任务中的有效性，我们对 Spider 和 Spider-Realistic 数据集进行了全面比较。我们在 Spider
    数据集的开发集上进行了大部分实验，并且实验恰好在测试集开放时完成。实验结果总结在表 [1](#S3.T1 "表 1 ‣ 3.1.3 实施细节 ‣ 3.1 实验设置
    ‣ 3 实验 ‣ 通过工作流范式提高 LLM 基于文本到 SQL 的解构注意力") 和 [2](#S3.T2 "表 2 ‣ 3.1.3 实施细节 ‣ 3.1
    实验设置 ‣ 3 实验 ‣ 通过工作流范式提高 LLM 基于文本到 SQL 的解构注意力") 中，最佳性能以粗体显示。根据实验结果，我们得出了一些发现。
- en: 'In terms of execution accuracy in the Spider dataset, our approach based on
    workflow outperforms the existing baselines as shown in Table [1](#S3.T1 "Table
    1 ‣ 3.1.3 Implementation Details ‣ 3.1 Experiment Setup ‣ 3 Experiment ‣ Decomposition
    for Enhancing Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm")),
    and the approach achieves a nice boost over the direct use of prompt on different
    pedestal models (Llama, WizardCoder, and CodeLlama) as shown in Table [6](#A1.T6
    "Table 6 ‣ A.2 Intergrated with other LLMs ‣ Appendix A Experimental Supplement
    ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL through
    Workflow Paradigm")). The effectiveness of the workflow paradigm based on decomposing
    for enhancing attention is effectively demonstrated.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在Spider数据集的执行准确性方面，我们基于工作流的方法优于现有基准，如表[1](#S3.T1 "表1 ‣ 3.1.3 实施细节 ‣ 3.1 实验设置
    ‣ 3 实验 ‣ 通过工作流范式提升LLM-based文本到SQL的分解以增强注意力"))所示，该方法在不同的基座模型（Llama, WizardCoder,
    和 CodeLlama）上相比直接使用提示有明显提升，如表[6](#A1.T6 "表6 ‣ A.2 与其他LLMs集成 ‣ 附录A 实验补充 ‣ 通过工作流范式提升LLM-based文本到SQL的分解以增强注意力")所示。基于分解以增强注意力的工作流范式的有效性得到了有效展示。
- en: Compared with traditional training models, our method also has good improvements,
    further proving the potential of LLMs in text-to-SQL tasks. Providing a good workflow
    paradigm based on decomposing for enhancing attention can effectively improve
    LLMs’ performance in complex tasks.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统训练模型相比，我们的方法也有很好的改进，进一步证明了LLMs在文本到SQL任务中的潜力。基于分解以增强注意力的良好工作流范式可以有效提升LLMs在复杂任务中的表现。
- en: In the Spider-Realistic dataset, which is more adapted to real-world scenarios
    and has more difficult question formulations, our approach is more stable and
    achieves better performance than other solutions based on LLMs. This validates
    the effectiveness of the two-stage information determination we proposed, which
    can mitigate the impact of different question formulations to some extent. The
    performance of the DAIL-SQL declines significantly on this dataset, indicating
    that the approach of relying solely on prompt optimization and few-shot retrieval
    has its limitations, making it more challenging to establish a good few-shot library
    and retrieval strategy for real-world problems.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在更适应于现实场景并且问题表述更困难的Spider-Realistic数据集中，我们的方法更稳定，并且表现优于其他基于LLM的解决方案。这验证了我们提出的两阶段信息确定的有效性，该方法在一定程度上可以减轻不同问题表述的影响。DAIL-SQL在该数据集上的性能显著下降，表明仅依赖提示优化和少量样本检索的方法存在局限性，使得为现实问题建立良好的少样本库和检索策略更加困难。
- en: 'We also investigated the improvement at different difficulty levels, as shown
    in Table [4](#S3.T4 "Table 4 ‣ 3.3 Ablation Study (RQ2) ‣ 3 Experiment ‣ Decomposition
    for Enhancing Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm"),
    there is a noticeable improvement at the hard and extra hard difficulty levels.
    This is partly due to the information determination module reducing irrelevant
    information interference, the problem classification module classifying and solving
    problems of different difficulty levels, and the self-correction and active learning
    step further expanding the ability threshold of LLM to solve problems.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还调查了不同难度级别的改进，如表[4](#S3.T4 "表4 ‣ 3.3 消融研究 (RQ2) ‣ 3 实验 ‣ 通过工作流范式提升LLM-based文本到SQL的分解以增强注意力")所示，在困难和额外困难的难度级别上有明显改进。这部分是由于信息确定模块减少了无关信息干扰，问题分类模块对不同难度级别的问题进行分类和解决，自我修正和主动学习步骤进一步扩展了LLM解决问题的能力阈值。
- en: 3.3 Ablation Study (RQ2)
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.3 消融研究 (RQ2)
- en: 'In that subsection, we ablate each module and evaluate the effectiveness of
    each module. As shown in Table [3](#S3.T3 "Table 3 ‣ 3.3 Ablation Study (RQ2)
    ‣ 3 Experiment ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL
    through Workflow Paradigm"), the exclusion of either module makes the overall
    performance of the method degrade.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在该子节中，我们对每个模块进行了消融实验，并评估了每个模块的有效性。如表[3](#S3.T3 "表3 ‣ 3.3 消融研究 (RQ2) ‣ 3 实验 ‣
    通过工作流范式提升LLM-based文本到SQL的分解以增强注意力")所示，任何一个模块的排除都会导致方法的整体性能下降。
- en: 'Table 3: Ablation study on Spider Dev dataset.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '表3: Spider开发数据集上的消融研究。'
- en: '| Method | Easy | Medium | Hard | Extra | All |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 简单 | 中等 | 困难 | 额外 | 所有 |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| DEA-SQL | 0.887 | 0.895 | 0.856 | 0.705 | 0.856 |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| DEA-SQL | 0.887 | 0.895 | 0.856 | 0.705 | 0.856 |'
- en: '| w/o information filter | 0.899 | 0.874 | 0.787 | 0.633 | 0.827 |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| w/o information filter | 0.899 | 0.874 | 0.787 | 0.633 | 0.827 |'
- en: '| w/o classification | 0.875 | 0.904 | 0.805 | 0.639 | 0.838 |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| w/o classification | 0.875 | 0.904 | 0.805 | 0.639 | 0.838 |'
- en: '| w/o self-correct | 0.895 | 0.881 | 0.839 | 0.663 | 0.842 |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| w/o self-correct | 0.895 | 0.881 | 0.839 | 0.663 | 0.842 |'
- en: '| w/o active learning | 0.903 | 0.892 | 0.822 | 0.663 | 0.846 |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| w/o active learning | 0.903 | 0.892 | 0.822 | 0.663 | 0.846 |'
- en: '| w/o active & correct | 0.903 | 0.879 | 0.805 | 0.639 | 0.834 |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| w/o active & correct | 0.903 | 0.879 | 0.805 | 0.639 | 0.834 |'
- en: '| w/o H-FK | 0.891 | 0.886 | 0.851 | 0.651 | 0.843 |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| w/o H-FK | 0.891 | 0.886 | 0.851 | 0.651 | 0.843 |'
- en: 'Table 4: Performance compared to our method different query across difficulty
    levels on Spider Dev dataset.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 表4：与我们的方法相比，不同难度水平在Spider Dev数据集上的性能。
- en: '| Method | Easy | Medium | Hard | Extra | All |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 简单 | 中等 | 困难 | 极难 | 所有 |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| C3-GPT3.5 | 0.919 | 0.841 | 0.782 | 0.608 | 0.812 |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| C3-GPT3.5 | 0.919 | 0.841 | 0.782 | 0.608 | 0.812 |'
- en: '| DIN-SQL | 0.907 | 0.897 | 0.793 | 0.675 | 0.835 |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| DIN-SQL | 0.907 | 0.897 | 0.793 | 0.675 | 0.835 |'
- en: '| DAIL-SQL | 0.907 | 0.897 | 0.753 | 0.62 | 0.831 |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
  zh: '| DAIL-SQL | 0.907 | 0.897 | 0.753 | 0.62 | 0.831 |'
- en: '| DEA-SQL | 0.891 | 0.892 | 0.845 | 0.705 | 0.854 |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
  zh: '| DEA-SQL | 0.891 | 0.892 | 0.845 | 0.705 | 0.854 |'
- en: The effect of sub-models.
  id: totrans-109
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 子模型的效果。
- en: 1) In information determination, the strategy of reducing irrelevant information
    has a positive effect on all types of questions except those of simple difficulty.
    It is particularly effective in improving the accuracy of hard and extra hard
    difficulty questions. By reducing irrelevant information to focus the attention
    of LLMs, we can effectively enhance performance in complex tasks. 2) The ablation
    method of the classification step is to remove the classification module while
    switching the hint and specification in the prompt structure to a fixed hint.
    It is found that besides damaging the problem-solving ability of medium-difficulty
    problems, this step has positive effects on other problems, and the effects are
    significant in difficult and extremely difficult problems. It is indicated that
    distinguishing problem types, using simple hints for simple problems and targeting
    complex hints for complex problems, can effectively improve the performance of
    the LLM. 3) The active learning and self-correction modules had a negative effect
    on easy problems, but a positive effect on hard and extra hard problems. This
    is also expected, as these two modules are designed to increase the capability
    threshold of the original base model, but may to some extent impair the ability
    to solve other easy questions. 4) Adding H-FK prompt can effectively improve the
    performance of complex difficulty, which reduces the difficulty of finding the
    right complex concatenated table condition to some extent for the model. To summarize,
    for easy questions there is no need for overly complex processes and prompts,
    while for relatively complex questions, the multi-step workflow approach of narrowing
    down the information to enhance the model’s attention works well.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 1) 在信息确定方面，减少无关信息的策略对所有类型的问题都有积极的影响，除了简单难度的问题。它在提高难度和极难问题的准确性方面尤其有效。通过减少无关信息以集中注意力于LLMs，我们可以有效地提升复杂任务的表现。
    2) 分类步骤的消融方法是去除分类模块，同时将提示和规格在提示结构中切换为固定提示。发现除了损害中等难度问题的解决能力外，这一步对其他问题有积极影响，在困难和极其困难的问题中效果显著。这表明区分问题类型，使用简单提示解决简单问题，对复杂问题使用针对性的复杂提示，可以有效提升LLM的表现。
    3) 主动学习和自我纠正模块对简单问题有负面影响，但对困难和极难问题有积极影响。这也是预期中的情况，因为这两个模块旨在提高原始基础模型的能力阈值，但可能在一定程度上削弱解决其他简单问题的能力。
    4) 添加H-FK提示可以有效提升复杂难度的表现，这在一定程度上减少了模型找到正确复杂连接表条件的难度。总结来说，对于简单问题，不需要过于复杂的过程和提示，而对于相对复杂的问题，逐步缩小信息范围以增强模型注意力的多步骤工作流程方法效果很好。
- en: The effect of different few-shot scheme.
  id: totrans-111
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 不同少样本方案的效果。
- en: 'To explore the effectiveness of few-shot retrieval methods, we conducted experimental
    comparisons between different retrieval schemes and zero-shot. In the experiments,
    it was found that different few-shots have a significant impact on the final accuracy
    of the results, and choosing poor examples may lead to adverse effects. We explored
    four retrieval schemes: random, question similarity(ques_sim), template similarity(tem_sim)
    and template similarity without classification (tem_sim_wo) to find more suitable
    samples. As shown in Figure [5](#S3.T5 "Table 5 ‣ 3.4 Parameters Analysis ‣ 3
    Experiment ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL
    through Workflow Paradigm"), random is a little detrimental to overall performance,
    while the retrieval strategy based on question template similarity in the combined
    question classification retrieval library yields the best results. Question templates
    also essentially provide a simple classification for the questions, and relying
    on question classification methods makes it easier to find the most relevant questions
    and their solutions, thereby stimulating the capabilities of LLMs.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探讨少量样本检索方法的有效性，我们对不同的检索方案和零样本进行了实验比较。在实验中发现，不同的少量样本对最终结果的准确性有显著影响，选择不良示例可能会导致不利效果。我们探索了四种检索方案：随机检索、问题相似性（ques_sim）、模板相似性（tem_sim）和不带分类的模板相似性（tem_sim_wo），以寻找更合适的样本。如图[5](#S3.T5
    "表5 ‣ 3.4 参数分析 ‣ 3 实验 ‣ 通过工作流范式增强注意力：通过LLM改进文本到SQL")所示，随机检索对整体性能有轻微的不利影响，而基于问题模板相似性的检索策略在组合问题分类检索库中效果最好。问题模板本质上也为问题提供了简单的分类，依赖于问题分类方法使得找到最相关的问题及其解决方案更加容易，从而激发了LLM的能力。
- en: 3.4 Parameters Analysis
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 3.4 参数分析
- en: 'In the parameters experiment, we investigated the number of few-shots for the
    SQL generation step, and the results in Table LABEL:fig:sql_fewshot_nums found
    that the performance is better when #fewshot=3\. This indicates that within a
    certain range, as the number of effective samples increases, the accuracy of the
    model improves. The accuracy of the information filter also greatly affects the
    final accuracy rate. The current method based on LLM has not yet been able to
    achieve 100% accuracy. It can be seen that with the improvement of the accuracy
    of the information filter, the final accuracy rate also has a corresponding improvement
    as shown in Figure LABEL:fig:sql_fc.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在参数实验中，我们调查了SQL生成步骤中的少量样本数量，表LABEL:fig:sql_fewshot_nums中的结果显示，当#fewshot=3时，性能较好。这表明，在一定范围内，随着有效样本数量的增加，模型的准确性提高。信息筛选器的准确性也极大地影响了最终的准确率。目前基于LLM的方法尚未能够达到100%的准确率。可以看出，随着信息筛选器准确性的提高，最终的准确率也有了相应的改善，如图LABEL:fig:sql_fc所示。
- en: 'Table 5: The few-shot mode study on Spider Dev dataset, where the number of
    few-shots is 3.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 表5：在Spider Dev数据集上的少量样本模式研究，其中少量样本的数量为3。
- en: '| Method | Easy | Medium | Hard | Extra | All |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| 方法 | 简单 | 中等 | 难 | 额外 | 全部 |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| zero_shot | 0.891 | 0.890 | 0.816 | 0.669 | 0.842 |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| zero_shot | 0.891 | 0.890 | 0.816 | 0.669 | 0.842 |'
- en: '| random | 0.879 | 0.890 | 0.862 | 0.693 | 0.851 |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| random | 0.879 | 0.890 | 0.862 | 0.693 | 0.851 |'
- en: '| ques_sim | 0.879 | 0.901 | 0.833 | 0.645 | 0.843 |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| ques_sim | 0.879 | 0.901 | 0.833 | 0.645 | 0.843 |'
- en: '| tem_sim | 0.891 | 0.892 | 0.845 | 0.705 | 0.854 |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| tem_sim | 0.891 | 0.892 | 0.845 | 0.705 | 0.854 |'
- en: '| tem_sim_wo | 0.895 | 0.888 | 0.822 | 0.657 | 0.841 |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| tem_sim_wo | 0.895 | 0.888 | 0.822 | 0.657 | 0.841 |'
- en: 'Figure 5: Parameters analysis results.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：参数分析结果。
- en: 4 Related Work
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4 相关工作
- en: Text-to-SQL Parsing
  id: totrans-125
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 文本到SQL解析
- en: Text-to-SQL is a semantic parsing task that translates users’ natural language
    questions into appropriate SQL queries. This allows ubiquitous relational data
    to be accessed by a broader range of non-technical users. In the past few years,
    inspired by the success of deep learning, research in text-to-SQL has primarily
    focused on constructing well-designed deep neural networks (Guo et al., [2019](#bib.bib9);
    Wang et al., [2020](#bib.bib23); Cao et al., [2021](#bib.bib1); Scholak et al.,
    [2021](#bib.bib21); Li et al., [2023a](#bib.bib12)). RATSQL (Wang et al., [2020](#bib.bib23))
    defines a question-schema graph and employs a relation-aware self-attention mechanism
    during the encoding process to jointly learn representations of the question words,
    schema items, and edge relationships. PICARD (Scholak et al., [2021](#bib.bib21))
    is a sequence-to-sequence model. The PICARD model rejects invalid tokens at each
    decoding step and constrains the generated results within a certain output space,
    thereby reducing the number of invalid SQL queries. Although these supervised
    learning neural models have achieved impressive performance on the text-to-SQL
    task, they are typically trained on a large training set and evaluated on test
    examples. However, acquiring annotated text-to-SQL data is costly. Additionally,
    training and fine-tuning the models entail significant engineering efforts and
    consume substantial computational resources.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 文本到SQL是一项语义解析任务，将用户的自然语言问题转换为适当的SQL查询。这使得广泛存在的关系数据能够被更广泛的非技术用户访问。在过去几年中，受到深度学习成功的启发，文本到SQL的研究主要集中在构建精心设计的深度神经网络（Guo
    et al., [2019](#bib.bib9); Wang et al., [2020](#bib.bib23); Cao et al., [2021](#bib.bib1);
    Scholak et al., [2021](#bib.bib21); Li et al., [2023a](#bib.bib12)）。RATSQL（Wang
    et al., [2020](#bib.bib23)）定义了一个问题-模式图，并在编码过程中使用关系感知自注意机制，共同学习问题词、模式项和边缘关系的表示。PICARD（Scholak
    et al., [2021](#bib.bib21)）是一个序列到序列模型。PICARD模型在每个解码步骤中拒绝无效的标记，并将生成的结果限制在一定的输出空间内，从而减少无效SQL查询的数量。虽然这些监督学习神经模型在文本到SQL任务上取得了令人印象深刻的表现，但它们通常在大规模训练集上进行训练，并在测试示例上进行评估。然而，获取带注释的文本到SQL数据是昂贵的。此外，训练和微调模型需要大量的工程工作和计算资源。
- en: In-context Learning for Text-to-SQL
  id: totrans-127
  prefs:
  - PREF_H5
  type: TYPE_NORMAL
  zh: 上下文学习用于文本到SQL
- en: With the widespread adoption of LLMs, recent work has explored in context learning
    for text-to-SQL from various perspectives (Gao et al., [2023](#bib.bib8); Liu
    et al., [2023](#bib.bib15); Chang and Fosler-Lussier, [2023b](#bib.bib3)). In
    Context learning enables pre-trained LLMs to perform text-to-SQL without relying
    on supervised samples by providing zero or a few training examples (NLQ-SQL pairs)
    as demonstrations. In this domain,  Rajkumar et al. ([2022](#bib.bib20)) and  Chang
    and Fosler-Lussier ([2023a](#bib.bib2)) investigate effective methods for representing
    the database within prompts in context learning.  Pourreza and Rafiei ([2023](#bib.bib18))
    and  Wang et al. ([2023](#bib.bib24)) improve the ability of text-to-SQL parsing
    through intermediate reasoning steps. Other studies (Tai et al., [2023](#bib.bib22);
    Zhang et al., [2023](#bib.bib28)) focus on enhancing the semantic understanding
    capabilities of LLMs using chain-of-thought techniques, thereby addressing text-to-SQL
    problems more effectively. However, these studies tend to focus more on activating
    the general capabilities of LLMs, lacking a comprehensive consideration of SQL
    tasks. Additionally, the presence of irrelevant tables and fields in the database
    schema can interfere with the generation of correct SQL queries. To address these
    issues, we propose a complete SQL generation workflow based on prior knowledge
    of attention-focusing and irrelevant information filtering.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 随着大语言模型（LLMs）的广泛应用，近期的研究从各种角度探讨了文本到SQL的上下文学习（Gao et al., [2023](#bib.bib8);
    Liu et al., [2023](#bib.bib15); Chang and Fosler-Lussier, [2023b](#bib.bib3)）。上下文学习使得预训练的大语言模型可以在不依赖监督样本的情况下执行文本到SQL，通过提供零个或几个训练示例（NLQ-SQL对）作为演示。在这一领域，Rajkumar
    et al. ([2022](#bib.bib20)) 和 Chang and Fosler-Lussier ([2023a](#bib.bib2)) 探讨了在上下文学习中如何有效地在提示中表示数据库。Pourreza
    and Rafiei ([2023](#bib.bib18)) 和 Wang et al. ([2023](#bib.bib24)) 通过中间推理步骤提高了文本到SQL解析的能力。其他研究（Tai
    et al., [2023](#bib.bib22); Zhang et al., [2023](#bib.bib28)）则专注于利用链式思维技术提升大语言模型的语义理解能力，从而更有效地解决文本到SQL的问题。然而，这些研究通常更关注激活大语言模型的通用能力，缺乏对SQL任务的全面考虑。此外，数据库模式中存在的无关表和字段可能干扰正确SQL查询的生成。为解决这些问题，我们提出了一种基于注意力聚焦和无关信息过滤的完整SQL生成工作流程。
- en: 5 Conclusion
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5 结论
- en: Prompting techniques have unleashed the potential of LLMs, with most past research
    focusing on improving single-step prompting. In the NLP field, structured languages
    like SQL pose a greater challenge compared to plain text. We introduce the workflow
    prompting paradigm to enhance the performance of LLMs in text-to-SQL tasks. By
    decomposing steps, reducing irrelevant information, and transforming the complex
    problem into a classification task, we can focus the attention of LLMs. Self-correction
    and active learning modules are designed according to the capability thresholds
    of LLMs, with different sub-modules performing their respective roles, further
    improving the upper limit of LLM-based prompting methods in text-to-SQL tasks.
    Adequate experiments on Spider and Spider-Realistic datasets demonstrate that
    our approach significantly improves prompting performance, outperforming state-of-the-art
    fine-tuning and LLM-based methods. This illustrates the effectiveness of the workflow
    prompting paradigm in enhancing the problem-solving scope of LLMs.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 提示技术释放了 LLMs 的潜力，过去的大多数研究集中在改进单步提示上。在 NLP 领域，像 SQL 这样的结构化语言比普通文本更具挑战性。我们引入了工作流提示范式，以提升
    LLMs 在文本到 SQL 任务中的性能。通过分解步骤、减少无关信息和将复杂问题转化为分类任务，我们可以集中 LLMs 的注意力。自我纠错和主动学习模块根据
    LLMs 的能力阈值设计，不同的子模块执行各自的角色，进一步提高了基于 LLM 的提示方法在文本到 SQL 任务中的上限。对 Spider 和 Spider-Realistic
    数据集的充分实验表明，我们的方法显著提高了提示性能，超越了最先进的微调和 LLM 基于的方法。这表明工作流提示范式在提升 LLMs 问题解决范围方面的有效性。
- en: 6 Limitations
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6 限制
- en: '1\. Cost Issues: Our proposed method adopts a decomposition workflow as the
    backbone, and when using GPT-4 to respond to natural language questions, there
    might be some differences in cost and latency compared to the zero-shot approach,
    thus a trade-off between performance and cost is necessary.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 成本问题：我们提出的方法采用分解工作流作为基础，在使用 GPT-4 响应自然语言问题时，与零-shot 方法相比，可能会在成本和延迟上存在一些差异，因此需要在性能和成本之间进行权衡。
- en: '2\. Instability: Another limitation of text-to-SQL methods based on LLMs, is
    their inherent instability due to the probabilistic nature of their generation
    process. As these models rely on probability distributions to generate output,
    they can sometimes produce inconsistent or unpredictable results. Considering
    more deterministic SQL statement generation can be conducted in future work.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 不稳定性：基于 LLM 的文本到 SQL 方法的另一个限制是其生成过程的概率性质导致的固有不稳定性。由于这些模型依赖概率分布生成输出，因此有时可能会产生不一致或不可预测的结果。未来的工作可以考虑进行更确定性的
    SQL 语句生成。
- en: References
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Cao et al. (2021) Ruisheng Cao, Lu Chen, Zhi Chen, Yanbin Zhao, Su Zhu, and
    Kai Yu. 2021. LGESQL: Line graph enhanced text-to-SQL model with mixed local and
    non-local relations. In *ACL*.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cao 等（2021）Ruisheng Cao, Lu Chen, Zhi Chen, Yanbin Zhao, Su Zhu, 和 Kai Yu. 2021.
    LGESQL：具有混合局部和非局部关系的线图增强文本到 SQL 模型。在 *ACL*。
- en: 'Chang and Fosler-Lussier (2023a) Shuaichen Chang and Eric Fosler-Lussier. 2023a.
    How to prompt llms for text-to-sql: A study in zero-shot, single-domain, and cross-domain
    settings. *arXiv preprint arXiv:2305.11853*.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chang 和 Fosler-Lussier（2023a）Shuaichen Chang 和 Eric Fosler-Lussier. 2023a. 如何提示
    LLMs 进行文本到 SQL：零-shot、单域和跨域设置的研究。*arXiv 预印本 arXiv:2305.11853*。
- en: Chang and Fosler-Lussier (2023b) Shuaichen Chang and Eric Fosler-Lussier. 2023b.
    Selective demonstrations for cross-domain text-to-sql. In *Findings of EMNLP*.
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chang 和 Fosler-Lussier（2023b）Shuaichen Chang 和 Eric Fosler-Lussier. 2023b. 跨域文本到
    SQL 的选择性演示。在 *EMNLP 发现*。
- en: Deng et al. (2021) Xiang Deng, Ahmed Hassan, Christopher Meek, Oleksandr Polozov,
    Huan Sun, and Matthew Richardson. 2021. Structure-grounded pretraining for text-to-sql.
    In *NAACL*.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Deng 等（2021）Xiang Deng, Ahmed Hassan, Christopher Meek, Oleksandr Polozov, Huan
    Sun, 和 Matthew Richardson. 2021. 基于结构的文本到 SQL 预训练。在 *NAACL*。
- en: Dong et al. (2022) Qingxiu Dong, Lei Li, Damai Dai, Ce Zheng, Zhiyong Wu, Baobao
    Chang, Xu Sun, Jingjing Xu, and Zhifang Sui. 2022. A survey for in-context learning.
    *arXiv preprint arXiv:2301.00234*.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dong 等（2022）Qingxiu Dong, Lei Li, Damai Dai, Ce Zheng, Zhiyong Wu, Baobao Chang,
    Xu Sun, Jingjing Xu, 和 Zhifang Sui. 2022. 关于上下文学习的调查。*arXiv 预印本 arXiv:2301.00234*。
- en: 'Dong et al. (2023) Xuemei Dong, Chao Zhang, Yuhang Ge, Yuren Mao, Yunjun Gao,
    Jinshu Lin, Dongfang Lou, et al. 2023. C3: Zero-shot text-to-sql with chatgpt.
    *arXiv preprint arXiv:2307.07306*.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dong 等（2023）Xuemei Dong, Chao Zhang, Yuhang Ge, Yuren Mao, Yunjun Gao, Jinshu
    Lin, Dongfang Lou 等. 2023. C3：基于 ChatGPT 的零-shot 文本到 SQL。*arXiv 预印本 arXiv:2307.07306*。
- en: Finegan-Dollak et al. (2018) Catherine Finegan-Dollak, Jonathan K Kummerfeld,
    Li Zhang, Karthik Ramanathan, Sesh Sadasivam, Rui Zhang, and Dragomir Radev. 2018.
    Improving text-to-sql evaluation methodology. In *ACL*.
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Finegan-Dollak等（2018）Catherine Finegan-Dollak, Jonathan K Kummerfeld, Li Zhang,
    Karthik Ramanathan, Sesh Sadasivam, Rui Zhang, 和 Dragomir Radev。2018年。改进文本到SQL的评估方法。在*ACL*中。
- en: 'Gao et al. (2023) Dawei Gao, Haibin Wang, Yaliang Li, Xiuyu Sun, Yichen Qian,
    Bolin Ding, and Jingren Zhou. 2023. Text-to-sql empowered by large language models:
    A benchmark evaluation. *arXiv preprint arXiv:2308.15363*.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gao等（2023）Dawei Gao, Haibin Wang, Yaliang Li, Xiuyu Sun, Yichen Qian, Bolin
    Ding, 和 Jingren Zhou。2023年。由大语言模型增强的文本到SQL：基准评估。*arXiv预印本 arXiv:2308.15363*。
- en: Guo et al. (2019) Jiaqi Guo, Zecheng Zhan, Yan Gao, Yan Xiao, Jian-Guang Lou,
    Ting Liu, and Dongmei Zhang. 2019. Towards complex text-to-sql in cross-domain
    database with intermediate representation. In *ACL*.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Guo等（2019）Jiaqi Guo, Zecheng Zhan, Yan Gao, Yan Xiao, Jian-Guang Lou, Ting Liu,
    和 Dongmei Zhang。2019年。面向复杂跨领域数据库的文本到SQL中间表示。在*ACL*中。
- en: 'Hui et al. (2022) Binyuan Hui, Ruiying Geng, Lihan Wang, Bowen Qin, Yanyang
    Li, Bowen Li, Jian Sun, and Yongbin Li. 2022. S2sql: Injecting syntax to question-schema
    interaction graph encoder for text-to-sql parsers. In *ACL*.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hui等（2022）Binyuan Hui, Ruiying Geng, Lihan Wang, Bowen Qin, Yanyang Li, Bowen
    Li, Jian Sun, 和 Yongbin Li。2022年。S2sql：向文本到SQL解析器的问答-模式交互图编码器注入语法。在*ACL*中。
- en: Lei et al. (2020) Wenqiang Lei, Weixin Wang, Zhixin Ma, Tian Gan, Wei Lu, Min-Yen
    Kan, and Tat-Seng Chua. 2020. Re-examining the role of schema linking in text-to-sql.
    In *EMNLP*.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lei等（2020）Wenqiang Lei, Weixin Wang, Zhixin Ma, Tian Gan, Wei Lu, Min-Yen Kan,
    和 Tat-Seng Chua。2020年。重新审视文本到SQL中的模式链接角色。在*EMNLP*中。
- en: 'Li et al. (2023a) Haoyang Li, Jing Zhang, Cuiping Li, and Hong Chen. 2023a.
    Resdsql: Decoupling schema linking and skeleton parsing for text-to-sql. In *AAAI*.'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Li等（2023a）Haoyang Li, Jing Zhang, Cuiping Li, 和 Hong Chen。2023a年。Resdsql：解耦文本到SQL的模式链接和骨架解析。在*AAAI*中。
- en: 'Li et al. (2023b) Jinyang Li, Binyuan Hui, Reynold Cheng, Bowen Qin, Chenhao
    Ma, Nan Huo, Fei Huang, Wenyu Du, Luo Si, and Yongbin Li. 2023b. Graphix-t5: Mixing
    pre-trained transformers with graph-aware layers for text-to-sql parsing. In *ACL*.'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Li等（2023b）Jinyang Li, Binyuan Hui, Reynold Cheng, Bowen Qin, Chenhao Ma, Nan
    Huo, Fei Huang, Wenyu Du, Luo Si, 和 Yongbin Li。2023b年。Graphix-t5：混合预训练变换器与图感知层进行文本到SQL解析。在*ACL*中。
- en: Liang et al. (2023) Bin Liang, Xiang Li, Lin Gui, Yonghao Fu, Yulan He, Min
    Yang, and Ruifeng Xu. 2023. Few-shot aspect category sentiment analysis via meta-learning.
    *ACM Transactions on Information Systems*.
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liang等（2023）Bin Liang, Xiang Li, Lin Gui, Yonghao Fu, Yulan He, Min Yang, 和
    Ruifeng Xu。2023年。通过元学习的少样本方面类别情感分析。*ACM信息系统事务*。
- en: Liu et al. (2023) Aiwei Liu, Xuming Hu, Lijie Wen, and Philip S Yu. 2023. A
    comprehensive evaluation of chatgpt’s zero-shot text-to-sql capability. *arXiv
    preprint arXiv:2303.13547*.
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Liu等（2023）Aiwei Liu, Xuming Hu, Lijie Wen, 和 Philip S Yu。2023年。对ChatGPT零-shot文本到SQL能力的综合评估。*arXiv预印本
    arXiv:2303.13547*。
- en: OpenAI (2023) OpenAI. 2023. Gpt-4 technical report. *arXiv preprint arXiv:2303.08774*.
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI（2023）OpenAI。2023年。GPT-4技术报告。*arXiv预印本 arXiv:2303.08774*。
- en: Ouyang et al. (2022) Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll
    Wainwright, Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex
    Ray, et al. 2022. Training language models to follow instructions with human feedback.
    In *NeurIPS*.
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ouyang等（2022）Long Ouyang, Jeffrey Wu, Xu Jiang, Diogo Almeida, Carroll Wainwright,
    Pamela Mishkin, Chong Zhang, Sandhini Agarwal, Katarina Slama, Alex Ray等。2022年。训练语言模型以跟随带有人类反馈的指令。在*NeurIPS*中。
- en: 'Pourreza and Rafiei (2023) Mohammadreza Pourreza and Davood Rafiei. 2023. DIN-SQL:
    Decomposed in-context learning of text-to-SQL with self-correction. In *NeurIPS*.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pourreza和Rafiei（2023）Mohammadreza Pourreza 和 Davood Rafiei。2023年。DIN-SQL：自我纠正的文本到SQL的分解式上下文学习。在*NeurIPS*中。
- en: 'Qin et al. (2022) Bowen Qin, Binyuan Hui, Lihan Wang, Min Yang, Jinyang Li,
    Binhua Li, Ruiying Geng, Rongyu Cao, Jian Sun, Luo Si, et al. 2022. A survey on
    text-to-sql parsing: Concepts, methods, and future directions. *arXiv preprint
    arXiv:2208.13629*.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Qin等（2022）Bowen Qin, Binyuan Hui, Lihan Wang, Min Yang, Jinyang Li, Binhua Li,
    Ruiying Geng, Rongyu Cao, Jian Sun, Luo Si等。2022年。关于文本到SQL解析的调查：概念、方法和未来方向。*arXiv预印本
    arXiv:2208.13629*。
- en: Rajkumar et al. (2022) Nitarshan Rajkumar, Raymond Li, and Dzmitry Bahdanau.
    2022. Evaluating the text-to-sql capabilities of large language models. *arXiv
    preprint arXiv:2204.00498*.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rajkumar等（2022）Nitarshan Rajkumar, Raymond Li, 和 Dzmitry Bahdanau。2022年。评估大语言模型的文本到SQL能力。*arXiv预印本
    arXiv:2204.00498*。
- en: 'Scholak et al. (2021) Torsten Scholak, Nathan Schucher, and Dzmitry Bahdanau.
    2021. Picard: Parsing incrementally for constrained auto-regressive decoding from
    language models. In *EMNLP*.'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Scholak等（2021）Torsten Scholak, Nathan Schucher, 和 Dzmitry Bahdanau。2021年。Picard：用于从语言模型进行受限自回归解码的增量解析。在*EMNLP*中。
- en: Tai et al. (2023) Chang-You Tai, Ziru Chen, Tianshu Zhang, Xiang Deng, and Huan
    Sun. 2023. Exploring chain-of-thought style prompting for text-to-sql. In *EMNLP*.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tai et al. (2023) Chang-You Tai, Ziru Chen, Tianshu Zhang, Xiang Deng, 和 Huan
    Sun. 2023. 探索链式思维风格提示用于文本到 SQL。发表于*EMNLP*。
- en: 'Wang et al. (2020) Bailin Wang, Richard Shin, Xiaodong Liu, Oleksandr Polozov,
    and Matthew Richardson. 2020. Rat-sql: Relation-aware schema encoding and linking
    for text-to-sql parsers. In *ACL*.'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Wang et al. (2020) Bailin Wang, Richard Shin, Xiaodong Liu, Oleksandr Polozov,
    和 Matthew Richardson. 2020. Rat-sql: 面向关系的模式编码和链接，用于文本到 SQL 解析器。发表于*ACL*。'
- en: 'Wang et al. (2023) Bing Wang, Changyu Ren, Jian Yang, Xinnian Liang, Jiaqi
    Bai, Qian-Wen Zhang, Zhao Yan, and Zhoujun Li. 2023. Mac-sql: Multi-agent collaboration
    for text-to-sql. *arXiv preprint arXiv:2312.11242*.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Wang et al. (2023) Bing Wang, Changyu Ren, Jian Yang, Xinnian Liang, Jiaqi
    Bai, Qian-Wen Zhang, Zhao Yan, 和 Zhoujun Li. 2023. Mac-sql: 多代理协作进行文本到 SQL 的转换。*arXiv
    预印本 arXiv:2312.11242*。'
- en: Wei et al. (2022) Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Fei
    Xia, Ed Chi, Quoc V Le, Denny Zhou, et al. 2022. Chain-of-thought prompting elicits
    reasoning in large language models. In *NeurIPS*.
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wei et al. (2022) Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Fei
    Xia, Ed Chi, Quoc V Le, Denny Zhou, 等. 2022. 链式思维提示引发大型语言模型的推理。发表于*NeurIPS*。
- en: 'Xu et al. (2023) Haoran Xu, Young Jin Kim, Amr Sharaf, and Hany Hassan Awadalla.
    2023. A paradigm shift in machine translation: Boosting translation performance
    of large language models. *arXiv preprint arXiv:2309.11674*.'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Xu et al. (2023) Haoran Xu, Young Jin Kim, Amr Sharaf, 和 Hany Hassan Awadalla.
    2023. 机器翻译的范式转变：提升大型语言模型的翻译性能。*arXiv 预印本 arXiv:2309.11674*。
- en: 'Yu et al. (2018) Tao Yu, Rui Zhang, Kai Yang, Michihiro Yasunaga, Dongxu Wang,
    Zifan Li, James Ma, Irene Li, Qingning Yao, Shanelle Roman, et al. 2018. Spider:
    A large-scale human-labeled dataset for complex and cross-domain semantic parsing
    and text-to-sql task. In *EMNLP*.'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Yu et al. (2018) Tao Yu, Rui Zhang, Kai Yang, Michihiro Yasunaga, Dongxu Wang,
    Zifan Li, James Ma, Irene Li, Qingning Yao, Shanelle Roman, 等. 2018. Spider: 一个用于复杂和跨领域语义解析及文本到
    SQL 任务的大规模人工标注数据集。发表于*EMNLP*。'
- en: 'Zhang et al. (2023) Hanchong Zhang, Ruisheng Cao, Lu Chen, Hongshen Xu, and
    Kai Yu. 2023. Act-sql: In-context learning for text-to-sql with automatically-generated
    chain-of-thought. In *Findings of EMNLP*.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Zhang et al. (2023) Hanchong Zhang, Ruisheng Cao, Lu Chen, Hongshen Xu, 和 Kai
    Yu. 2023. Act-sql: 使用自动生成的链式思维进行文本到 SQL 的上下文学习。发表于*Findings of EMNLP*。'
- en: Zhong et al. (2020) Ruiqi Zhong, Tao Yu, and Dan Klein. 2020. Semantic evaluation
    for text-to-sql with distilled test suite. In *EMNLP*.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zhong et al. (2020) Ruiqi Zhong, Tao Yu, 和 Dan Klein. 2020. 基于提炼测试套件的文本到 SQL
    语义评估。发表于*EMNLP*。
- en: Appendix A Experimental Supplement
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 A 实验补充
- en: A.1 Baselines
  id: totrans-165
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: A.1 基线
- en: 'We select conventionally and recently published text-to-SQL baselines for model
    comparison, which can be briefly categorized into two groups: (1) training model-based
    programs Scholak et al. ([2021](#bib.bib21)); Li et al. ([2023b](#bib.bib13),
    [a](#bib.bib12)) and (2) prompt engineering-based programs Dong et al. ([2023](#bib.bib6));
    Pourreza and Rafiei ([2023](#bib.bib18)); Gao et al. ([2023](#bib.bib8)); Wang
    et al. ([2023](#bib.bib24)).'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择了传统和最近发布的文本到 SQL 基线进行模型比较，这些基线可以简要地分为两组：(1) 基于训练模型的程序 Scholak et al. ([2021](#bib.bib21));
    Li et al. ([2023b](#bib.bib13), [a](#bib.bib12)) 和 (2) 基于提示工程的程序 Dong et al. ([2023](#bib.bib6));
    Pourreza 和 Rafiei ([2023](#bib.bib18)); Gao et al. ([2023](#bib.bib8)); Wang et
    al. ([2023](#bib.bib24))。
- en: •
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: T5-3B + PICARD Scholak et al. ([2021](#bib.bib21)) PICARD is a sequence-to-sequence
    model. It rejects invalid tokens at each decoding step and constrains the generated
    results within a certain output space, thereby reducing the number of invalid
    SQL queries.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: T5-3B + PICARD Scholak et al. ([2021](#bib.bib21)) PICARD 是一个序列到序列模型。它在每个解码步骤中拒绝无效的标记，并将生成的结果限制在特定的输出空间内，从而减少无效
    SQL 查询的数量。
- en: •
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: Graphix-3B + PICARD Li et al. ([2023b](#bib.bib13)) Based on the pre-trained
    T5 model, Graphix is designed to encode the combination of semantic and structural
    information via graph neural networks.
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Graphix-3B + PICARD Li et al. ([2023b](#bib.bib13)) 基于预训练的 T5 模型，Graphix 旨在通过图神经网络编码语义和结构信息的组合。
- en: •
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: RESDSQL-3B + NatSQL Li et al. ([2023a](#bib.bib12)) RESDSQL reduces the complexity
    of text-to-SQL by implicitly constraining SQL parsing through schema linking and
    skeleton parsing techniques. It is the best method based on fine-tuning.
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RESDSQL-3B + NatSQL Li et al. ([2023a](#bib.bib12)) RESDSQL 通过模式链接和骨架解析技术隐式约束
    SQL 解析，从而降低了文本到 SQL 的复杂性。它是基于微调的最佳方法。
- en: •
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: ChatGPT Ouyang et al. ([2022](#bib.bib17)) We use ChatGPT in a simple zero-shot
    paradigm to evaluate its capability on the text-to-SQL task.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ChatGPT Ouyang et al. ([2022](#bib.bib17)) 我们在简单的零样本范式下使用 ChatGPT 来评估其在文本到 SQL
    任务中的能力。
- en: •
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: GPT-4 OpenAI ([2023](#bib.bib16)) The base model is changed to GPT-4 in a simple
    zero-shot paradigm to evaluate the capability on the text-to-SQL task.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: GPT-4 OpenAI ([2023](#bib.bib16)) 基础模型在简单的零-shot 范式中更改为 GPT-4，以评估其在文本到 SQL 任务中的能力。
- en: •
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'C3 + ChatGPT C3 Dong et al. ([2023](#bib.bib6)) proposes a ChatGPT-based zero-shot
    Text-to-SQL method with three key components: Clear Prompting (CP), Calibration
    with Hints (CH), and Consistent Output (CO).'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: C3 + ChatGPT C3 Dong 等人 ([2023](#bib.bib6)) 提出了基于 ChatGPT 的零-shot 文本到 SQL 方法，其中包括三个关键组件：清晰提示（CP）、带提示的校准（CH）和一致输出（CO）。
- en: •
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: DIN-SQL + GPT-4 DIN-SQL Pourreza and Rafiei ([2023](#bib.bib18)) utilizes multi-step
    decomposition and self-correction to effectively improve the performance of context-based
    learning methods on text-to-SQL tasks.
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: DIN-SQL + GPT-4 DIN-SQL Pourreza 和 Rafiei ([2023](#bib.bib18)) 利用多步骤分解和自我校正来有效提高基于上下文的学习方法在文本到
    SQL 任务中的性能。
- en: •
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: DAIL-SQL + GPT-4 + SC DAIL-SQL Gao et al. ([2023](#bib.bib8)) systematically
    and extensively compares existing prompting strategies and proposes a novel integrated
    solution. It is the best method based on LLMs.
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: DAIL-SQL + GPT-4 + SC DAIL-SQL Gao 等人 ([2023](#bib.bib8)) 系统性地广泛比较了现有的提示策略，并提出了一种新颖的综合解决方案。这是基于
    LLMs 的最佳方法。
- en: •
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: •
- en: 'MAC-SQL MAC-SQL Wang et al. ([2023](#bib.bib24)) proposes an innovative LLM-based
    multi-agent framework for the Text-to-SQL task. It consists of three agents: the
    Selector, which condenses databases and retains relevant table schemas; the Decomposer,
    breaking down complex questions into simpler sub-problems; and the Refiner, responsible
    for validating and refining SQL.'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: MAC-SQL MAC-SQL Wang 等人 ([2023](#bib.bib24)) 提出了一个创新的基于 LLM 的多代理框架用于文本到 SQL
    任务。它由三个代理组成：选择器（Selector），用于压缩数据库并保留相关的表模式；分解器（Decomposer），将复杂的问题分解为更简单的子问题；以及修正器（Refiner），负责验证和修正
    SQL。
- en: A.2 Intergrated with other LLMs
  id: totrans-185
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: A.2 与其他 LLMs 集成
- en: 'In the main article, to better explore the performance of LLMs, we chose the
    advanced GPT4 model as the base model for experimentation, while this section
    mainly supplements the introduction of experimental results using other models
    as the base model. As can be seen from Table [6](#A1.T6 "Table 6 ‣ A.2 Intergrated
    with other LLMs ‣ Appendix A Experimental Supplement ‣ Decomposition for Enhancing
    Attention: Improving LLM-based Text-to-SQL through Workflow Paradigm"), the use
    of our proposed DEA-SQL method effectively improved the model’s execution accuracy
    in the text-to-SQL task, proving the effectiveness of the decomposing for enhanced
    attention workflow paradigm.'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '在主要文章中，为了更好地探索 LLMs 的性能，我们选择了先进的 GPT4 模型作为实验的基础模型，而本节主要补充了使用其他模型作为基础模型的实验结果介绍。从表
    [6](#A1.T6 "Table 6 ‣ A.2 Intergrated with other LLMs ‣ Appendix A Experimental
    Supplement ‣ Decomposition for Enhancing Attention: Improving LLM-based Text-to-SQL
    through Workflow Paradigm") 可以看出，我们提出的 DEA-SQL 方法有效提高了模型在文本到 SQL 任务中的执行准确性，证明了基于工作流范式的注意力增强分解方法的有效性。'
- en: 'Table 6: Performance comparison of different LLMs when applied DEA-SQL.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 表 6：不同 LLMs 应用 DEA-SQL 时的性能比较。
- en: '| LLM | Easy | Medium | Hard | Extra | All |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| LLM | Easy | Medium | Hard | Extra | All |'
- en: '| --- | --- | --- | --- | --- | --- |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- | --- | --- |'
- en: '| Llama-2-13B-chat | 0.762 | 0.500 | 0.287 | 0.157 | 0.472 |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| Llama-2-13B-chat | 0.762 | 0.500 | 0.287 | 0.157 | 0.472 |'
- en: '| +DEA-SQL | 0.823 | 0.585 | 0.374 | 0.145 | 0.536 |'
  id: totrans-191
  prefs: []
  type: TYPE_TB
  zh: '| +DEA-SQL | 0.823 | 0.585 | 0.374 | 0.145 | 0.536 |'
- en: '| WizardCoder-15B-V1.0 | 0.859 | 0.774 | 0.540 | 0.289 | 0.677 |'
  id: totrans-192
  prefs: []
  type: TYPE_TB
  zh: '| WizardCoder-15B-V1.0 | 0.859 | 0.774 | 0.540 | 0.289 | 0.677 |'
- en: '| +DEA-SQL | 0.879 | 0.816 | 0.557 | 0.319 | 0.708 |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| +DEA-SQL | 0.879 | 0.816 | 0.557 | 0.319 | 0.708 |'
- en: '| CodeLlama-13B-Instruct | 0.806 | 0.749 | 0.529 | 0.380 | 0.666 |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| CodeLlama-13B-Instruct | 0.806 | 0.749 | 0.529 | 0.380 | 0.666 |'
- en: '| +DEA-SQL | 0.871 | 0.796 | 0.546 | 0.380 | 0.705 |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| +DEA-SQL | 0.871 | 0.796 | 0.546 | 0.380 | 0.705 |'
- en: Appendix B Prompts
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录 B 提示
- en: In order to facilitate a better understanding of our approach, this section
    provides a comprehensive list of prompts for each of the steps in DEA-SQL’s entire
    workflow approach.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 为了便于更好地理解我们的方法，本节提供了 DEA-SQL 整个工作流方法中每个步骤的全面提示列表。
- en: B.1 Identify Problem Elements Prompt
  id: totrans-198
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.1 识别问题元素提示
- en: Assuming that you are a natural language processing expert and statistician,
    and a data analyst, please understand the business requirements and break down
    the requirements description into statistical elements. It is required to break
    down user problems into entities, and the main information in the original problem
    cannot be lost.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你是一名自然语言处理专家、统计学家和数据分析师，请理解业务需求并将需求描述分解为统计元素。要求将用户问题分解为实体，并且原问题中的主要信息不能丢失。
- en: 'Here are some examples:'
  id: totrans-200
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 这里有一些示例：
- en: What is the name of the staff that is in charge of the attraction named ’US
    museum’?
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 负责名为“美国博物馆”景点的工作人员的姓名是什么？
- en: 'output: {"entities": ["staff", "the attraction named ’US museum’"], "query":
    "the name of the staff that is in charge of the attraction named ÜS museum"̈}'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["工作人员", "名为‘美国博物馆’的景点"], "query": "负责名为‘美国博物馆’景点的工作人员的姓名"}'
- en: How many heads of the departments are older than 56 ?
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 有多少位部门负责人年龄超过56岁？
- en: 'output: {"entities": ["age older than 56", "number of heads of the departments"],
    "query": "Number of department heads over 56 years old"}'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["年龄超过56岁", "部门负责人的数量"], "query": "年龄超过56岁的部门负责人数量"}'
- en: List the name, born state and age of the heads of departments ordered by age.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 按年龄排序列出部门负责人的姓名、出生地和年龄。
- en: 'output: {"entities": ["name of the heads of departments", "born state of the
    heads of departments", "age of the heads of departments", "age"], "query": "List
    the name, born state and age of the heads of departments ordered by age."}'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["部门负责人姓名", "部门负责人出生地", "部门负责人年龄", "年龄"], "query": "按年龄排序列出部门负责人的姓名、出生地和年龄。"}'
- en: what is the average, minimum, and maximum age of all singers from Chinese?
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 所有中国歌手的平均年龄、最小年龄和最大年龄是多少？
- en: 'output: {"entities": ["Chinese", "age of all singers"], "query": "The average,
    minimum, and maximum age of all singers from Chinese"}'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["中国人", "所有歌手的年龄"], "query": "所有中国歌手的平均年龄、最小年龄和最大年龄"}'
- en: Return the different descriptions of formulas that has been used in the textbook.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 返回教材中使用的不同公式的描述。
- en: 'output: {"entities": ["the different descriptions of formulas", "formulas",
    "used in the textbook"], "query": "The different descriptions of formulas that
    has been used in the textbook"}'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["不同的公式描述", "公式", "在教材中使用的"], "query": "教材中使用的不同公式的描述"}'
- en: What are the details of the markets that can be accessed by walk or bus?
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 可以步行或乘公交车到达的市场的详细信息是什么？
- en: 'output: {"entities": ["the details of the markets", "can be accessed by walk
    or busk"], "query": "The details of the markets that can be accessed by walk or
    bus"}'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["市场的详细信息", "可以步行或乘公交车到达"], "query": "可以步行或乘公交车到达的市场的详细信息"}'
- en: Show the name of colleges that have at least two players.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 显示至少有两个球员的学院名称。
- en: 'output: {"entities": ["the name of colleges", "players"], "query": "The name
    of colleges that have at least two players"}'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["学院名称", "球员"], "query": "至少有两个球员的学院名称"}'
- en: How many gold medals has the club with the most coaches won?
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有最多教练的俱乐部赢得了多少金牌？
- en: 'output: {"entities": ["gold medals", "club", "coaches"], "query": "The number
    of gold medals has the club with the most coaches won"}'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["金牌", "俱乐部", "教练"], "query": "拥有最多教练的俱乐部赢得了多少金牌"}'
- en: List the nominees that have been nominated more than two musicals.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 列出已经被提名超过两个音乐剧的提名者。
- en: 'output: {"entities": ["nominees", "nominees that have been nominated", "musicals"],
    "query": "The nominees that have been nominated more than two musicals"}'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 'output: {"entities": ["提名者", "已经被提名的提名者", "音乐剧"], "query": "已经被提名超过两个音乐剧的提名者"}'
- en: 'Please be sure to follow the following specifications:'
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请务必遵循以下规格：
- en: 1."entities" refers to all entities in the requirements, including all description
    information in the requirements.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 1."entities"指的是要求中的所有实体，包括要求中的所有描述信息。
- en: '2.Your output must be output in json format, and only this json needs to be
    returned. It needs to include all fields in json. The json format is as follows:
    {"entities":[entities], "query":"Rewritten question, removing unnecessary content"}'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '2.您的输出必须以JSON格式返回，并且只需返回此JSON。需要包含JSON中的所有字段。JSON格式如下: {"entities":[entities],
    "query":"重写的问题，去除不必要的内容"}'
- en: '[query input] output:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '[查询输入] 输出：'
- en: B.2 Information filter Prompt
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.2 信息过滤提示
- en: '[table_info]'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '[表格信息]'
- en: 'User question: [query]'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '用户问题: [查询]'
- en: 'Entity information: [limitation]'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '实体信息: [限制]'
- en: need
  id: totrans-227
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 需要
- en: You are a data analyst. In business, you need to use the above table information
    to complete a SQL query code to solve user problems. I would like to ask you to
    first match the table fields or calculation methods required by the [limitation]
    entity, and then determine the calculation method of [main_metric], and finally
    determine the required table and all related field information and give some key
    information for writing SQL.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 你是一名数据分析师。在业务中，你需要使用上述表格信息完成 SQL 查询代码以解决用户问题。我希望你首先匹配 [limitation] 实体所需的表格字段或计算方法，然后确定
    [main_metric] 的计算方法，最后确定所需表格和所有相关字段信息，并提供一些编写 SQL 的关键信息。
- en: Note that all table names must be their original names, and the output of field
    names must be the original field names in the table.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 注意所有表格名称必须保持原样，字段名称的输出必须是表格中的原始字段名称。
- en: Please be sure to comply with the following specifications
  id: totrans-230
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请务必遵守以下规格
- en: 1\. Element matching needs to output the most related table fields (one or more)
    or calculation methods and required field names required by the entities; yyy1
    is the table field that needs to be selected to calculate the entity and the answer
    is in the form of “‘colunm_name“‘. Note that an entity may require multiple fields;
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 元素匹配需要输出与实体最相关的表字段（一个或多个）或计算方法和所需字段名称；yyy1 是需要选择的计算实体的表字段，答案形式为 “‘colunm_name“‘。注意一个实体可能需要多个字段；
- en: 2\. bbb is the calculation method of [main_metric];
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. bbb 是 [main_metric] 的计算方法；
- en: '3\. Required table information: Not all tables may need to be selected, depending
    on the specific problem.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 所需的表格信息：并非所有表格都需要选择，具体问题视情况而定。
- en: 3.1\. Select the table and related fields based on the user questions, entity
    information and element matching information you have given above;
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 3.1\. 根据用户问题、实体信息和上面提供的元素匹配信息选择表格及相关字段；
- en: 3.2\. The where statement condition only gives the conditions of the corresponding
    table;
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 3.2\. where 语句条件仅给出相应表格的条件；
- en: 3.3\. All field names required by SQL under the table must include the fields
    actually needed under the corresponding table. Note that you cannot select fields
    that are not under the previous table name, and do not select all fields. You
    must include all the fields that are needed for the table;
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 3.3\. 表下所有 SQL 所需字段必须包括相应表下实际需要的字段。注意不能选择不在前一个表格名下的字段，也不要选择所有字段。必须包括表格所需的所有字段；
- en: 4\. Multi-table joint fields and conditions need to find out the associated
    fields and conditions between multiple tables from the above table information;
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 多表连接字段和条件需要从上述表格信息中找出多个表格之间的关联字段和条件；
- en: 5\. "All fields" must to include all the fields actually used in sql !!! You
    must include all the fields that are needed for the table;
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. “所有字段”必须包括 SQL 实际使用的所有字段！！！你必须包括表格所需的所有字段；
- en: '6\. Think step by step, and finally summarize that your output is only in the
    given json format: "Element matching": output_format, "main_metric calculation
    method": "bbb", "Required table information": ["Table name": "xxx", "where statement
    condition": "ccc", "All field names required by SQL under this table": ["yyy1",
    "yyy2", "yyy3"], "Table name": "xxx", "where statement condition": "ccc", "All
    field names required by SQL under this table": ["yyy1", "yyy2", "yyy3"]], "Multiple
    table joint fields and conditions": "ccc", "sql": "ddd", "All fields": ["yyy1",
    "yyy2", "yyy3"]'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '6\. 分步骤思考，最终总结你的输出仅以给定的 JSON 格式： "Element matching": output_format, "main_metric
    calculation method": "bbb", "Required table information": ["Table name": "xxx",
    "where statement condition": "ccc", "All field names required by SQL under this
    table": ["yyy1", "yyy2", "yyy3"], "Table name": "xxx", "where statement condition":
    "ccc", "All field names required by SQL under this table": ["yyy1", "yyy2", "yyy3"]],
    "Multiple table joint fields and conditions": "ccc", "sql": "ddd", "All fields":
    ["yyy1", "yyy2", "yyy3"]'
- en: B.3 Question Classification Prompt
  id: totrans-240
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.3 问题分类提示
- en: For the given question that requires writing SQL, classify it with two labels.
    You can choose the first label from NON-JOIN and JOIN and choose the second label
    from NON-NESTED and NESTED.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 对于需要编写 SQL 的给定问题，用两个标签进行分类。可以从 NON-JOIN 和 JOIN 中选择第一个标签，从 NON-NESTED 和 NESTED
    中选择第二个标签。
- en: Some table infos and examples
  id: totrans-242
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一些表格信息和示例
- en: 'Q: What are the names and revenues of the companies with the highest revenues
    in each headquarter city?'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q: 每个总部城市中收入最高的公司的名称和收入是多少？'
- en: 'table_info: CREATE TABLE MANUFACTURERS ('
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 'table_info: CREATE TABLE MANUFACTURERS ('
- en: code INTEGER
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: code INTEGER
- en: name VARCHAR(255) NOT NULL
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: name VARCHAR(255) NOT NULL
- en: headquarter VARCHAR(255) NOT NULL
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: headquarter VARCHAR(255) NOT NULL
- en: founder VARCHAR(255) NOT NULL
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: founder VARCHAR(255) NOT NULL
- en: revenue REAL
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: revenue REAL
- en: PRIMARY KEY (code)
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (code)
- en: );
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: CREATE TABLE PRODUCTS (
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表 PRODUCTS (
- en: code INTEGER
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: code INTEGER
- en: name VARCHAR(255) NOT NULL
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: name VARCHAR(255) NOT NULL
- en: price DECIMAL NOT NULL
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: price DECIMAL NOT NULL
- en: manufacturer INTEGER NOT NULL
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: manufacturer INTEGER NOT NULL
- en: PRIMARY KEY (code),
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (code),
- en: FOREIGN KEY (manufacturer) REFERENCES Manufacturers(code)
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 外键 (manufacturer) 引用 Manufacturers(code)
- en: );
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'A: Let’s think step by step. The SQL query for the question ’What are the names
    and revenues of the companies with the highest revenues in each headquarter city?’
    needs these tables and columns = [MANUFACTURERS.name, MANUFACTURERS.revenue, MANUFACTURERS.headquarter],
    so we don’t need joint condition and label it as NON-JOIN. Plus, it doesn’t require
    nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN). so we label it as
    NON-NESTED.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 答：让我们一步步思考。针对问题“每个总部城市中收入最高的公司名称和收入是多少？”的SQL查询需要以下表和列 = [MANUFACTURERS.name,
    MANUFACTURERS.revenue, MANUFACTURERS.headquarter]，因此我们不需要连接条件，将其标记为非连接（NON-JOIN）。此外，它不需要嵌套查询（INTERSECT,
    UNION, EXCEPT, IN, NOT IN）。所以我们标记为非嵌套（NON-NESTED）。
- en: Thus the SQL query can be classified as NON-JOIN, NON-NESTED
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，该SQL查询可以被分类为非连接（NON-JOIN），非嵌套（NON-NESTED）
- en: 'Label: NON-JOIN, NON-NESTED'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 标签：NON-JOIN, NON-NESTED
- en: 'Q: Which studios have an average gross of over 4500000?'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 问：哪些影棚的平均收入超过4500000？
- en: 'table_info: CREATE TABLE FILM ('
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 'table_info: 创建表 FILM ('
- en: studio text
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: studio text
- en: gross_in_dollar int
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: gross_in_dollar int
- en: PRIMARY KEY (Film_ID)
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (Film_ID)
- en: );
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'A: Let’s think step by step. The SQL query for the question ’Which studios
    have an average gross of over 4500000?’ needs these table and column = [FILM.studio,
    AVG(FILM.gross_in_dollar)], so we don’t need joint condition and label it as NON-JOIN.
    Plus, it doesn’t require nested queries with (INTERSECT, UNION, EXCEPT, IN, NOT
    IN). So we label it as NON-NESTED.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 答：让我们一步步思考。针对问题“哪些影棚的平均收入超过4500000？”的SQL查询需要以下表和列 = [FILM.studio, AVG(FILM.gross_in_dollar)]，因此我们不需要连接条件，将其标记为非连接（NON-JOIN）。此外，它不需要嵌套查询（INTERSECT,
    UNION, EXCEPT, IN, NOT IN）。所以我们标记为非嵌套（NON-NESTED）。
- en: Thus the SQL query can be classified as NON-JOIN, NON-NESTED
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，该SQL查询可以被分类为非连接（NON-JOIN），非嵌套（NON-NESTED）
- en: 'Label: NON-JOIN, NON-NESTED'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 标签：NON-JOIN, NON-NESTED
- en: 'Q: What are the products with the maximum page size A4 that also have a pages
    per minute color smaller than 5?'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 问：哪些产品的最大页面大小为A4，并且每分钟彩色页面数小于5？
- en: 'table_info: CREATE TABLE PRODUCT ('
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 'table_info: 创建表 PRODUCT ('
- en: product_id int
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: product_id int
- en: product text
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: product text
- en: dimensions text
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: dimensions text
- en: dpi real
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: dpi real
- en: pages_per_minute_color real
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: pages_per_minute_color real
- en: max_page_size text
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: max_page_size text
- en: interface text
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: interface text
- en: PRIMARY KEY (product_id)
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (product_id)
- en: );
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'A: Let’s think step by step. The SQL query for the question ’What are the products
    with the maximum page size A4 that also have a pages per minute color smaller
    than 5?’ needs these table and columns = [PRODUCT.product, PRODUCT.max_page_size,
    PRODUCT.pages_per_minute_color], so we don’t need joint condition and label it
    as NON-JOIN. Plus, it requires nested queries with (INTERSECT, UNION, EXCEPT,
    IN, NOT IN), and we need the answer to the questions = [’What is the maximum page
    size A4 of the products’]. So it need nested queries and we label it as NESTED.'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 答：让我们一步步思考。针对问题“哪些产品的最大页面大小为A4，并且每分钟彩色页面数小于5？”的SQL查询需要以下表和列 = [PRODUCT.product,
    PRODUCT.max_page_size, PRODUCT.pages_per_minute_color]，因此我们不需要连接条件，将其标记为非连接（NON-JOIN）。此外，它需要嵌套查询（INTERSECT,
    UNION, EXCEPT, IN, NOT IN），我们需要回答的问题 = [“产品的最大页面大小A4是多少”]。所以它需要嵌套查询，我们标记为嵌套（NESTED）。
- en: Thus the SQL query can be classified as NON-JOIN, NESTED.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，该SQL查询可以被分类为非连接（NON-JOIN），嵌套（NESTED）。
- en: 'Label: NON-JOIN, NESTED'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 标签：NON-JOIN, NESTED
- en: 'Q: Show names for all stadiums except for stadiums having a concert in year
    2014.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 问：展示所有体育场的名称，但排除在2014年举办过音乐会的体育场。
- en: 'table_info: CREATE TABLE STADIUM ('
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 'table_info: 创建表 STADIUM ('
- en: stadium_ID int
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: stadium_ID int
- en: location text
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: location text
- en: name text
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: name text
- en: capacity int
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: capacity int
- en: highest int
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: highest int
- en: lowest int
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: lowest int
- en: average int
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: average int
- en: PRIMARY KEY (Stadium_ID)
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (Stadium_ID)
- en: );
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: CREATE TABLE CONCERT (
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 创建表 CONCERT (
- en: concert_ID int
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: concert_ID int
- en: concert_Name text
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: concert_Name text
- en: theme text
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: theme text
- en: stadium_ID text
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: stadium_ID text
- en: year text
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: year text
- en: PRIMARY KEY (concert_ID),
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (concert_ID),
- en: FOREIGN KEY (stadium_ID) REFERENCES stadium(stadium_ID)
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 外键 (stadium_ID) 引用 stadium(stadium_ID)
- en: );
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'A: Let’s think step by step. The SQL query for the question ’Show names for
    all stadiums except for stadiums having a concert in year 2014.’ needs these table
    and columns = [STADIUM.name, CONCERT.year], so we need a JOIN operation on the
    STADIUM and CONCERT tables using the stadium_ID column because we we need to exclude
    stadiums with concerts in 2014\. So we label it as JOIN. Plus, it requires nested
    queries with (INTERSECT, UNION, EXCEPT, IN, NOT IN), and we need the answer to
    the questions = [’What is the stadiums having a concert in year 2014’]. So it
    need nested queries and we label it as NESTED.'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 让我们一步步来思考。针对问题’显示所有体育场的名称，除了2014年有演唱会的体育场’的SQL查询需要这些表和列 = [STADIUM.name,
    CONCERT.year]，所以我们需要在STADIUM和CONCERT表上使用stadium_ID列进行JOIN操作，因为我们需要排除2014年有演唱会的体育场。所以我们将其标记为JOIN。此外，它需要使用（INTERSECT,
    UNION, EXCEPT, IN, NOT IN）进行嵌套查询，并且我们需要问题的答案 = [‘2014年有演唱会的体育场’]。因此它需要嵌套查询，我们将其标记为NESTED。'
- en: Thus the SQL query can be classified as JOIN, NESTED.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，SQL查询可以被归类为JOIN, NESTED。
- en: 'Label: JOIN, NESTED'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: '标签: JOIN, NESTED'
- en: 'Q: How many songs have a shared vocal?'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q: 有多少首歌曲有共享的声乐？'
- en: 'table_info: CREATE TABLE SONGS ('
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: '表信息: CREATE TABLE SONGS ('
- en: SongId INTEGER PRIMARY KEY,
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: SongId INTEGER PRIMARY KEY,
- en: );
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: CREATE TABLE VOCALS (
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: CREATE TABLE VOCALS (
- en: SongId INTEGER
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: SongId INTEGER
- en: Bandmate INTEGER
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: Bandmate INTEGER
- en: PRIMARY KEY(SongId, Bandmate),
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY(SongId, Bandmate),
- en: FOREIGN KEY (SongId) REFERENCES Songs(SongId),
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: FOREIGN KEY (SongId) REFERENCES Songs(SongId),
- en: FOREIGN KEY (Bandmate) REFERENCES Band(Id)
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: FOREIGN KEY (Bandmate) REFERENCES Band(Id)
- en: );
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'A: Let’s think step by step. The SQL query for the question ’How many songs
    have a shared vocal?’ needs these table and columns = [SONGS.SongId, VOCALS.Bandmate],
    so we need a JOIN operation on the SONGS and VOCALS tables using the SongId column
    because we need to count the number of songs with a shared vocal. So we label
    it as JOIN. Plus, it does not require nested queries with (INTERSECT, UNION, EXCEPT,
    IN, NOT IN), so we label it as NON-NESTED.'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 让我们一步步来思考。针对问题’有多少首歌曲有共享的声乐’的SQL查询需要这些表和列 = [SONGS.SongId, VOCALS.Bandmate]，因此我们需要在SONGS和VOCALS表上使用SongId列进行JOIN操作，因为我们需要统计有共享声乐的歌曲数量。所以我们将其标记为JOIN。此外，它不需要使用（INTERSECT,
    UNION, EXCEPT, IN, NOT IN）进行嵌套查询，所以我们将其标记为NON-NESTED。'
- en: Thus the SQL query can be classified as JOIN, NON-NESTED.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，SQL查询可以被归类为JOIN, NON-NESTED。
- en: 'Label: JOIN, NON-NESTED'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '标签: JOIN, NON-NESTED'
- en: 'Q: How many users who did not leave any review.'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q: 有多少用户没有留下任何评论。'
- en: 'table_info: CREATE TABLE USERACCT ('
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: '表信息: CREATE TABLE USERACCT ('
- en: u_id integer NOT NULL
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: u_id integer NOT NULL
- en: name varchar(128) DEFAULT NULL
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: name varchar(128) DEFAULT NULL
- en: PRIMARY KEY (u_id)
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: PRIMARY KEY (u_id)
- en: );
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: CREATE TABLE REVIEW (
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: CREATE TABLE REVIEW (
- en: a_id integer NOT NULL PRIMARY KEY
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: a_id integer NOT NULL PRIMARY KEY
- en: u_id integer NOT NULL
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: u_id integer NOT NULL
- en: FOREIGN KEY (u_id) REFERENCES useracct(u_id)
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: FOREIGN KEY (u_id) REFERENCES useracct(u_id)
- en: FOREIGN KEY (i_id) REFERENCES item(i_id)
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: FOREIGN KEY (i_id) REFERENCES item(i_id)
- en: );
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: );
- en: 'A: The SQL query for the question ’How many users who did not leave any review.’
    needs these table and columns = [USERACCT.name, REVIEW.u_id], so we need a JOIN
    operation on the USERACCT and REVIEW tables using the u_id column because we need
    to find users who did not leave any review.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 针对问题’有多少用户没有留下任何评论’的SQL查询需要这些表和列 = [USERACCT.name, REVIEW.u_id]，因此我们需要在USERACCT和REVIEW表上使用u_id列进行JOIN操作，因为我们需要找出没有留下评论的用户。'
- en: So we label it as JOIN. Plus, it requires nested queries with (INTERSECT, UNION,
    EXCEPT, IN, NOT IN), and we need the answer to the questions = [’What is the list
    of u_id who left a review?’]. So it needs nested queries and we label it as NESTED.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们将其标记为JOIN。此外，它需要使用（INTERSECT, UNION, EXCEPT, IN, NOT IN）进行嵌套查询，并且我们需要问题的答案
    = [‘留下评论的u_id列表’]。因此，它需要嵌套查询，我们将其标记为NESTED。
- en: Thus the SQL query can be classified as JOIN, NESTED.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，SQL查询可以被归类为JOIN, NESTED。
- en: 'Label: JOIN, NESTED'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: '标签: JOIN, NESTED'
- en: 'Issues you should be concerned about:'
  id: totrans-339
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你应该关注的问题：
- en: 'table info:[table_info] Q: [query] A:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: '表信息: [table_info] Q: [query] A:'
- en: B.4 SQL Generation Prompt
  id: totrans-341
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.4 SQL生成提示
- en: 'B.4.1 few-shot: easy class'
  id: totrans-342
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 'B.4.1 few-shot: 简单分类'
- en: '[few-shot]'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: '[few-shot]'
- en: 'Database scheme: [table_info]'
  id: totrans-344
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '数据库模式: [table_info]'
- en: Please think carefully about the related fields or calculation methods of ’[main_metric]’,
    then write valid SQLite to solve the following questions based on the above table
    information, and do not select extra columns that are not explicitly requested
    in the query.
  id: totrans-345
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 请仔细考虑与’[main_metric]’相关的字段或计算方法，然后编写有效的SQLite语句来解决基于上述表格信息的以下问题，并且不要选择查询中未明确请求的额外列。
- en: 'Query: [query] ### specification'
  id: totrans-346
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '查询: [query] ### 规范'
- en: 1.In sql, just select columns that are explicitly requested in the query.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 在SQL中，只选择查询中明确请求的列。
- en: '2.The output format must strictly meet the given json specification: "sql":
    "ccc"'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: '2.输出格式必须严格符合给定的 JSON 规范：“sql”: “ccc”'
- en: 'B.4.2 few-shot: join class'
  id: totrans-349
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: B.4.2 少量示例：加入类
- en: '[few-shot] ### Database scheme: [table_info] ### Please think carefully about
    the related fields or calculation methods of ’[main_metric]’, then write valid
    SQLite to solve the following questions based on the above table information,
    and do not select extra columns that are not explicitly requested in the query.'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '[few-shot] ### 数据库模式：[table_info] ### 请仔细考虑与''[main_metric]''相关的字段或计算方法，然后基于上述表信息编写有效的
    SQLite 查询来解决以下问题，并且不要选择查询中没有明确要求的额外列。'
- en: 'Query: [query] ### HINT: The question may need connection operation like JOIN.'
  id: totrans-351
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '查询：[query] ### 提示：问题可能需要连接操作，如 JOIN。'
- en: specification
  id: totrans-352
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 规范
- en: 1."LIMIT" just is used when explicitly requesting how much to retrieve in the
    query.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 1."LIMIT" 仅在查询中明确请求检索数量时使用。
- en: 2.In sql, just select columns that are explicitly requested in the query.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 2.在 SQL 中，只选择查询中明确要求的列。
- en: '3.The output format must strictly meet the given json specification: "sql":
    "ccc"'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: '3.输出格式必须严格符合给定的 JSON 规范：“sql”: “ccc”'
- en: 'B.4.3 few-shot: join-nested or nested class'
  id: totrans-356
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: B.4.3 少量示例：连接-嵌套或嵌套类
- en: '[few-shot] ### Database scheme:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '[few-shot] ### 数据库模式：'
- en: '[table_info] ### Please think carefully about the related fields or calculation
    methods of ’[main_metric]’, then write valid SQLite to solve the following questions
    based on the above table information, and do not select extra columns that are
    not explicitly requested in the query.'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '[table_info] ### 请仔细考虑与''[main_metric]''相关的字段或计算方法，然后基于上述表信息编写有效的 SQLite 查询来解决以下问题，并且不要选择查询中没有明确要求的额外列。'
- en: 'Query: [query] ### HINT: The question may needs nested queries like INTERSECT,
    UNION, EXCEPT, NOT IN.'
  id: totrans-359
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '查询：[query] ### 提示：问题可能需要嵌套查询，如 INTERSECT、UNION、EXCEPT、NOT IN。'
- en: specification
  id: totrans-360
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 规范
- en: 1."LIMIT" just is used when explicitly requesting how much to retrieve in the
    query.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 1."LIMIT" 仅在查询中明确请求检索数量时使用。
- en: 2.Don’t use "IN", "OR", "LEFT JOIN" in sql because they aren’t supported in
    execution engine, you can use "INTERSECT" or "EXCEPT" instead.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 2.不要在 SQL 中使用 "IN"、"OR"、"LEFT JOIN"，因为这些在执行引擎中不支持，你可以使用 "INTERSECT" 或 "EXCEPT"
    代替。
- en: 3.In sql, just select columns that are explicitly requested in the query.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 3.在 SQL 中，只选择查询中明确要求的列。
- en: '4.The output format must strictly meet the given json specification: "sql":
    "ccc"'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '4.输出格式必须严格符合给定的 JSON 规范：“sql”: “ccc”'
- en: B.5 Self Correction Prompt
  id: totrans-365
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.5 自我修正提示
- en: For the given question, use the Database scheme to fix the given SQLite QUERY
    for any issues.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 对于给定的问题，使用数据库模式修正给定的 SQLite 查询中的任何问题。
- en: If there are any problems, please fix them.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有任何问题，请修复。
- en: If there are no issues, return SQLite QUERY as is.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有问题，请按原样返回 SQLite 查询。
- en: 'There are some instructions for fixing the SQL query:'
  id: totrans-369
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修正 SQL 查询的一些说明：
- en: 1) In sql, just select columns that are explicitly requested in the query.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 1) 在 SQL 中，只选择查询中明确要求的列。
- en: 2) Pay attention to the columns that are used for the SELECT clause. Fix possible
    ambiguous columns if there are the same columns in different table in the SELECT
    clause.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 2) 注意 SELECT 子句中使用的列。如果 SELECT 子句中有相同的列，请修复可能的歧义列。
- en: 3) Pay attention to the correspondence between tables and fields. Cannot use
    fields that are not in the table.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 3) 注意表和字段之间的对应关系。不能使用表中不存在的字段。
- en: 4) Pay attention to the columns that are used for the JOIN. The join table condition
    must be in the Foreign_keys.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 4) 注意用于 JOIN 的列。连接表条件必须在 Foreign_keys 中。
- en: 5) Pay attention to the use of the JOIN. Don’t use LEFT JOIN unless necessary.
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 5) 注意 JOIN 的使用。除非必要，否则不要使用 LEFT JOIN。
- en: 6) Only change the SELECT, GROUP BY and ORDER BY clause when necessary.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 6) 仅在必要时更改 SELECT、GROUP BY 和 ORDER BY 子句。
- en: '7) Database scheme: [table_info]'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 7) 数据库模式：[table_info]
- en: 'Question: [query]'
  id: totrans-377
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 问题：[query]
- en: 'SQLite SQL QUERY:'
  id: totrans-378
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SQLite SQL 查询：
- en: '[sql]'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: '[sql]'
- en: 'Fixed SQL QUERY:'
  id: totrans-380
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 修正后的 SQL 查询：
- en: SELECT
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: SELECT
- en: B.6 Active Learning Prompt
  id: totrans-382
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: B.6 主动学习提示
- en: Please determine the type of question. If it is an extremum problem, modify
    the SQL accordingly.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 请确定问题的类型。如果是极值问题，请相应地修改 SQL。
- en: If not, use the original SQL as the modified SQL.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不是，请使用原始 SQL 作为修改后的 SQL。
- en: 'Q1: What is the name of the instructor who advises the student with the greatest
    number of total credits?'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q1: 询问建议学生总学分最多的导师的姓名是什么？'
- en: 'original SQL: SELECT T2.name FROM instructor T2 JOIN advisor T1 ON T2.id =
    T1.i_id JOIN student s ON T1.s_id = T3.id WHERE T3.tot_cred = (SELECT MAX(tot_cred)
    FROM student)'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '原始 SQL: SELECT T2.name FROM instructor T2 JOIN advisor T1 ON T2.id = T1.i_id
    JOIN student s ON T1.s_id = T3.id WHERE T3.tot_cred = (SELECT MAX(tot_cred) FROM
    student)'
- en: 'A: The question is an extremum problem, so i should modify the SQL. The modified
    SQL: SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id
    JOIN student AS T3 ON T1.s_id = T3.id ORDER BY T3.tot_cred DESC LIMIT 1'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 这个问题是一个极值问题，所以我应该修改 SQL。修改后的 SQL: SELECT T2.name FROM advisor AS T1 JOIN
    instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id ORDER
    BY T3.tot_cred DESC LIMIT 1'
- en: 'Q2: Return the id and full name of the customer who has the fewest accounts.'
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q2: 返回拥有最少账户的客户的 ID 和全名。'
- en: 'original SQL: SELECT c.customer_id, c.customer_first_name, c.customer_last_name
    FROM CUSTOMERS c JOIN ACCOUNTS a ON c.customer_id = a.customer_id GROUP BY c.customer_id
    HAVING COUNT(a.account_id) = (SELECT COUNT(account_id) FROM ACCOUNTS GROUP BY
    customer_id ORDER BY COUNT(account_id) ASC LIMIT 1)'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '原始 SQL: SELECT c.customer_id, c.customer_first_name, c.customer_last_name FROM
    CUSTOMERS c JOIN ACCOUNTS a ON c.customer_id = a.customer_id GROUP BY c.customer_id
    HAVING COUNT(a.account_id) = (SELECT COUNT(account_id) FROM ACCOUNTS GROUP BY
    customer_id ORDER BY COUNT(account_id) ASC LIMIT 1)'
- en: 'A: The question is an extremum problem, so i should modify the SQL. The modified
    SQL: SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM
    Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
    GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 这个问题是一个极值问题，所以我应该修改 SQL。修改后的 SQL: SELECT T1.customer_id, T2.customer_first_name,
    T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id
    = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1'
- en: 'Q3: What is the average hours across all projects?'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q3: 所有项目的平均工时是多少？'
- en: 'original SQL: SELECT avg(hours) FROM projects'
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: '原始 SQL: SELECT avg(hours) FROM projects'
- en: 'A: The question is not an extremum problem, so i should use the original SQL
    as the modified SQL.'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 'A: 这个问题不是极值问题，所以我应该使用原始 SQL 作为修改后的 SQL。'
- en: 'The modified SQL: SELECT avg(hours) FROM projects'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '修改后的 SQL: SELECT avg(hours) FROM projects'
- en: 'Q4: [query]'
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 'Q4: [query]'
- en: '[table_info]'
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: '[table_info]'
- en: 'original SQL: [sql]'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '原始 SQL: [sql]'
- en: 'A:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 'A:'
